<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_Qoj6MNzqEeaMeaEvRdRzBA" name="TDA2">
    <eAnnotations xmi:id="_QvlvQNzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_QvmWUNzqEeaMeaEvRdRzBA" source="codegen">
        <details xmi:id="_QvmWUdzqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/src"/>
        <details xmi:id="_RhuW0NzqEeaMeaEvRdRzBA" key="AssociatedSourceCode" value="/TDA/src/tda/src/controller/Controller.java;1626122004/1;/TDA/src/tda/src/exceptions/WrongXMLAttributeException.java;1433118805/1;/TDA/src/tda/src/logic/Analyzer.java;2559399528/1;/TDA/src/tda/src/logic/Counters.java;3915960564/1;/TDA/src/tda/src/logic/Parser.java;4177923594/1;/TDA/src/tda/src/logic/StAXParser.java;237321266/1;/TDA/src/tda/src/logic/TestData.java;1683700078/1;/TDA/src/tda/src/logic/TestRun.java;4249523222/1;/TDA/src/tda/src/logic/TestRunStartTime.java;1854388698/1;/TDA/src/tda/src/logic/TestedClass.java;3977272468/1;/TDA/src/tda/src/logic/TreeNode.java;2680124610/1;/TDA/src/tda/src/logic/UnitTest.java;4231604347/1;/TDA/src/tda/src/logic/UnitTestsToTestRunMapper.java;1797588963/1;/TDA/test/TreeNodeTests.java;3392551099/1;/TDA/src/tda/src/logic/apriori/StrongRule.java;889339369/1;/TDA/src/tda/src/main/TDA.java;840845466/1;/TDA/src/tda/src/model/Model.java;3579044467/1;/TDA/src/tda/src/view/TDAAnalyzerView.java;1414241471/1;/TDA/src/tda/src/view/TDAChart.java;3332187249/1;/TDA/src/tda/src/view/TDAClassView.java;3325743499/1;/TDA/src/tda/src/view/TDAMenuBar.java;2369207099/1;/TDA/src/tda/src/view/TDATableView.java;3953803821/1;/TDA/src/tda/src/view/TDATestRunTotals.java;184701548/1;/TDA/src/tda/src/view/TDATreeView.java;1085733899/1;/TDA/src/tda/src/view/TDAcomparison.java;2639424816/1;/TDA/test/TestedClassTests.java;1409432206/1;/TDA/test/AllTests.java;3034773757/1;/TDA/test/CountersTests.java;1669155871/1;/TDA/test/TestDataTests.java;899771175/1;/TDA/test/TestRunStartTimeTests.java;1254219449/1;/TDA/test/TestRunTests.java;3437634974/1;/TDA/src/tda/src/view/View.java;1047224965/1;/TDA/src/tda/src/logic/apriori/AprioriAnalyzer.java;1880078505/1;/TDA/test/UnitTestTests.java;1013219599/1;/TDA/test/UnitTestsToTestRunMapperTests.java;4120553653/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_RJSosNzqEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_RJSosdzqEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_RJSostzqEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_RJSos9zqEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_RJSotNzqEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_RJSotdzqEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_RJSottzqEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_RJTPwNzqEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_RJTPwdzqEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_ROBXsNzqEeaMeaEvRdRzBA" name="TreeNodeTests">
      <eAnnotations xmi:id="_ROBXsdzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_ROBXstzqEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_ROBXs9zqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_RUyuENzqEeaMeaEvRdRzBA" name="testRun1" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RV1P59zqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RUyuEtzqEeaMeaEvRdRzBA" name="testRun2" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RV128dzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RUyuFNzqEeaMeaEvRdRzBA" name="unitTests" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RV129NzqEeaMeaEvRdRzBA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUyuFdzqEeaMeaEvRdRzBA" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUzVIdzqEeaMeaEvRdRzBA" value="new UnitTest[10]"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RUzVI9zqEeaMeaEvRdRzBA" name="root" visibility="private" type="_RN1KcNzqEeaMeaEvRdRzBA" association="_RV1299zqEeaMeaEvRdRzBA">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUzVJNzqEeaMeaEvRdRzBA" value="new TreeNode(&quot;/&quot;, null, null)"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RUzVJtzqEeaMeaEvRdRzBA" name="testedClass1" visibility="private" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RV2eAdzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RUzVKNzqEeaMeaEvRdRzBA" name="testedClass2" visibility="private" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RV2eBNzqEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVVgoNzqEeaMeaEvRdRzBA" name="setUp" specification="_ROCl1NzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun1 = new TestRun(&quot;Run1&quot;, &quot;run-name-1&quot;);
		testRun2 = new TestRun(&quot;Run2&quot;, &quot;run-name-2&quot;);

		int half = unitTests.length / 2;

		for (int i = 0; i &lt; half; i++) {
			unitTests[i] = new UnitTest(testRun1, &quot;test&quot; + i, &quot;fooTest&quot; + i, &quot;Run1fooTest&quot; + i, &quot;testFooBar&quot;);
		}

		for (int i = half; i &lt; unitTests.length; i++) {
			unitTests[i] = new UnitTest(testRun2, &quot;test&quot; + i, &quot;fooTest&quot; + i, &quot;Run2fooTest&quot; + i, &quot;testFooBar&quot;);
		}

		testedClass1 = new TestedClass(&quot;Foo.Bar.hui&quot;, unitTests[0]);
		testedClass2 = new TestedClass(&quot;Foo.Bor.Argh&quot;, unitTests[9]);
		Queue&lt;String> packageName1 = new LinkedList&lt;String>();
		Queue&lt;String> packageName2 = new LinkedList&lt;String>();
		packageName1.addAll(testedClass1.getPackageName());
		packageName2.addAll(testedClass2.getPackageName());
		
		root.insert(packageName1, testedClass1);
		root.insert(packageName2, testedClass2);
		System.out.println(root.printTree(2));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVVgodzqEeaMeaEvRdRzBA" name="testGetDistanceFOUR" specification="_RODM5NzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TreeNode node1 = root.searchNode(&quot;hui&quot;);
		TreeNode node2 = root.searchNode(&quot;Argh&quot;);
		System.out.println(node1.printTree(0));
		System.out.println(node2.printTree(0));
		int distance = node1.getDistance(node2);

		assertEquals(4, distance);
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_ROB-wNzqEeaMeaEvRdRzBA" name="setUpBeforeClass" isStatic="true" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROCl0NzqEeaMeaEvRdRzBA" name="tearDownAfterClass" isStatic="true" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROCl1NzqEeaMeaEvRdRzBA" name="setUp" method="_RVVgoNzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RODM4NzqEeaMeaEvRdRzBA" name="tearDown" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RODM5NzqEeaMeaEvRdRzBA" name="testGetDistanceFOUR" method="_RVVgodzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RJPlYNzqEeaMeaEvRdRzBA" name="tda">
      <packagedElement xmi:type="uml:Package" xmi:id="_RJQMcNzqEeaMeaEvRdRzBA" name="src">
        <packagedElement xmi:type="uml:Package" xmi:id="_RJQzhNzqEeaMeaEvRdRzBA" name="logic">
          <packagedElement xmi:type="uml:Interface" xmi:id="_RNUNENzqEeaMeaEvRdRzBA" name="Analyzer">
            <ownedOperation xmi:id="_RNU0INzqEeaMeaEvRdRzBA" name="analyze"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_RJigUNzqEeaMeaEvRdRzBA" name="apriori">
            <packagedElement xmi:type="uml:Class" xmi:id="_ROFCENzqEeaMeaEvRdRzBA" name="StrongRule">
              <ownedAttribute xmi:id="_RUz8MdzqEeaMeaEvRdRzBA" name="leftSide" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" isReadOnly="true" association="_RV2eB9zqEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUz8MtzqEeaMeaEvRdRzBA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RUz8M9zqEeaMeaEvRdRzBA" name="rightSide" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" isReadOnly="true" association="_RV3FEdzqEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUz8NNzqEeaMeaEvRdRzBA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RUz8NdzqEeaMeaEvRdRzBA" name="confidence" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RUz8NtzqEeaMeaEvRdRzBA" name="maxDistance" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_RUE8YNzqEeaMeaEvRdRzBA" client="_ROFCENzqEeaMeaEvRdRzBA" supplier="_RUAq8NzqEeaMeaEvRdRzBA" contract="_RUAq8NzqEeaMeaEvRdRzBA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVVgotzqEeaMeaEvRdRzBA" name="StrongRule" specification="_RUFjcdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVVgo9zqEeaMeaEvRdRzBA" name="leftSide" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVVgpNzqEeaMeaEvRdRzBA" name="rightSide" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVVgpdzqEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVVgptzqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>this.leftSide = leftSide;
		this.rightSide = rightSide;
		setConfidence(confidence);
		maxDistance = computeMaxDistance();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVVgp9zqEeaMeaEvRdRzBA" name="computeMaxDistance" specification="_ROFpINzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVVgqNzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int maxDistance = 0;
		
		// Distance between left and right side
		for (TestedClass leftClass : leftSide) {
			for (TestedClass rightClass : rightSide) {
				int distance = getDistance(leftClass, rightClass);
				if (distance > maxDistance) {
					maxDistance = distance;
				}
			}
		}
		
		// Distance for only the left side
		int distance = getMaxDistance(leftSide);
		if (distance > maxDistance) {
			maxDistance = distance;
		}
		
		// Distance for only the right side
		distance = getMaxDistance(rightSide);
		if (distance > maxDistance) {
			maxDistance = distance;
		}
	
		return maxDistance;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVVgqdzqEeaMeaEvRdRzBA" name="getMaxDistance" specification="_RUGKhNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVVgqtzqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVVgq9zqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (testedClasses.size() >= 2) return 0;
		
		int maxDistance = 0;
		
		for (int i = 0; i &lt; testedClasses.size() - 1; i++) {
			for (int j = i + 1; j &lt; testedClasses.size(); j++) {
				int distance = getDistance(testedClasses.get(i), testedClasses.get(j));
				if (distance > maxDistance) {
					maxDistance = distance;
				}
			}
		}
		return maxDistance;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVVgrNzqEeaMeaEvRdRzBA" name="getDistance" specification="_RTHTENzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVVgrdzqEeaMeaEvRdRzBA" name="classLeft" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVVgrtzqEeaMeaEvRdRzBA" name="classRight" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVVgr9zqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>TreeNode root = TestData.getInstance().getRoot();
		TreeNode leftNode = root.searchNode(classLeft.getClassName());
		TreeNode rightNode = root.searchNode(classRight.getClassName());
		
		return leftNode.getDistance(rightNode);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVVgsNzqEeaMeaEvRdRzBA" name="setConfidence" specification="_ROGQMNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVVgsdzqEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>// limit double to two digits after comma
		int round = (int) Math.round(confidence * 100);
		this.confidence = round / 100.0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVVgstzqEeaMeaEvRdRzBA" name="print" specification="_ROGQMtzqEeaMeaEvRdRzBA">
                <language>java</language>
                <body>System.out.println(toString());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWHsNzqEeaMeaEvRdRzBA" name="toString" specification="_ROGQM9zqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVWHsdzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return leftSide + &quot; -> &quot; + rightSide + &quot; | &quot; + confidence * 100 + &quot;%&quot;;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWHstzqEeaMeaEvRdRzBA" name="compareTo" specification="_RTH6I9zqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVWHs9zqEeaMeaEvRdRzBA" name="other" type="_ROFCENzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVWHtNzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (other.confidence > this.confidence) {
			return 1;
		} else if (other.confidence &lt; this.confidence) {
			return -1;
		} else {
			return 0;
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ROFpINzqEeaMeaEvRdRzBA" name="computeMaxDistance" visibility="private" method="_RVVgp9zqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_ROFpIdzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ROGQMNzqEeaMeaEvRdRzBA" name="setConfidence" visibility="private" method="_RVVgsNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_ROGQMdzqEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ROGQMtzqEeaMeaEvRdRzBA" name="print" method="_RVVgstzqEeaMeaEvRdRzBA"/>
              <ownedOperation xmi:id="_ROGQM9zqEeaMeaEvRdRzBA" name="toString" method="_RVWHsNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_ROGQNNzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RTHTENzqEeaMeaEvRdRzBA" name="getDistance" visibility="private" method="_RVVgrNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RTH6INzqEeaMeaEvRdRzBA" name="classLeft" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RTH6IdzqEeaMeaEvRdRzBA" name="classRight" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RTH6ItzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RTH6I9zqEeaMeaEvRdRzBA" name="compareTo" method="_RVWHstzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RTH6JNzqEeaMeaEvRdRzBA" name="other" type="_ROFCENzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RTH6JdzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RUFjcdzqEeaMeaEvRdRzBA" name="StrongRule" method="_RVVgotzqEeaMeaEvRdRzBA">
                <eAnnotations xmi:id="_RUFjddzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RUGKgNzqEeaMeaEvRdRzBA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RUFjctzqEeaMeaEvRdRzBA" name="leftSide" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUFjc9zqEeaMeaEvRdRzBA" name="rightSide" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUFjdNzqEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RUGKgdzqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUGKhNzqEeaMeaEvRdRzBA" name="getMaxDistance" visibility="private" method="_RVVgqdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RUGKhdzqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUGxkNzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_RPQt0NzqEeaMeaEvRdRzBA" name="AprioriAnalyzer">
              <ownedComment xmi:id="_RVnNddzqEeaMeaEvRdRzBA">
                <body>@author Tobias Schwartz
@version 2017-01-17
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_RVFpANzqEeaMeaEvRdRzBA" name="minSupport" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RVFpAtzqEeaMeaEvRdRzBA" name="minConfidence" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RVFpBNzqEeaMeaEvRdRzBA" name="items" visibility="package" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" association="_RWFul9zqEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVGQENzqEeaMeaEvRdRzBA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_RVGQEdzqEeaMeaEvRdRzBA" value="new LinkedList&lt;TestedClass>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RVGQE9zqEeaMeaEvRdRzBA" name="transactions" visibility="package" type="_RNqLUNzqEeaMeaEvRdRzBA" isOrdered="true" association="_RWGVodzqEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVGQFNzqEeaMeaEvRdRzBA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_RVGQFdzqEeaMeaEvRdRzBA" value="new LinkedList&lt;TestRun>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RVG3IdzqEeaMeaEvRdRzBA" name="itemSet" visibility="package" type="_RTLkgNzqEeaMeaEvRdRzBA" association="_RWGVpNzqEeaMeaEvRdRzBA"/>
              <ownedAttribute xmi:id="_RVG3JNzqEeaMeaEvRdRzBA" name="cachedStrongRules" visibility="package" type="_ROFCENzqEeaMeaEvRdRzBA" isOrdered="true" association="_RWGVp9zqEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVG3JdzqEeaMeaEvRdRzBA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_RVG3JtzqEeaMeaEvRdRzBA" value="new LinkedList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RVHeMdzqEeaMeaEvRdRzBA" name="cachedFrequentItemSets" visibility="package" type="_RTLkgNzqEeaMeaEvRdRzBA" association="_RWG8sNzqEeaMeaEvRdRzBA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_RVHeM9zqEeaMeaEvRdRzBA" value="new HashMap&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_RVHeNdzqEeaMeaEvRdRzBA" name="failedPercentage" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_RVHeNtzqEeaMeaEvRdRzBA" value="15"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_RTu-ItzqEeaMeaEvRdRzBA" client="_RPQt0NzqEeaMeaEvRdRzBA" supplier="_RNUNENzqEeaMeaEvRdRzBA" contract="_RNUNENzqEeaMeaEvRdRzBA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeqmdzqEeaMeaEvRdRzBA" name="AprioriAnalyzer" specification="_RPRU4NzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVeqmtzqEeaMeaEvRdRzBA" type="_RPQt0NzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>newAprioriAnalyzer(0.8);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeqm9zqEeaMeaEvRdRzBA" name="AprioriAnalyzer" specification="_RPR78dzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVeqnNzqEeaMeaEvRdRzBA" name="minConfidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVeqndzqEeaMeaEvRdRzBA" type="_RPQt0NzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>newAprioriAnalyzer(minConfidence);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeqntzqEeaMeaEvRdRzBA" name="newAprioriAnalyzer" specification="_RPR79tzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVeqn9zqEeaMeaEvRdRzBA" name="minConfidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>itemSet = new HashMap&lt;List&lt;TestedClass>, Integer>();

		this.minConfidence = minConfidence;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVfRoNzqEeaMeaEvRdRzBA" name="analyze" specification="_RPSjANzqEeaMeaEvRdRzBA">
                <language>java</language>
                <body>items = TestData.getInstance().getTestedClasses();
		transactions = TestData.getInstance().getTestRunList();
		
		minSupport = transactions.size() / 2;
		
		System.out.println(&quot;Starting Apriori with minimum support of &quot; + this.minSupport);

		// 1. Generate frequent item sets
		System.out.println(&quot;\nMaximal Frequent Item Sets:&quot;);
		HashMap&lt;List&lt;TestedClass>, Integer> frequentItemSet = getMaxFrequentItemSet();
		printItemSet(frequentItemSet);

		// 2. Generate strong rules from frequent item sets
		System.out.println(&quot;\nStrong Rules&quot;);
		List&lt;StrongRule> strongRules = generateStrongRules(frequentItemSet);
		
		// 3. Update Cache
		cachedFrequentItemSets = frequentItemSet;
		cachedStrongRules = strongRules;
		
		strongRules = getStrongRules(minConfidence); 
		for (StrongRule strongRule : strongRules) {
			strongRule.print();
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVfRodzqEeaMeaEvRdRzBA" name="getStrongRules" specification="_RPSjBNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVfRotzqEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVfRo9zqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVfRpNzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (cachedStrongRules.isEmpty()) {
			analyze();
		}
		return cachedStrongRules
				.stream()
				.parallel()
				.filter(rule -> rule.getConfidence() >= confidence)
				.sorted()
				.collect(Collectors.toList());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVfRpdzqEeaMeaEvRdRzBA" name="getStrongRules" specification="_RPTKENzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVfRptzqEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVfRp9zqEeaMeaEvRdRzBA" name="distance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVfRqNzqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVfRqdzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (cachedStrongRules.isEmpty()) {
			analyze();
		}
		
		return cachedStrongRules
				.stream()
				.parallel()
				.filter(rule -> rule.getConfidence() >= confidence)
				.filter(rule -> rule.getMaxDistance() &lt;= distance)
				.sorted()
				.collect(Collectors.toList());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVfRqtzqEeaMeaEvRdRzBA" name="getFrequentItemSets" specification="_RPTKFdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVfRq9zqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>if (cachedFrequentItemSets.isEmpty()) {
			analyze();
		}
		return cachedFrequentItemSets;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVfRrNzqEeaMeaEvRdRzBA" name="generateStrongRules" specification="_RUX3UdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVfRrdzqEeaMeaEvRdRzBA" name="frequentItemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVfRrtzqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVfRr9zqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;StrongRule> strongRules = new LinkedList&lt;>();

		for (Entry&lt;List&lt;TestedClass>, Integer> entry : frequentItemSet.entrySet()) {
			List&lt;TestedClass> entryKey = entry.getKey();

			HashMap&lt;List&lt;TestedClass>, Integer> powerItemSet = getPowerSet(entryKey);
			updateItemSet(powerItemSet);

			strongRules.addAll(generateStrongRulesForEntry(powerItemSet, entryKey));
		}

		return strongRules;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVfRsNzqEeaMeaEvRdRzBA" name="generateStrongRulesForEntry" specification="_RUYeYdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVfRsdzqEeaMeaEvRdRzBA" name="powerItemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVfRstzqEeaMeaEvRdRzBA" name="fullKey" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVfRs9zqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVfRtNzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;StrongRule> strongRules = new LinkedList&lt;>();

		// S -> (I - S)
		for (Entry&lt;List&lt;TestedClass>, Integer> entry : powerItemSet.entrySet()) {
			List&lt;TestedClass> entryKey = entry.getKey();
			if (entryKey.size() >= 1 &amp;&amp; entryKey.size() &lt; fullKey.size()) {
				List&lt;TestedClass> leftSide = entryKey;
				List&lt;TestedClass> rightSide = new LinkedList&lt;>();
				rightSide.addAll(fullKey);
				rightSide.removeAll(leftSide);

				// conf = support (I) / support (S)
				double confidence = (double) powerItemSet.get(fullKey) / entry.getValue();
				StrongRule strongRule = new StrongRule(leftSide, rightSide, confidence);
				strongRules.add(strongRule);
			}
		}
		return strongRules;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVfRtdzqEeaMeaEvRdRzBA" name="getPowerSet" specification="_RUZFcdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVfRttzqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVfRt9zqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;List&lt;TestedClass>, Integer> powerItemSet = new HashMap&lt;>();
		for (int i = 1; i &lt;= testedClasses.size(); i++) {
			powerItemSet.putAll(generateFixedSubset(i, testedClasses));
		}
		return powerItemSet;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVfRuNzqEeaMeaEvRdRzBA" name="getMaxFrequentItemSet" specification="_RPUYMNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVfRudzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>// Generate first item set as basis for the algorithm
		HashMap&lt;List&lt;TestedClass>, Integer> itemSet = getFirstItemSet();
		HashMap&lt;List&lt;TestedClass>, Integer> frqItemSet = pruneItemSet(itemSet, minSupport);

		// Helper to keep track of the last non empty frequent item set
		HashMap&lt;List&lt;TestedClass>, Integer> oldFrqItemSet = new HashMap&lt;List&lt;TestedClass>, Integer>();

		// Max frequent item set - to be returned
		HashMap&lt;List&lt;TestedClass>, Integer> maxFrequentItemSet = new HashMap&lt;List&lt;TestedClass>, Integer>();

		// length of item set
		int k = 1;

		while (!frqItemSet.isEmpty()) {
			oldFrqItemSet = frqItemSet;
			
			itemSet = initializeNewItemSet(frqItemSet, k + 1);
			updateItemSet(itemSet);

			itemSet = pruneItemSet(itemSet, minSupport);
			frqItemSet = eliminateInsignificantItems(itemSet, oldFrqItemSet);
			
			/*
			* if an entry of the old item set is not a subset of any new frq item set
			* (i.e. possible rule but no further correlations)
			* and its key size is greater than 2 (i.e. a rule can be obtained)
			* then add this entry to the max frequent item set
			*/
			for (Entry&lt;List&lt;TestedClass>, Integer> entry : oldFrqItemSet.entrySet()) {
				if (entry.getKey().size() >= 2 &amp;&amp; !isSubset(entry, frqItemSet)) {
					maxFrequentItemSet.putIfAbsent(entry.getKey(), entry.getValue());
				}
			}
			
			k++;
		}

		return maxFrequentItemSet;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVfRutzqEeaMeaEvRdRzBA" name="isSubset" specification="_RUZsgtzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVfRu9zqEeaMeaEvRdRzBA" name="entry" type="_RTMLkdzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVfRvNzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVfRvdzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return itemSet.keySet().stream().anyMatch(key -> key.containsAll(entry.getKey()));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVf4sNzqEeaMeaEvRdRzBA" name="eliminateInsignificantItems" specification="_RUa6oNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVf4sdzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVf4stzqEeaMeaEvRdRzBA" name="oldItemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVf4s9zqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;List&lt;TestedClass>, Integer> result = new HashMap&lt;>();

		for (Entry&lt;List&lt;TestedClass>, Integer> entry : itemSet.entrySet()) {
			HashMap&lt;List&lt;TestedClass>, Integer> subset = generateFixedSubset(entry.getKey().size() - 1, entry.getKey());
			if (subset.entrySet().stream().allMatch(e -> oldItemSet.containsKey(e.getKey()))) {
				result.put(entry.getKey(), entry.getValue());
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVf4tNzqEeaMeaEvRdRzBA" name="updateItemSet" specification="_RUbhsdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVf4tdzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>itemSet.values().parallelStream().map(v -> v = 0);
		
		for (TestRun testRun : transactions) {
			for (Entry&lt;List&lt;TestedClass>, Integer> entry : itemSet.entrySet()) {
				if (getFailedClasses(testRun).containsAll(entry.getKey())) {
					incrementItemSetValue(itemSet, entry.getKey());
				}
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVf4ttzqEeaMeaEvRdRzBA" name="initializeNewItemSet" specification="_RUbhtNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVf4t9zqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVf4uNzqEeaMeaEvRdRzBA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVf4udzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>List&lt;TestedClass> allTestedClasses = extractTestedClasses(itemSet);

		return generateFixedSubset(length, allTestedClasses);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVf4utzqEeaMeaEvRdRzBA" name="extractTestedClasses" specification="_RUcIxNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVf4u9zqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVf4vNzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVf4vdzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;TestedClass> result = new LinkedList&lt;TestedClass>();
		for (List&lt;TestedClass> testedClasses : itemSet.keySet()) {
			for (TestedClass testedClass : testedClasses) {
				if (!result.contains(testedClass)) {
					result.add(testedClass);
				}
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVf4vtzqEeaMeaEvRdRzBA" name="pruneItemSet" specification="_RUcv09zqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVf4v9zqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVf4wNzqEeaMeaEvRdRzBA" name="minSupport">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVf4wdzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;List&lt;TestedClass>, Integer> frqItemSet = new HashMap&lt;>();
		for (Entry&lt;List&lt;TestedClass>, Integer> entry : itemSet.entrySet()) {
			if (entry.getValue() >= Integer.valueOf(minSupport)) {
				frqItemSet.put(entry.getKey(), entry.getValue());
			}
		}
		return frqItemSet;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVf4wtzqEeaMeaEvRdRzBA" name="getFirstItemSet" specification="_RPVmUNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVf4w9zqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>return transactions.stream().map(testRun -> getFailedClasses(testRun)).collect(HashMap::new,
				(itemSet, testedClass) -> addTestedClassesToFirstItemSet(itemSet, testedClass), HashMap::putAll);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVf4xNzqEeaMeaEvRdRzBA" name="addTestedClassesToFirstItemSet" specification="_RUd98NzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVf4xdzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVf4xtzqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>for (TestedClass testedClass : testedClasses) {
			addTestedClassToItemSet(itemSet, testedClass);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVf4x9zqEeaMeaEvRdRzBA" name="addTestedClassToItemSet" specification="_RUd99dzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVf4yNzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVf4ydzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>List&lt;TestedClass> testedClassList = new LinkedList&lt;TestedClass>();
		testedClassList.add(testedClass);
		incrementItemSetValue(itemSet, testedClassList);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVf4ytzqEeaMeaEvRdRzBA" name="incrementItemSetValue" specification="_RUelA9zqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVgfwNzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVgfwdzqEeaMeaEvRdRzBA" name="key" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>Integer value = itemSet.getOrDefault(key, 0);
		itemSet.put(key, value + 1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVgfwtzqEeaMeaEvRdRzBA" name="printItemSet" specification="_RUfMEtzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVgfw9zqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>Set&lt;List&lt;TestedClass>> keySet = itemSet.keySet();
		for (List&lt;TestedClass> key : keySet) {
			int counter = 0;
			System.out.print(&quot;[&quot;);
			for (TestedClass testedClass : key) {
				System.out.print(testedClass.getClassName());
				if (counter &lt; key.size() - 1) {
					System.out.print(&quot;, &quot;);
					counter ++;
				}
			}
			System.out.print(&quot;] = &quot; + itemSet.get(key) + &quot;\n&quot;);
		}
		System.out.println();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVgfxNzqEeaMeaEvRdRzBA" name="getFailedClasses" specification="_RTwMQNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVgfxdzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVgfxtzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVgfx9zqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return getFailedClasses(failedPercentage, testRun);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVgfyNzqEeaMeaEvRdRzBA" name="getFailedClasses" specification="_RTwzUdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVgfydzqEeaMeaEvRdRzBA" name="failurePercentage">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVgfytzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVgfy9zqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVgfzNzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return items.stream().parallel()
				.filter(testedClass -> testedClass.getFailurePercentageByTestrun(testRun) > failurePercentage)
				.collect(Collectors.toList());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVgfzdzqEeaMeaEvRdRzBA" name="generateFixedSubset" specification="_RUfzIdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVgfztzqEeaMeaEvRdRzBA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVgfz9zqEeaMeaEvRdRzBA" name="allTestedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVgf0NzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>// generating all possible combinations with length k
		// based on: http://stackoverflow.com/questions/29910312/algorithm-to-get-all-the-combinations-of-size-n-from-an-array-java

		HashMap&lt;List&lt;TestedClass>, Integer> newItemSet = new HashMap&lt;>();

		int[] indices = new int[length];

		if (length &lt;= allTestedClasses.size()) {
			// first index sequence: 0, 1, 2, ...
			for (int i = 0; (indices[i] = i) &lt; length - 1; i++)
				;
			newItemSet.put(getSubset(allTestedClasses, indices), 0);
			for (;;) {
				int i;
				// find position of item that can be incremented
				for (i = length - 1; i >= 0 &amp;&amp; indices[i] == allTestedClasses.size() - length + i; i--)
					;
				if (i &lt; 0) {
					break;
				} else {
					indices[i]++; // increment this item
					for (++i; i &lt; length; i++) { // fill up remaining items
						indices[i] = indices[i - 1] + 1;
					}
					newItemSet.put(getSubset(allTestedClasses, indices), 0);
				}
			}
		}
		return newItemSet;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVgf0dzqEeaMeaEvRdRzBA" name="getSubset" specification="_RUgaMdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVgf0tzqEeaMeaEvRdRzBA" name="allTestedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVgf09zqEeaMeaEvRdRzBA" name="subset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVgf1NzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RVgf1dzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVgf1tzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;TestedClass> result = new ArrayList&lt;>(subset.length);

		for (int i = 0; i &lt; subset.length; i++) {
			result.add(i, allTestedClasses.get(subset[i]));
		}

		return result;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RPRU4NzqEeaMeaEvRdRzBA" name="AprioriAnalyzer" method="_RVeqmdzqEeaMeaEvRdRzBA">
                <eAnnotations xmi:id="_RPRU4dzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RPRU4tzqEeaMeaEvRdRzBA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_RVn0gNzqEeaMeaEvRdRzBA">
                  <body>Creates a new {@link AprioriAnalyzer} with 
	 * support = number of transactions / 2
	 * confidence = 80 %</body>
                </ownedComment>
                <ownedParameter xmi:id="_RPR78NzqEeaMeaEvRdRzBA" type="_RPQt0NzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RPR78dzqEeaMeaEvRdRzBA" name="AprioriAnalyzer" method="_RVeqm9zqEeaMeaEvRdRzBA">
                <eAnnotations xmi:id="_RPR789zqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RPR79NzqEeaMeaEvRdRzBA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RPR78tzqEeaMeaEvRdRzBA" name="minConfidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RPR79dzqEeaMeaEvRdRzBA" type="_RPQt0NzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RPR79tzqEeaMeaEvRdRzBA" name="newAprioriAnalyzer" visibility="private" method="_RVeqntzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RPR799zqEeaMeaEvRdRzBA" name="minConfidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RPSjANzqEeaMeaEvRdRzBA" name="analyze" method="_RVfRoNzqEeaMeaEvRdRzBA"/>
              <ownedOperation xmi:id="_RPSjBNzqEeaMeaEvRdRzBA" name="getStrongRules" method="_RVfRodzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0gdzqEeaMeaEvRdRzBA">
                  <body>Retrieves all strong rules above the given confidence.
	 * Uses cached results, if possible.
	 * 
	 * @param confidence
	 * 		confidence value between 0 and 1
	 * @return
	 * 		{@link List} of {@link StrongRule}s</body>
                </ownedComment>
                <ownedParameter xmi:id="_RPSjBdzqEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RPSjBtzqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RPSjB9zqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RPTKENzqEeaMeaEvRdRzBA" name="getStrongRules" method="_RVfRpdzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0gtzqEeaMeaEvRdRzBA">
                  <body>Retrieves all strong rules above the given confidence,
	 * but with a class distance smaller or equal than the given distance.
	 * Uses cached results, if possible.
	 * 
	 * @param confidence
	 * 		confidence value between 0 and 1
	 * @param distance
	 * 		maximum distance between the classes of the {@link StrongRule}
	 * @return
	 * 		{@link List} of {@link StrongRule}s</body>
                </ownedComment>
                <ownedParameter xmi:id="_RPTKEdzqEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RPTKEtzqEeaMeaEvRdRzBA" name="distance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RPTKE9zqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RPTKFNzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RPTKFdzqEeaMeaEvRdRzBA" name="getFrequentItemSets" method="_RVfRqtzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0g9zqEeaMeaEvRdRzBA">
                  <body>Retrieves the maximal frequent item sets generated by the Apriori algorithm.
	 * Uses cached results, if possible.
	 * 
	 * @return
	 * 		The maximal frequent item set using a {@link HashMap}</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUX3UNzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RPUYMNzqEeaMeaEvRdRzBA" name="getMaxFrequentItemSet" visibility="private" method="_RVfRuNzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0htzqEeaMeaEvRdRzBA">
                  <body>Generates the maximal frequent item set by steadily increasing length k. Item
	 * sets below the minimum support are pruned and therefore not used in
	 * further computations.
	 * 
	 * @return The maximal frequent item set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUZsgdzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RPVmUNzqEeaMeaEvRdRzBA" name="getFirstItemSet" visibility="private" method="_RVf4wtzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0jdzqEeaMeaEvRdRzBA">
                  <body>Maps every TestRun to its TestedClasses with a FP higher then a certain
	 * bound (field: failurePercentage)
	 * 
	 * @return HasMap, containing one List for each TestRun containing the
	 *         selected TestedClasses</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUdW49zqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RTwMQNzqEeaMeaEvRdRzBA" name="getFailedClasses" visibility="private" method="_RVgfxNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RTwMQdzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RTwMQtzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTwzUNzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RTwzUdzqEeaMeaEvRdRzBA" name="getFailedClasses" visibility="private" method="_RVgfyNzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0j9zqEeaMeaEvRdRzBA">
                  <body>@param failurePercentage
	 *            the min FP a class should have in the List
	 * @param testRun
	 *            The TestRun which will be searched for classes
	 * @return List of TestedClasses containing only classes with higher FP as
	 *         the param failurePercentage</body>
                </ownedComment>
                <ownedParameter xmi:id="_RTwzUtzqEeaMeaEvRdRzBA" name="failurePercentage">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RTwzU9zqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RTwzVNzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTwzVdzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RUX3UdzqEeaMeaEvRdRzBA" name="generateStrongRules" visibility="private" method="_RVfRrNzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0hNzqEeaMeaEvRdRzBA">
                  <body>Generates the strong rules from a given frequent item set
	 * 
	 * @param frequentItemSet
	 *            The frequent item set used for generation of strong rules
	 * @return A {@link list} of all possible {@link StrongRule}s</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUX3UtzqEeaMeaEvRdRzBA" name="frequentItemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUX3U9zqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUX3VNzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RUYeYdzqEeaMeaEvRdRzBA" name="generateStrongRulesForEntry" visibility="private" method="_RVfRsNzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0hdzqEeaMeaEvRdRzBA">
                  <body>Generates the strong rules for the powerset of one item set entry
	 * 
	 * @param powerItemSet
	 * 			The powerset of the given key 
	 * @param fullKey
	 * 			The key itself
	 * @return
	 * 			A List of this entry's {@link StrongRule}s</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUYeYtzqEeaMeaEvRdRzBA" name="powerItemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUYeY9zqEeaMeaEvRdRzBA" name="fullKey" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUYeZNzqEeaMeaEvRdRzBA" type="_ROFCENzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUYeZdzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RUZFcdzqEeaMeaEvRdRzBA" name="getPowerSet" visibility="private" method="_RVfRtdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RUZFctzqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUZFdNzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUZsgtzqEeaMeaEvRdRzBA" name="isSubset" visibility="private" method="_RVfRutzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0h9zqEeaMeaEvRdRzBA">
                  <body>An entry e is the subset of another item set I, 
	 * if there exists at least one entry e' in I
	 * so that e' contains all elements of e.
	 *    
	 * @return
	 * 		true if e is subset of I</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUZsg9zqEeaMeaEvRdRzBA" name="entry" type="_RTMLkdzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUZshNzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUZshdzqEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RUa6oNzqEeaMeaEvRdRzBA" name="eliminateInsignificantItems" visibility="private" method="_RVf4sNzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0iNzqEeaMeaEvRdRzBA">
                  <body>Eliminates the insignificant items from the given item set by creating a new item set with only the significant items.
	 * An item is significant, if all possible items with key length - 1 were included in the previous iteration
	 * (i.e. are part of the previous item set)
	 *  
	 * @param itemSet
	 * 		item set to be filtered
	 * @param oldItemSet
	 * 		item set of the previous iteration
	 * @return
	 * 		item set containing only significant items</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUa6odzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUa6otzqEeaMeaEvRdRzBA" name="oldItemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUa6pNzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUbhsdzqEeaMeaEvRdRzBA" name="updateItemSet" visibility="private" method="_RVf4tNzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0idzqEeaMeaEvRdRzBA">
                  <body>Analyzes the support count of the given item set.
	 * Important notice: The algorithm works directly on the given item set.
	 * Hence, the item set is overwritten by this algorithm.
	 * This allows for usage without any return value.
	 *  
	 * @param itemSet
	 * 		The item set to be (re)analyzed</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUbhstzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUbhtNzqEeaMeaEvRdRzBA" name="initializeNewItemSet" visibility="private" method="_RVf4ttzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0itzqEeaMeaEvRdRzBA">
                  <body>Uses the given item set to generate a new item set with all possible key combinations with length k.   
	 * Entry value is 0
	 * 
	 * @param itemSet
	 * 		the item set the algorithm is based on
	 * @param length
	 * 		the required key length k 
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUbhtdzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUcIwNzqEeaMeaEvRdRzBA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RUcIwtzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUcIxNzqEeaMeaEvRdRzBA" name="extractTestedClasses" visibility="private" method="_RVf4utzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0i9zqEeaMeaEvRdRzBA">
                  <body>Extracts a {@link List} of all {@link TestedClass}es contained in the given item set
	 * @param itemSet
	 * 		Item set used for extraction
	 * @return
	 * 		A {@link List} of all {@link TestedClass}es contained in the item set</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUcIxdzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUcv0NzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUcv0dzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_RUcv09zqEeaMeaEvRdRzBA" name="pruneItemSet" visibility="private" method="_RVf4vtzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0jNzqEeaMeaEvRdRzBA">
                  <body>Removes all items not satisfying the given minimum support.
	 * 
	 * @param itemSet
	 * @param minSupport
	 * @return
	 * 		Item set with all items with value >= minimum support</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUcv1NzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUcv1dzqEeaMeaEvRdRzBA" name="minSupport">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RUdW4dzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUd98NzqEeaMeaEvRdRzBA" name="addTestedClassesToFirstItemSet" visibility="private" method="_RVf4xNzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RUd98dzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUd98tzqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUd99dzqEeaMeaEvRdRzBA" name="addTestedClassToItemSet" visibility="private" method="_RVf4x9zqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RUelANzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUelAdzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUelA9zqEeaMeaEvRdRzBA" name="incrementItemSetValue" visibility="private" method="_RVf4ytzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RUelBNzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUelBdzqEeaMeaEvRdRzBA" name="key" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUfMEtzqEeaMeaEvRdRzBA" name="printItemSet" visibility="private" method="_RVgfwtzqEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_RVn0jtzqEeaMeaEvRdRzBA">
                  <body>Helper function to output an item set on the console
	 * @param itemSet
	 * 		item set to be printed</body>
                </ownedComment>
                <ownedParameter xmi:id="_RUfME9zqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUfzIdzqEeaMeaEvRdRzBA" name="generateFixedSubset" visibility="private" method="_RVgfzdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RUfzItzqEeaMeaEvRdRzBA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RUfzI9zqEeaMeaEvRdRzBA" name="allTestedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUfzJdzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RUgaMdzqEeaMeaEvRdRzBA" name="getSubset" visibility="package" method="_RVgf0dzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RUgaMtzqEeaMeaEvRdRzBA" name="allTestedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RUgaM9zqEeaMeaEvRdRzBA" name="subset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUgaN9zqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_RUgaNNzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUgaNdzqEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_RV2eB9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV2eCNzqEeaMeaEvRdRzBA _RUz8MdzqEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_RV2eCNzqEeaMeaEvRdRzBA" name="" type="_ROFCENzqEeaMeaEvRdRzBA" association="_RV2eB9zqEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_RV3FEdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV3FEtzqEeaMeaEvRdRzBA _RUz8M9zqEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_RV3FEtzqEeaMeaEvRdRzBA" name="" type="_ROFCENzqEeaMeaEvRdRzBA" association="_RV3FEdzqEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_RWFul9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWFumNzqEeaMeaEvRdRzBA _RVFpBNzqEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_RWFumNzqEeaMeaEvRdRzBA" name="" type="_RPQt0NzqEeaMeaEvRdRzBA" association="_RWFul9zqEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_RWGVodzqEeaMeaEvRdRzBA" name="" memberEnd="_RWGVotzqEeaMeaEvRdRzBA _RVGQE9zqEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_RWGVotzqEeaMeaEvRdRzBA" name="" type="_RPQt0NzqEeaMeaEvRdRzBA" association="_RWGVodzqEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_RWGVpNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWGVpdzqEeaMeaEvRdRzBA _RVG3IdzqEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_RWGVpdzqEeaMeaEvRdRzBA" name="" type="_RPQt0NzqEeaMeaEvRdRzBA" association="_RWGVpNzqEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_RWGVp9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWGVqNzqEeaMeaEvRdRzBA _RVG3JNzqEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_RWGVqNzqEeaMeaEvRdRzBA" name="" type="_RPQt0NzqEeaMeaEvRdRzBA" association="_RWGVp9zqEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_RWG8sNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWG8sdzqEeaMeaEvRdRzBA _RVHeMdzqEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_RWG8sdzqEeaMeaEvRdRzBA" name="" type="_RPQt0NzqEeaMeaEvRdRzBA" association="_RWG8sNzqEeaMeaEvRdRzBA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RNU0IdzqEeaMeaEvRdRzBA" name="Counters">
            <ownedAttribute xmi:id="_RUnu8dzqEeaMeaEvRdRzBA" name="sumAborted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUnu89zqEeaMeaEvRdRzBA" name="sumCompleted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUnu9dzqEeaMeaEvRdRzBA" name="sumDisconnected" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUoWAdzqEeaMeaEvRdRzBA" name="sumError" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUoWA9zqEeaMeaEvRdRzBA" name="sumExecuted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUoWBdzqEeaMeaEvRdRzBA" name="sumFailed" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUo9ENzqEeaMeaEvRdRzBA" name="sumInProgress" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUo9EtzqEeaMeaEvRdRzBA" name="sumInconclusive" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUo9FNzqEeaMeaEvRdRzBA" name="sumNotExecuted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUo9FtzqEeaMeaEvRdRzBA" name="sumNotRunnable" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUpkIdzqEeaMeaEvRdRzBA" name="sumPassed" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUpkI9zqEeaMeaEvRdRzBA" name="sumPassedButRunAborted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUpkJdzqEeaMeaEvRdRzBA" name="sumPending" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUpkJ9zqEeaMeaEvRdRzBA" name="sumTimeOut" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUqLMdzqEeaMeaEvRdRzBA" name="sumTotal" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUqLM9zqEeaMeaEvRdRzBA" name="sumWarning" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVNk0NzqEeaMeaEvRdRzBA" name="Counters" specification="_RNWpUNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVNk0dzqEeaMeaEvRdRzBA" name="sumAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk0tzqEeaMeaEvRdRzBA" name="sumCompleted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk09zqEeaMeaEvRdRzBA" name="sumDisconnected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk1NzqEeaMeaEvRdRzBA" name="sumError">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk1dzqEeaMeaEvRdRzBA" name="sumExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk1tzqEeaMeaEvRdRzBA" name="sumFailed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk19zqEeaMeaEvRdRzBA" name="sumInProgress">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk2NzqEeaMeaEvRdRzBA" name="sumInconclusive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk2dzqEeaMeaEvRdRzBA" name="sumNotExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk2tzqEeaMeaEvRdRzBA" name="sumNotRunnable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk29zqEeaMeaEvRdRzBA" name="sumPassed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk3NzqEeaMeaEvRdRzBA" name="sumPassedButRunAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk3dzqEeaMeaEvRdRzBA" name="sumPending">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk3tzqEeaMeaEvRdRzBA" name="sumTimeOut">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk39zqEeaMeaEvRdRzBA" name="sumTotal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk4NzqEeaMeaEvRdRzBA" name="sumWarning">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVNk4dzqEeaMeaEvRdRzBA" type="_RNU0IdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.sumAborted = sumAborted;
		this.sumCompleted = sumCompleted;
		this.sumDisconnected = sumDisconnected;
		this.sumError = sumError;
		this.sumExecuted = sumExecuted;
		this.sumFailed = sumFailed;
		this.sumInProgress = sumInProgress;
		this.sumInconclusive = sumInconclusive;
		this.sumNotExecuted = sumNotExecuted;
		this.sumNotRunnable = sumNotRunnable;
		this.sumPassed = sumPassed;
		this.sumPassedButRunAborted = sumPassedButRunAborted;
		this.sumPending = sumPending;
		this.sumTimeOut = sumTimeOut;
		this.sumTotal = sumTotal;
		this.sumWarning = sumWarning;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVNk4tzqEeaMeaEvRdRzBA" name="getSumAborted" specification="_RNXQY9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVNk49zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumAborted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVNk5NzqEeaMeaEvRdRzBA" name="setSumAborted" specification="_RNX3cNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVNk5dzqEeaMeaEvRdRzBA" name="sumAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumAborted = sumAborted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVNk5tzqEeaMeaEvRdRzBA" name="getSumCompleted" specification="_RNX3ctzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVNk59zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumCompleted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOL4NzqEeaMeaEvRdRzBA" name="setSumCompleted" specification="_RNX3dNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOL4dzqEeaMeaEvRdRzBA" name="sumCompleted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumCompleted = sumCompleted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOL4tzqEeaMeaEvRdRzBA" name="getSumDisconnected" specification="_RNYegNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOL49zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumDisconnected;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOL5NzqEeaMeaEvRdRzBA" name="setSumDisconnected" specification="_RNYegtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOL5dzqEeaMeaEvRdRzBA" name="sumDisconnected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumDisconnected = sumDisconnected;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOL5tzqEeaMeaEvRdRzBA" name="getSumError" specification="_RNYehNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOL59zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumError;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOL6NzqEeaMeaEvRdRzBA" name="setSumError" specification="_RNZFkNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOL6dzqEeaMeaEvRdRzBA" name="sumError">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumError = sumError;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOL6tzqEeaMeaEvRdRzBA" name="getSumExecuted" specification="_RNZFktzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOL69zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumExecuted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOL7NzqEeaMeaEvRdRzBA" name="setSumExecuted" specification="_RNZFlNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOL7dzqEeaMeaEvRdRzBA" name="sumExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumExecuted = sumExecuted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOL7tzqEeaMeaEvRdRzBA" name="getSumFailed" specification="_RNZFltzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOL79zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumFailed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOy8NzqEeaMeaEvRdRzBA" name="setSumFailed" specification="_RNZsoNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOy8dzqEeaMeaEvRdRzBA" name="sumFailed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumFailed = sumFailed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOy8tzqEeaMeaEvRdRzBA" name="getSumInProgress" specification="_RNZsotzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOy89zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumInProgress;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOy9NzqEeaMeaEvRdRzBA" name="setSumInProgress" specification="_RNZspNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOy9dzqEeaMeaEvRdRzBA" name="sumInProgress">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumInProgress = sumInProgress;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOy9tzqEeaMeaEvRdRzBA" name="getSumInconclusive" specification="_RNaTsNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOy99zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumInconclusive;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOy-NzqEeaMeaEvRdRzBA" name="setSumInconclusive" specification="_RNaTstzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOy-dzqEeaMeaEvRdRzBA" name="sumInconclusive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumInconclusive = sumInconclusive;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOy-tzqEeaMeaEvRdRzBA" name="getSumNotExecuted" specification="_RNaTtNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOy-9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumNotExecuted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOy_NzqEeaMeaEvRdRzBA" name="setSumNotExecuted" specification="_RNaTttzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOy_dzqEeaMeaEvRdRzBA" name="sumNotExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumNotExecuted = sumNotExecuted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOy_tzqEeaMeaEvRdRzBA" name="getSumNotRunnable" specification="_RNa6wNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOy_9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumNotRunnable;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVOzANzqEeaMeaEvRdRzBA" name="setSumNotRunnable" specification="_RNa6wtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVOzAdzqEeaMeaEvRdRzBA" name="sumNotRunnable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumNotRunnable = sumNotRunnable;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVPaANzqEeaMeaEvRdRzBA" name="getSumPassed" specification="_RNa6xNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVPaAdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumPassed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVPaAtzqEeaMeaEvRdRzBA" name="setSumPassed" specification="_RNbh0NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVPaA9zqEeaMeaEvRdRzBA" name="sumPassed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumPassed = sumPassed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVPaBNzqEeaMeaEvRdRzBA" name="getSumPassedButRunAborted" specification="_RNbh0tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVPaBdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumPassedButRunAborted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVPaBtzqEeaMeaEvRdRzBA" name="setSumPassedButRunAborted" specification="_RNbh1NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVPaB9zqEeaMeaEvRdRzBA" name="sumPassedButRunAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumPassedButRunAborted = sumPassedButRunAborted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVPaCNzqEeaMeaEvRdRzBA" name="getSumPending" specification="_RNbh1tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVPaCdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumPending;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVPaCtzqEeaMeaEvRdRzBA" name="setSumPending" specification="_RNcI4dzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVPaC9zqEeaMeaEvRdRzBA" name="sumPending">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumPending = sumPending;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVPaDNzqEeaMeaEvRdRzBA" name="getSumTimeOut" specification="_RNcI49zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVPaDdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumTimeOut;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVPaDtzqEeaMeaEvRdRzBA" name="setSumTimeOut" specification="_RNcv8NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVPaD9zqEeaMeaEvRdRzBA" name="sumTimeOut">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumTimeOut = sumTimeOut;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVPaENzqEeaMeaEvRdRzBA" name="getSumTotal" specification="_RNcv8tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVPaEdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumTotal;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQBENzqEeaMeaEvRdRzBA" name="setSumTotal" specification="_RNcv9NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQBEdzqEeaMeaEvRdRzBA" name="sumTotal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumTotal = sumTotal;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQBEtzqEeaMeaEvRdRzBA" name="getSumWarning" specification="_RNcv9tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQBE9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumWarning;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQBFNzqEeaMeaEvRdRzBA" name="setSumWarning" specification="_RNdXAdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQBFdzqEeaMeaEvRdRzBA" name="sumWarning">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumWarning = sumWarning;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RNWpUNzqEeaMeaEvRdRzBA" name="Counters" method="_RVNk0NzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RNXQYNzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RNXQYdzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RNWpUdzqEeaMeaEvRdRzBA" name="sumAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpUtzqEeaMeaEvRdRzBA" name="sumCompleted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpU9zqEeaMeaEvRdRzBA" name="sumDisconnected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpVNzqEeaMeaEvRdRzBA" name="sumError">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpVdzqEeaMeaEvRdRzBA" name="sumExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpVtzqEeaMeaEvRdRzBA" name="sumFailed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpV9zqEeaMeaEvRdRzBA" name="sumInProgress">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpWNzqEeaMeaEvRdRzBA" name="sumInconclusive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpWdzqEeaMeaEvRdRzBA" name="sumNotExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpWtzqEeaMeaEvRdRzBA" name="sumNotRunnable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpW9zqEeaMeaEvRdRzBA" name="sumPassed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpXNzqEeaMeaEvRdRzBA" name="sumPassedButRunAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpXdzqEeaMeaEvRdRzBA" name="sumPending">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpXtzqEeaMeaEvRdRzBA" name="sumTimeOut">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpX9zqEeaMeaEvRdRzBA" name="sumTotal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNWpYNzqEeaMeaEvRdRzBA" name="sumWarning">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNXQYtzqEeaMeaEvRdRzBA" type="_RNU0IdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNXQY9zqEeaMeaEvRdRzBA" name="getSumAborted" method="_RVNk4tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNXQZNzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNX3cNzqEeaMeaEvRdRzBA" name="setSumAborted" method="_RVNk5NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNX3cdzqEeaMeaEvRdRzBA" name="sumAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNX3ctzqEeaMeaEvRdRzBA" name="getSumCompleted" method="_RVNk5tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNX3c9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNX3dNzqEeaMeaEvRdRzBA" name="setSumCompleted" method="_RVOL4NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNX3ddzqEeaMeaEvRdRzBA" name="sumCompleted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNYegNzqEeaMeaEvRdRzBA" name="getSumDisconnected" method="_RVOL4tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNYegdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNYegtzqEeaMeaEvRdRzBA" name="setSumDisconnected" method="_RVOL5NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNYeg9zqEeaMeaEvRdRzBA" name="sumDisconnected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNYehNzqEeaMeaEvRdRzBA" name="getSumError" method="_RVOL5tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNYehdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNZFkNzqEeaMeaEvRdRzBA" name="setSumError" method="_RVOL6NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNZFkdzqEeaMeaEvRdRzBA" name="sumError">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNZFktzqEeaMeaEvRdRzBA" name="getSumExecuted" method="_RVOL6tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNZFk9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNZFlNzqEeaMeaEvRdRzBA" name="setSumExecuted" method="_RVOL7NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNZFldzqEeaMeaEvRdRzBA" name="sumExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNZFltzqEeaMeaEvRdRzBA" name="getSumFailed" method="_RVOL7tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNZFl9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNZsoNzqEeaMeaEvRdRzBA" name="setSumFailed" method="_RVOy8NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNZsodzqEeaMeaEvRdRzBA" name="sumFailed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNZsotzqEeaMeaEvRdRzBA" name="getSumInProgress" method="_RVOy8tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNZso9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNZspNzqEeaMeaEvRdRzBA" name="setSumInProgress" method="_RVOy9NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNZspdzqEeaMeaEvRdRzBA" name="sumInProgress">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNaTsNzqEeaMeaEvRdRzBA" name="getSumInconclusive" method="_RVOy9tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNaTsdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNaTstzqEeaMeaEvRdRzBA" name="setSumInconclusive" method="_RVOy-NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNaTs9zqEeaMeaEvRdRzBA" name="sumInconclusive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNaTtNzqEeaMeaEvRdRzBA" name="getSumNotExecuted" method="_RVOy-tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNaTtdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNaTttzqEeaMeaEvRdRzBA" name="setSumNotExecuted" method="_RVOy_NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNaTt9zqEeaMeaEvRdRzBA" name="sumNotExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNa6wNzqEeaMeaEvRdRzBA" name="getSumNotRunnable" method="_RVOy_tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNa6wdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNa6wtzqEeaMeaEvRdRzBA" name="setSumNotRunnable" method="_RVOzANzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNa6w9zqEeaMeaEvRdRzBA" name="sumNotRunnable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNa6xNzqEeaMeaEvRdRzBA" name="getSumPassed" method="_RVPaANzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNa6xdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNbh0NzqEeaMeaEvRdRzBA" name="setSumPassed" method="_RVPaAtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNbh0dzqEeaMeaEvRdRzBA" name="sumPassed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNbh0tzqEeaMeaEvRdRzBA" name="getSumPassedButRunAborted" method="_RVPaBNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNbh09zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNbh1NzqEeaMeaEvRdRzBA" name="setSumPassedButRunAborted" method="_RVPaBtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNbh1dzqEeaMeaEvRdRzBA" name="sumPassedButRunAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNbh1tzqEeaMeaEvRdRzBA" name="getSumPending" method="_RVPaCNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNcI4NzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNcI4dzqEeaMeaEvRdRzBA" name="setSumPending" method="_RVPaCtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNcI4tzqEeaMeaEvRdRzBA" name="sumPending">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNcI49zqEeaMeaEvRdRzBA" name="getSumTimeOut" method="_RVPaDNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNcI5NzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNcv8NzqEeaMeaEvRdRzBA" name="setSumTimeOut" method="_RVPaDtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNcv8dzqEeaMeaEvRdRzBA" name="sumTimeOut">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNcv8tzqEeaMeaEvRdRzBA" name="getSumTotal" method="_RVPaENzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNcv89zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNcv9NzqEeaMeaEvRdRzBA" name="setSumTotal" method="_RVQBENzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNcv9dzqEeaMeaEvRdRzBA" name="sumTotal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNcv9tzqEeaMeaEvRdRzBA" name="getSumWarning" method="_RVQBEtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNdXANzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNdXAdzqEeaMeaEvRdRzBA" name="setSumWarning" method="_RVQBFNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNdXAtzqEeaMeaEvRdRzBA" name="sumWarning">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_RNfMMNzqEeaMeaEvRdRzBA" name="Parser">
            <ownedOperation xmi:id="_RNjdoNzqEeaMeaEvRdRzBA" name="parse" raisedException="_RNSX4NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNjdodzqEeaMeaEvRdRzBA" name="path">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RNkEsNzqEeaMeaEvRdRzBA" name="StAXParser">
            <ownedAttribute xmi:id="_RUqyQNzqEeaMeaEvRdRzBA" name="testData" visibility="private" isLeaf="true" type="_RNlS0NzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RVyzoNzqEeaMeaEvRdRzBA"/>
            <interfaceRealization xmi:id="_RS4CgdzqEeaMeaEvRdRzBA" client="_RNkEsNzqEeaMeaEvRdRzBA" supplier="_RNfMMNzqEeaMeaEvRdRzBA" contract="_RNfMMNzqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQBFtzqEeaMeaEvRdRzBA" name="StAXParser" specification="_RNkrwNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQBF9zqEeaMeaEvRdRzBA" type="_RNkEsNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>testData = TestData.getInstance();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQBGNzqEeaMeaEvRdRzBA" name="parse" specification="_RNkrxNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQBGdzqEeaMeaEvRdRzBA" name="path">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>// System.out.println(&quot;Starting to parse&quot;);
		List&lt;UnitTest> unitTestsOfOneRun = new LinkedList&lt;>();
		boolean waitForStdOut = false;
		boolean readingStdOut = false;

		TestRun testRun = null;
		// UnitTest Data
		String unitTestID = &quot;&quot;, unitTestName = &quot;&quot;, unitTestExecutionID = &quot;&quot;, testMethodName = &quot;&quot;;
		// UnitTestResult Data
		String resultUnitTestID;
		String unitTestOutcome;
		// Tested Class Data
		String testedClassName = &quot;&quot;;
		// TestRun Data
		String runID, runName;
		// TestRunTimeD
		String creationTime, finishTime, queuingTime, startTime;
		String outcome;

		// Counters
		String sumAborted;
		String sumCompleted;
		String sumDisconnected;
		String sumError;
		String sumExecuted;
		String sumFailed;
		String sumInProgress;
		String sumInconclusive;
		String sumNotExecuted;
		String sumNotRunnable;
		String sumPassed;
		String sumPassedButRunAborted;
		String sumPending;
		String sumTimeOut;
		String sumTotal;
		String sumWarning;

		// StandardOuts
		String stdOutContent;

		UnitTestsToTestRunMapper mapper = null;

		try {
			// creating inputFactory
			XMLInputFactory inputFactory = XMLInputFactory.newInstance();
			// create InputStream
			XMLStreamReader reader = inputFactory.createXMLStreamReader(new FileInputStream(path));

			while (reader.hasNext()) {
				int event = reader.next();
				switch (event) {
				case XMLStreamConstants.START_ELEMENT:
					if (&quot;UnitTest&quot;.equals(reader.getLocalName())) {
						if (reader.getAttributeLocalName(0).equals(&quot;id&quot;)
								&amp;&amp; reader.getAttributeLocalName(1).equals(&quot;name&quot;)) {
							unitTestID = reader.getAttributeValue(0);
							unitTestName = reader.getAttributeValue(1);
						} else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}

					}
					if (&quot;UnitTestResult&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(8).equals(&quot;testId&quot;) 
								&amp;&amp; reader.getAttributeLocalName(5).equals(&quot;outcome&quot;)){
							resultUnitTestID = reader.getAttributeValue(8);
							unitTestOutcome = reader.getAttributeValue(5);

							for (UnitTest unitTest : unitTestsOfOneRun) {
								if (unitTest.getUnitTestID().equals(resultUnitTestID)) {
									unitTest.setOutcome(unitTestOutcome);
								}
							}
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
						
					}

					if (&quot;Execution&quot;.equals(reader.getLocalName()) 
							&amp;&amp; reader.getAttributeCount() == 1) {
						if (reader.getAttributeLocalName(0).equals(&quot;id&quot;)) {
							// To avoid wrong 'execution' start element
							unitTestExecutionID = reader.getAttributeValue(0);
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;TestMethod&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(1).equals(&quot;className&quot;) 
								&amp;&amp; reader.getAttributeLocalName(3).equals(&quot;name&quot;)){
							testedClassName = reader.getAttributeValue(1);
							testMethodName = reader.getAttributeValue(3);
							// TODO: Create UnitTest Object
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;TestRun&quot;.equals(reader.getLocalName())) { 
						if(reader.getAttributeLocalName(0).equals(&quot;id&quot;) 
								&amp;&amp; reader.getAttributeLocalName(1).equals(&quot;name&quot;)){

							runID = reader.getAttributeValue(0);
							runName = reader.getAttributeValue(1);

							testRun = new TestRun(runID, runName);
							testRun.setPath(path);

						} else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;Times&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(0).equals(&quot;creation&quot;) 
								&amp;&amp; reader.getAttributeLocalName(1).equals(&quot;finish&quot;) 
								&amp;&amp; reader.getAttributeLocalName(2).equals(&quot;queuing&quot;) 
								&amp;&amp; reader.getAttributeLocalName(3).equals(&quot;start&quot;)){ 
							creationTime = reader.getAttributeValue(0);
							finishTime = reader.getAttributeValue(1);
							queuingTime = reader.getAttributeValue(2);
							startTime = reader.getAttributeValue(3);
							
							testRun.setStartTime(startTime);
							testData.addNewTestRun(testRun);
						} else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;ResultSummary&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(0).equals(&quot;outcome&quot;)){
							outcome = reader.getAttributeValue(0);
							waitForStdOut = true;
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;Counters&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(0).equals(&quot;aborted&quot;) 
								&amp;&amp; reader.getAttributeLocalName(1).equals(&quot;completed&quot;) 
								&amp;&amp; reader.getAttributeLocalName(2).equals(&quot;disconnected&quot;)
								&amp;&amp; reader.getAttributeLocalName(3).equals(&quot;error&quot;)
								&amp;&amp; reader.getAttributeLocalName(4).equals(&quot;executed&quot;)
								&amp;&amp; reader.getAttributeLocalName(5).equals(&quot;failed&quot;)
								&amp;&amp; reader.getAttributeLocalName(6).equals(&quot;inProgress&quot;)
								&amp;&amp; reader.getAttributeLocalName(7).equals(&quot;inconclusive&quot;)
								&amp;&amp; reader.getAttributeLocalName(8).equals(&quot;notExecuted&quot;)
								&amp;&amp; reader.getAttributeLocalName(9).equals(&quot;notRunnable&quot;) 
								&amp;&amp; reader.getAttributeLocalName(10).equals(&quot;passed&quot;)
								&amp;&amp; reader.getAttributeLocalName(11).equals(&quot;passedButRunAborted&quot;)
								&amp;&amp; reader.getAttributeLocalName(12).equals(&quot;pending&quot;)
								&amp;&amp; reader.getAttributeLocalName(13).equals(&quot;timeout&quot;)
								&amp;&amp; reader.getAttributeLocalName(14).equals(&quot;total&quot;)
								&amp;&amp; reader.getAttributeLocalName(15).equals(&quot;warning&quot;)) {
							sumAborted = reader.getAttributeValue(0);
							sumCompleted = reader.getAttributeValue(1);
							sumDisconnected = reader.getAttributeValue(2);
							sumError = reader.getAttributeValue(3);
							sumExecuted = reader.getAttributeValue(4);
							sumFailed = reader.getAttributeValue(5);
							sumInProgress = reader.getAttributeValue(6);
							sumInconclusive = reader.getAttributeValue(7);
							sumNotExecuted = reader.getAttributeValue(8);
							sumNotRunnable = reader.getAttributeValue(9);
							sumPassed = reader.getAttributeValue(10);
							sumPassedButRunAborted = reader.getAttributeValue(11);
							sumPending = reader.getAttributeValue(12);
							sumTimeOut = reader.getAttributeValue(13);
							sumTotal = reader.getAttributeValue(14);
							sumWarning = reader.getAttributeValue(15);

							// Create Counters Class
							Counters counter = new Counters(sumAborted, sumCompleted, sumDisconnected, sumError,
									sumExecuted, sumFailed, sumInProgress, sumInconclusive, sumNotExecuted, sumNotRunnable,
									sumPassed, sumPassedButRunAborted, sumPending, sumTimeOut, sumTotal, sumWarning);
							testRun.setResultSummary(counter);
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;StdOut&quot;.equals(reader.getLocalName()) &amp;&amp; waitForStdOut) {
						readingStdOut = true;
					}
					break;

				case XMLStreamConstants.CHARACTERS:
					if (readingStdOut) {
						stdOutContent = reader.getText().trim();
					}
					break;

				case XMLStreamConstants.END_ELEMENT:
					if (&quot;UnitTest&quot;.equals(reader.getLocalName())) {

						UnitTest unitTest = new UnitTest(testRun, unitTestID, unitTestName, unitTestExecutionID,
								testMethodName);

						TestedClass testedClass = new TestedClass(testedClassName, unitTest);

						testData.addNewTestedClassToTree(testedClass);
						testData.addNewUnitTest(unitTest);
						unitTestsOfOneRun.add(unitTest);

						testRun.addTestedClassToTestRun(testData.getClass(testedClass));
					}
					if (&quot;TestRun&quot;.equals(reader.getLocalName())) {
//						System.out.println(&quot;Finished TestRun: &quot; + testRun.getRunID());
					}
					break;

				default:
					break;
				}
			}
		} catch (Exception e) {
			// TODO: handle exception
			System.err.println(e.getMessage());
		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RNkrwNzqEeaMeaEvRdRzBA" name="StAXParser" method="_RVQBFtzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RNkrwdzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RNkrwtzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RNkrw9zqEeaMeaEvRdRzBA" type="_RNkEsNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNkrxNzqEeaMeaEvRdRzBA" name="parse" method="_RVQBGNzqEeaMeaEvRdRzBA" raisedException="_RNSX4NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNkrxdzqEeaMeaEvRdRzBA" name="path">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RNlS0NzqEeaMeaEvRdRzBA" name="TestData">
            <ownedAttribute xmi:id="_RUqyQtzqEeaMeaEvRdRzBA" name="testDataInstance" visibility="private" isStatic="true" type="_RNlS0NzqEeaMeaEvRdRzBA" association="_RVyzo9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RUqyRNzqEeaMeaEvRdRzBA" name="testRunList" type="_RS4pkNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RVyzptzqEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUrZUdzqEeaMeaEvRdRzBA" value="new ArrayList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUrZUtzqEeaMeaEvRdRzBA" name="unitTestList" type="_RS4pkNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RVzasdzqEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUrZVNzqEeaMeaEvRdRzBA" value="new ArrayList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUrZVdzqEeaMeaEvRdRzBA" name="root" type="_RN1KcNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RVzatNzqEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUsAYNzqEeaMeaEvRdRzBA" value="new TreeNode(&quot;/&quot;, null, null)"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUsAYdzqEeaMeaEvRdRzBA" name="analyzer" type="_RNUNENzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RVzat9zqEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUsAY9zqEeaMeaEvRdRzBA" value="new AprioriAnalyzer()"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQoItzqEeaMeaEvRdRzBA" name="getInstance" specification="_RNmg8tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQoI9zqEeaMeaEvRdRzBA" type="_RNlS0NzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>if (TestData.testDataInstance == null) {
			TestData.testDataInstance = new TestData();
		}
		return TestData.testDataInstance;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQoJNzqEeaMeaEvRdRzBA" name="getTestedClasses" specification="_RNmg89zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQoJdzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVQoJtzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return root.getTestedClasses();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQoJ9zqEeaMeaEvRdRzBA" name="addNewTestRun" specification="_RS5QotzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQoKNzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>boolean existing = false;
		// add class to list if not already there

		for (TestRun existingRun : testRunList) {
			if (testRun.getRunID().equals(existingRun.getRunID())) {

				testRun = existingRun;
				existing = true;
				// TODO: change to correct Exception
				throw new Exception(&quot;\nTestRun: &quot; + testRun.getRunID() + &quot; already loaded\n&quot;);
			}
		}
		if (!existing) {
			int index = 0;

			// Only for first TestRun
			if (testRunList.isEmpty()) {
				testRunList.add(testRun);
			} else {
				// Insert new TestRuns sorted by their StartTime
				for (TestRun existingRun : testRunList) {
					//If new TestRun is older than existing, increment Index-Counter
					if (testRun.getRunDate().compareTo(existingRun.getRunDate()) > 0) {
						index++;
						if (index == testRunList.size()) {
							testRunList.add(testRun);
							break;
						}
					} else {
						//If Index == List-Size, then just add new Run as last element
						if (index == testRunList.size()) {
							testRunList.add(testRun);
							break;
						} else {
						// Add new Run at the proper index in List
							testRunList.add(index, testRun);
							break;
						}
					}
				}
			}
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQoKdzqEeaMeaEvRdRzBA" name="printTree" specification="_RNnIANzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>System.out.println(root.printTree(0));
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQoKtzqEeaMeaEvRdRzBA" name="addNewTestedClassToTree" specification="_RS53sNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQoK9zqEeaMeaEvRdRzBA" name="newlyCreatedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>// Save copy for not working on the classes reference
		Queue&lt;String> packageName = new LinkedList&lt;String>();
		TestedClass existingClass = getClass(newlyCreatedClass);

		if (existingClass != null) {
			// classLog of new created Classes always have only one item
			UnitTestsToTestRunMapper newMapping = newlyCreatedClass.getClassLog().get(0);
			UnitTest unitTestOfNewClass = newMapping.getUnitTestList().get(0);
			existingClass.addUnitTestToClassLog(unitTestOfNewClass);
			

		} else {
			packageName.addAll(newlyCreatedClass.getPackageName());
			root.insert(packageName, newlyCreatedClass);
			
		}	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVQoLNzqEeaMeaEvRdRzBA" name="addNewUnitTest" specification="_RS53stzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVQoLdzqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>unitTestList.add(unitTest);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVRPMNzqEeaMeaEvRdRzBA" name="getTestRunByID" specification="_RNnIAdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVRPMdzqEeaMeaEvRdRzBA" name="runID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVRPMtzqEeaMeaEvRdRzBA" type="_RNqLUNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>for (TestRun testRun : testRunList) {
			if (testRun.getRunID().equals(runID)) {
				return testRun;
			}
		}
		// System.err.println(runID + &quot; is not a valid test run id.&quot;);
		// TODO: Throw Exception
		return null;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVRPM9zqEeaMeaEvRdRzBA" name="getClassByName" specification="_RNnvENzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVRPNNzqEeaMeaEvRdRzBA" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVRPNdzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return root.searchByName(name);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVRPNtzqEeaMeaEvRdRzBA" name="getClass" specification="_RS53ttzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVRPN9zqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVRPONzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return root.search(testedClass);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVRPOdzqEeaMeaEvRdRzBA" name="getTreeHeight" specification="_RNnvEtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVRPOtzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return root.getDepth(root)-2;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RNl54NzqEeaMeaEvRdRzBA" name="TestData" visibility="private">
              <eAnnotations xmi:id="_RNl54dzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RNl54tzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RNmg8dzqEeaMeaEvRdRzBA" type="_RNlS0NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNmg8tzqEeaMeaEvRdRzBA" name="getInstance" isStatic="true" method="_RVQoItzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS5QodzqEeaMeaEvRdRzBA" type="_RNlS0NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNmg89zqEeaMeaEvRdRzBA" name="getTestedClasses" method="_RVQoJNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNmg9NzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RNmg9dzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNnIANzqEeaMeaEvRdRzBA" name="printTree" method="_RVQoKdzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RNnIAdzqEeaMeaEvRdRzBA" name="getTestRunByID" method="_RVRPMNzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVkKINzqEeaMeaEvRdRzBA">
                <body>@param runID
	 * @return the TestRun according to the runID; returns null if TestRun
	 *         doesn't exist</body>
              </ownedComment>
              <ownedParameter xmi:id="_RNnIAtzqEeaMeaEvRdRzBA" name="runID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RS53tNzqEeaMeaEvRdRzBA" type="_RNqLUNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNnvENzqEeaMeaEvRdRzBA" name="getClassByName" method="_RVRPM9zqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVkKIdzqEeaMeaEvRdRzBA">
                <body>@param name
	 * @return the TestedClass according to the class name; returns null if
	 *         TestedClass doesn't exist</body>
              </ownedComment>
              <ownedParameter xmi:id="_RNnvEdzqEeaMeaEvRdRzBA" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RS53tdzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNnvEtzqEeaMeaEvRdRzBA" name="getTreeHeight" method="_RVRPOdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNnvE9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS5QotzqEeaMeaEvRdRzBA" name="addNewTestRun" method="_RVQoJ9zqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS5Qo9zqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RS53sNzqEeaMeaEvRdRzBA" name="addNewTestedClassToTree" method="_RVQoKtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS53sdzqEeaMeaEvRdRzBA" name="newlyCreatedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RS53stzqEeaMeaEvRdRzBA" name="addNewUnitTest" method="_RVQoLNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS53s9zqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RS53ttzqEeaMeaEvRdRzBA" name="getClass" method="_RVRPNtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS6ewNzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS6ewdzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RNqLUNzqEeaMeaEvRdRzBA" name="TestRun">
            <ownedAttribute xmi:id="_RUsncNzqEeaMeaEvRdRzBA" name="runID" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUtOgdzqEeaMeaEvRdRzBA" name="resultSummary" type="_RNU0IdzqEeaMeaEvRdRzBA" association="_RVkxMtzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RUtOgtzqEeaMeaEvRdRzBA" name="testedClasses" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" association="_RV0BwdzqEeaMeaEvRdRzBA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUtOg9zqEeaMeaEvRdRzBA" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUtOhNzqEeaMeaEvRdRzBA" value="new LinkedList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUtOhdzqEeaMeaEvRdRzBA" name="path">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUt1kNzqEeaMeaEvRdRzBA" name="startTime" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUt1ktzqEeaMeaEvRdRzBA" name="runDate" type="_RNt1sNzqEeaMeaEvRdRzBA" association="_RVkxNNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVkKItzqEeaMeaEvRdRzBA" name="runName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVRPPdzqEeaMeaEvRdRzBA" name="TestRun" specification="_RNqyYNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVRPPtzqEeaMeaEvRdRzBA" name="runID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVRPP9zqEeaMeaEvRdRzBA" name="runName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVRPQNzqEeaMeaEvRdRzBA" type="_RNqLUNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.runID = runID;
		this.runName = runName;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVRPQdzqEeaMeaEvRdRzBA" name="addTestedClassToTestRun" specification="_RS7F0NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVRPQtzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>boolean existing = false;
		for (TestedClass existingClass : testedClasses) {
			if (existingClass.getClassName().equals(testedClass.getClassName())) {
				existing = true;
			}
		}
		if (!existing) {
			testedClasses.add(testedClass);
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVR2QNzqEeaMeaEvRdRzBA" name="setStartTime" specification="_RNrZddzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVR2QdzqEeaMeaEvRdRzBA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.startTime = startTime;
		setRunDate();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVR2QtzqEeaMeaEvRdRzBA" name="setRunDate" specification="_RNrZd9zqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>String[] startT = startTime.split(&quot;T&quot;);
		String[] date = startT[0].split(&quot;-&quot;);
		String[] timeWithJunk = startT[1].split(&quot;\\.&quot;);
		String[] time = timeWithJunk[0].split(&quot;:&quot;);

		int year = Integer.parseInt(date[0]);
		int month = Integer.parseInt(date[1]);
		int day = Integer.parseInt(date[2]);
		
		int hrs = Integer.parseInt(time[0]);
		int min = Integer.parseInt(time[1]);
		int sec = Integer.parseInt(time[2]);
		
		runDate = new TestRunStartTime(year, month, day, hrs, min, sec);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVR2Q9zqEeaMeaEvRdRzBA" name="getRunName" specification="_RNsAgNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVR2RNzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return runName;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVR2RdzqEeaMeaEvRdRzBA" name="hashCode" specification="_RNsAgtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVR2RtzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>final int prime = 31;
		int result = 1;
		result = prime * result + ((runID == null) ? 0 : runID.hashCode());
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVR2R9zqEeaMeaEvRdRzBA" name="equals" specification="_RUAD4tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVR2SNzqEeaMeaEvRdRzBA" name="obj" type="_RUAD4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVR2SdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TestRun other = (TestRun) obj;
		if (runID == null) {
			if (other.runID != null)
				return false;
		} else if (!runID.equals(other.runID))
			return false;
		return true;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RNqyYNzqEeaMeaEvRdRzBA" name="TestRun" method="_RVRPPdzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RNrZctzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RNrZc9zqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RNrZcNzqEeaMeaEvRdRzBA" name="runID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNrZcdzqEeaMeaEvRdRzBA" name="runName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNrZdNzqEeaMeaEvRdRzBA" type="_RNqLUNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNrZddzqEeaMeaEvRdRzBA" name="setStartTime" method="_RVR2QNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNrZdtzqEeaMeaEvRdRzBA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNrZd9zqEeaMeaEvRdRzBA" name="setRunDate" visibility="private" method="_RVR2QtzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVkxNtzqEeaMeaEvRdRzBA">
                <body>Extracts the Time the Test was Run from the startTime String</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_RNsAgNzqEeaMeaEvRdRzBA" name="getRunName" method="_RVR2Q9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNsAgdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNsAgtzqEeaMeaEvRdRzBA" name="hashCode" method="_RVR2RdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNsAg9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS7F0NzqEeaMeaEvRdRzBA" name="addTestedClassToTestRun" method="_RVRPQdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS7F0dzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUAD4tzqEeaMeaEvRdRzBA" name="equals" method="_RVR2R9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUAD49zqEeaMeaEvRdRzBA" name="obj" type="_RUAD4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUAD5NzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RNt1sNzqEeaMeaEvRdRzBA" name="TestRunStartTime">
            <ownedAttribute xmi:id="_RUt1k9zqEeaMeaEvRdRzBA" name="year" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUucoNzqEeaMeaEvRdRzBA" name="month" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUucodzqEeaMeaEvRdRzBA" name="day" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUucotzqEeaMeaEvRdRzBA" name="hour" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUuco9zqEeaMeaEvRdRzBA" name="min" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUucpNzqEeaMeaEvRdRzBA" name="sec" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_RUAq8tzqEeaMeaEvRdRzBA" client="_RNt1sNzqEeaMeaEvRdRzBA" supplier="_RUAq8NzqEeaMeaEvRdRzBA" contract="_RUAq8NzqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVR2StzqEeaMeaEvRdRzBA" name="TestRunStartTime" specification="_RNvD0NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVR2S9zqEeaMeaEvRdRzBA" name="year">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVR2TNzqEeaMeaEvRdRzBA" name="month">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVR2TdzqEeaMeaEvRdRzBA" name="day">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVR2TtzqEeaMeaEvRdRzBA" name="hour">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVR2T9zqEeaMeaEvRdRzBA" name="min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVR2UNzqEeaMeaEvRdRzBA" name="sec">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVR2UdzqEeaMeaEvRdRzBA" type="_RNt1sNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.year = year;
		this.month = month;
		this.day = day;
		this.hour = hour;
		this.min = min;
		this.sec = sec;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVR2UtzqEeaMeaEvRdRzBA" name="toString" specification="_RNvq4NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVR2U9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;TestRunStartTime [&quot; + year + &quot;-&quot; + month + &quot;-&quot; + day + &quot; &quot; + hour + &quot;:&quot; + min + &quot;:&quot; + sec + &quot;]&quot;;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVSdUNzqEeaMeaEvRdRzBA" name="compareTo" specification="_RS8T8NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVSdUdzqEeaMeaEvRdRzBA" name="o" type="_RNt1sNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVSdUtzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int sizeComparison = Integer.compare(year, o.getYear());

		if (sizeComparison == 0) {
			sizeComparison = Integer.compare(month, o.getMonth());
			if (sizeComparison == 0) {
				sizeComparison = Integer.compare(day, o.getDay());
				if (sizeComparison == 0) {
					sizeComparison = Integer.compare(hour, o.getHour());
					if (sizeComparison == 0) {
						sizeComparison = Integer.compare(min, o.getMonth());
						if (sizeComparison == 0) {
							sizeComparison = Integer.compare(sec, o.getSec());
						}
					}
				}
			}
		}
		return sizeComparison;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RNvD0NzqEeaMeaEvRdRzBA" name="TestRunStartTime" method="_RVR2StzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RNvD19zqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RNvD2NzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RNvD0dzqEeaMeaEvRdRzBA" name="year">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNvD0tzqEeaMeaEvRdRzBA" name="month">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNvD09zqEeaMeaEvRdRzBA" name="day">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNvD1NzqEeaMeaEvRdRzBA" name="hour">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNvD1dzqEeaMeaEvRdRzBA" name="min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNvD1tzqEeaMeaEvRdRzBA" name="sec">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNvD2dzqEeaMeaEvRdRzBA" type="_RNt1sNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNvq4NzqEeaMeaEvRdRzBA" name="toString" method="_RVR2UtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNvq4dzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS8T8NzqEeaMeaEvRdRzBA" name="compareTo" method="_RVSdUNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS8T8dzqEeaMeaEvRdRzBA" name="o" type="_RNt1sNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS87ANzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RNw5ANzqEeaMeaEvRdRzBA" name="TestedClass">
            <ownedAttribute xmi:id="_RUucpdzqEeaMeaEvRdRzBA" name="className">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUvDsNzqEeaMeaEvRdRzBA" name="packageName" type="_RS4pktzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV0BxNzqEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUvDstzqEeaMeaEvRdRzBA" value="new LinkedList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUvDs9zqEeaMeaEvRdRzBA" name="currentFailurePercentage" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUvDtNzqEeaMeaEvRdRzBA" value="-1.00"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUvDtdzqEeaMeaEvRdRzBA" name="classLog" type="_RN-7cNzqEeaMeaEvRdRzBA" isOrdered="true" isReadOnly="true" association="_RV0o0dzqEeaMeaEvRdRzBA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUvDttzqEeaMeaEvRdRzBA" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUvqwNzqEeaMeaEvRdRzBA" value="new LinkedList&lt;>()"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVSdU9zqEeaMeaEvRdRzBA" name="TestedClass" specification="_RS9iENzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVSdVNzqEeaMeaEvRdRzBA" name="className">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVSdVdzqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVSdVtzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>String[] packagePlusClassName = className.split(&quot;\\.&quot;);
		
		this.className = packagePlusClassName[packagePlusClassName.length - 1];
		
		for (int i = 0; i &lt; packagePlusClassName.length - 1; i++) {
			packageName.add(packagePlusClassName[i]);
		}
		
		classLog.add(new UnitTestsToTestRunMapper(unitTest));

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVSdV9zqEeaMeaEvRdRzBA" name="addUnitTestToClassLog" specification="_RS-JINzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVSdWNzqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>String runID = unitTest.getTestRun().getRunID();

		// Assume newTestRun
		boolean newTestRun = true;

		// Look for existing TestRuns
		for (UnitTestsToTestRunMapper runMapper : classLog) {
			if (runMapper.getTestRun().getRunID().equals(runID)) {
				newTestRun = false;
				// add UnitTest to existing TestRun
				runMapper.addUnitTestToTestRun(unitTest);
			}
		}
		// Create a new Mapping for a new TestRun
		if (newTestRun) {
			classLog.add(new UnitTestsToTestRunMapper(unitTest));
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVSdWdzqEeaMeaEvRdRzBA" name="getFailurePercentageByTestrun" specification="_RS-JItzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVSdWtzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVSdW9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>for (UnitTestsToTestRunMapper unitTestsToTestRunMapper : classLog) {
			if (unitTestsToTestRunMapper.getTestRun().getRunID().equals(testRun.getRunID())) {
				return unitTestsToTestRunMapper.getFailurePercentage();
			}
		}
		return -1.0;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVSdXNzqEeaMeaEvRdRzBA" name="getUnitTestsByTestRun" specification="_RS-JJdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVSdXdzqEeaMeaEvRdRzBA" name="testrun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVSdXtzqEeaMeaEvRdRzBA" type="_RN74INzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVSdX9zqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>for (UnitTestsToTestRunMapper unitTestsToTestRunMapper : classLog) {
			if (unitTestsToTestRunMapper.getTestRun().getRunID().equals(testrun.getRunID())) {
				return unitTestsToTestRunMapper.getUnitTestList();
			}
		}
		throw new IllegalArgumentException(testrun.getRunID() + &quot; can't be found in the class log&quot;);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVSdYNzqEeaMeaEvRdRzBA" name="getUnitTestsByTestRun" specification="_RS-wMNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVSdYdzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVSdYtzqEeaMeaEvRdRzBA" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVSdY9zqEeaMeaEvRdRzBA" type="_RN74INzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVSdZNzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;UnitTest> unitTests = getUnitTestsByTestRun(testRun);
		List&lt;UnitTest> returnList = new LinkedList&lt;>();
		for (UnitTest unitTest : unitTests) {
			if (unitTest.hasPassed() == passed) {
				returnList.add(unitTest);
			}
		}
		return returnList;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVSdZdzqEeaMeaEvRdRzBA" name="getUnitTestsNamesByTestRun" specification="_RS-wNdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVSdZtzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVSdZ9zqEeaMeaEvRdRzBA" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVSdaNzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVSdadzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;UnitTest> unitTests = getUnitTestsByTestRun(testRun);
		List&lt;String> returnList = new LinkedList&lt;>();
		for (UnitTest unitTest : unitTests) {
			if (unitTest.hasPassed() == passed) {
				returnList.add(unitTest.getUnitTestName());
			}
		}
		return returnList;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVSdatzqEeaMeaEvRdRzBA" name="setCurrentFailurePercentage" specification="_RS_XQNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVSda9zqEeaMeaEvRdRzBA" name="testrun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>currentFailurePercentage = getFailurePercentageByTestrun(testrun);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTEYNzqEeaMeaEvRdRzBA" name="toString" specification="_RNyHINzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTEYdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;Name: &quot; + className;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTEYtzqEeaMeaEvRdRzBA" name="hashCode" specification="_RNyuM9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTEY9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>final int prime = 31;
		int result = 1;
		result = prime * result + ((className == null) ? 0 : className.hashCode());
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTEZNzqEeaMeaEvRdRzBA" name="equals" specification="_RUB5ENzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTEZdzqEeaMeaEvRdRzBA" name="obj" type="_RUAD4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVTEZtzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TestedClass other = (TestedClass) obj;
		if (className == null) {
			if (other.className != null)
				return false;
		} else if (!className.equals(other.className))
			return false;
		return true;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RNyHINzqEeaMeaEvRdRzBA" name="toString" method="_RVTEYNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNyHIdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNyuM9zqEeaMeaEvRdRzBA" name="hashCode" method="_RVTEYtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNyuNNzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS9iENzqEeaMeaEvRdRzBA" name="TestedClass" method="_RVSdU9zqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RS9iE9zqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RS9iFNzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RS9iEdzqEeaMeaEvRdRzBA" name="className">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RS9iEtzqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS9iFdzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RS-JINzqEeaMeaEvRdRzBA" name="addUnitTestToClassLog" method="_RVSdV9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS-JIdzqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RS-JItzqEeaMeaEvRdRzBA" name="getFailurePercentageByTestrun" method="_RVSdWdzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVlYQNzqEeaMeaEvRdRzBA">
                <body>
	 * @param testRun
	 * @return the FP or -1 if the testRun didn't test a class</body>
              </ownedComment>
              <ownedParameter xmi:id="_RS-JI9zqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS-JJNzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS-JJdzqEeaMeaEvRdRzBA" name="getUnitTestsByTestRun" method="_RVSdXNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS-JJtzqEeaMeaEvRdRzBA" name="testrun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS-JJ9zqEeaMeaEvRdRzBA" type="_RN74INzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RS-JKNzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS-wMNzqEeaMeaEvRdRzBA" name="getUnitTestsByTestRun" method="_RVSdYNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS-wMdzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS-wMtzqEeaMeaEvRdRzBA" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RS-wM9zqEeaMeaEvRdRzBA" type="_RN74INzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RS-wNNzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS-wNdzqEeaMeaEvRdRzBA" name="getUnitTestsNamesByTestRun" method="_RVSdZdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS-wNtzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS-wN9zqEeaMeaEvRdRzBA" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RS-wONzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RS-wOdzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS_XQNzqEeaMeaEvRdRzBA" name="setCurrentFailurePercentage" method="_RVSdatzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS_XQdzqEeaMeaEvRdRzBA" name="testrun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUB5ENzqEeaMeaEvRdRzBA" name="equals" method="_RVTEZNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUB5EdzqEeaMeaEvRdRzBA" name="obj" type="_RUAD4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUB5EtzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RN1KcNzqEeaMeaEvRdRzBA" name="TreeNode">
            <ownedAttribute xmi:id="_RUvqwdzqEeaMeaEvRdRzBA" name="key" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUvqw9zqEeaMeaEvRdRzBA" name="testedClass" visibility="package" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RV0o1NzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RUwR0dzqEeaMeaEvRdRzBA" name="children" visibility="package" type="_RN1KcNzqEeaMeaEvRdRzBA" isOrdered="true" association="_RV0o19zqEeaMeaEvRdRzBA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUwR0tzqEeaMeaEvRdRzBA" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUwR09zqEeaMeaEvRdRzBA" value="new LinkedList&lt;TreeNode>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUwR1dzqEeaMeaEvRdRzBA" name="parent" visibility="package" type="_RN1KcNzqEeaMeaEvRdRzBA" association="_RV1P4dzqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTEZ9zqEeaMeaEvRdRzBA" name="TreeNode" specification="_RS_-UNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTEaNzqEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVTEadzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVTEatzqEeaMeaEvRdRzBA" name="parent" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVTEa9zqEeaMeaEvRdRzBA" type="_RN1KcNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.key = key;
		this.testedClass = testedClass;
		this.parent = parent;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTEbNzqEeaMeaEvRdRzBA" name="insert" specification="_RUCgINzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTEbdzqEeaMeaEvRdRzBA" name="packageName" type="_RS4pktzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVTEbtzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>if (packageName.isEmpty()) {
			TreeNode classNode = new TreeNode(testedClass.getClassName(), testedClass, this);
			if (!children.contains(classNode)) {
				children.add(classNode);
			}
		} else {
			TreeNode packageNode = new TreeNode(packageName.poll(), null, this);
			if (!children.contains(packageNode)) {
				children.add(packageNode);
			} else {
				packageNode = children.get(children.indexOf(packageNode));
			}
			packageNode.insert(packageName, testedClass);
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTEb9zqEeaMeaEvRdRzBA" name="getDistance" specification="_RTAlY9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTEcNzqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVTEcdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int dist = 0;
		if (this.key.equals(node.getKey())) {
			return dist;
		}
		if (this.getParent().searchNode(node.getKey()) == null) {
			return 1 + this.getParent().getDistance(node);
		} else {
			return 1 + node.getDistance(this.getParent());
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTEctzqEeaMeaEvRdRzBA" name="getDepth" specification="_RTAlZtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTEc9zqEeaMeaEvRdRzBA" name="currentNode" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVTEdNzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int maxDepth = 0;
		
			if(currentNode.getChildren().isEmpty()){
				return maxDepth;
			}
			for(TreeNode child : currentNode.getChildren()){
				maxDepth = Math.max(maxDepth, 1+getDepth(child));
			}
//			maxDist = Math.max(maxDist, getDistance(node)+1);
//		
		return maxDepth;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTrcNzqEeaMeaEvRdRzBA" name="searchByName" specification="_RN2YkNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTrcdzqEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVTrctzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>if (this.key.equals(key)) {
			return testedClass;
		} else {
			for (TreeNode treeNode : children) {
				TestedClass toBeFound = treeNode.searchByName(key);
				if (toBeFound != null) {
					return toBeFound;
				}
			}
		}

		return null;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTrc9zqEeaMeaEvRdRzBA" name="searchNode" specification="_RN2YktzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTrdNzqEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVTrddzqEeaMeaEvRdRzBA" type="_RN1KcNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>if (this.key.equals(key)) {
			return this;
		} else {
			for (TreeNode treeNode : children) {
				TreeNode toBeFound = treeNode.searchNode(key);
				if (toBeFound != null) {
					return toBeFound;
				}
			}
		}

		return null;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTrdtzqEeaMeaEvRdRzBA" name="getTestedClasses" specification="_RUDHMdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTrd9zqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVTreNzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVTredzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>if (testedClass != null) {
			testedClasses.add(testedClass);
		}
		for (TreeNode node : children) {
			node.getTestedClasses(testedClasses);
		}
		return testedClasses;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTretzqEeaMeaEvRdRzBA" name="getTestedClasses" specification="_RN2_oNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTre9zqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVTrfNzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return getTestedClasses(new LinkedList&lt;TestedClass>());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTrfdzqEeaMeaEvRdRzBA" name="search" specification="_RTBMctzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTrftzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVTrf9zqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return searchByName(testedClass.getClassName());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTrgNzqEeaMeaEvRdRzBA" name="getKey" specification="_RN2_o9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTrgdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return key;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTrgtzqEeaMeaEvRdRzBA" name="setKey" specification="_RN3msdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTrg9zqEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.key = key;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTrhNzqEeaMeaEvRdRzBA" name="getTestedClass" specification="_RN3ms9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTrhdzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return testedClass;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVTrhtzqEeaMeaEvRdRzBA" name="setTestedClass" specification="_RTBMdtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVTrh9zqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>this.testedClass = testedClass;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVUSgNzqEeaMeaEvRdRzBA" name="getChildren" specification="_RN3mtNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVUSgdzqEeaMeaEvRdRzBA" type="_RN1KcNzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVUSgtzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return children;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVUSg9zqEeaMeaEvRdRzBA" name="getParent" specification="_RN4NwdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVUShNzqEeaMeaEvRdRzBA" type="_RN1KcNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return parent;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVUShdzqEeaMeaEvRdRzBA" name="printTree" specification="_RN4NwtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVUShtzqEeaMeaEvRdRzBA" name="increment">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVUSh9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String s = &quot;&quot;;
		String inc = &quot;&quot;;
		for (int i = 0; i &lt; increment; ++i) {
			inc = inc + &quot; &quot;;
		}
		s = inc + key;
		for (TreeNode child : children) {
			s += &quot;\n&quot; + child.printTree(increment + 2);
		}
		return s;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVUSiNzqEeaMeaEvRdRzBA" name="toString" specification="_RN4NxdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVUSidzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return key;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVUSitzqEeaMeaEvRdRzBA" name="hashCode" specification="_RN401NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVUSi9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>final int prime = 31;
		int result = 1;
		result = prime * result + ((key == null) ? 0 : key.hashCode());
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVUSjNzqEeaMeaEvRdRzBA" name="equals" specification="_RUDuQNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVUSjdzqEeaMeaEvRdRzBA" name="obj" type="_RUAD4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVUSjtzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TreeNode other = (TreeNode) obj;
		if (key == null) {
			if (other.key != null)
				return false;
		} else if (!key.equals(other.key))
			return false;
		return true;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RN2YkNzqEeaMeaEvRdRzBA" name="searchByName" method="_RVTrcNzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVlYQ9zqEeaMeaEvRdRzBA">
                <body>Searches in the DataTree for the Class with className as key
	 * 
	 * @param key
	 * @return the testedClass</body>
              </ownedComment>
              <ownedParameter xmi:id="_RN2YkdzqEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RTBMcNzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RN2YktzqEeaMeaEvRdRzBA" name="searchNode" method="_RVTrc9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN2Yk9zqEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RTBMcdzqEeaMeaEvRdRzBA" type="_RN1KcNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RN2_oNzqEeaMeaEvRdRzBA" name="getTestedClasses" method="_RVTretzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN2_odzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RN2_otzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RN2_o9zqEeaMeaEvRdRzBA" name="getKey" method="_RVTrgNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN3msNzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RN3msdzqEeaMeaEvRdRzBA" name="setKey" method="_RVTrgtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN3mstzqEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RN3ms9zqEeaMeaEvRdRzBA" name="getTestedClass" method="_RVTrhNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTBMddzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RN3mtNzqEeaMeaEvRdRzBA" name="getChildren" method="_RVUSgNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN3mtdzqEeaMeaEvRdRzBA" type="_RN1KcNzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RN4NwNzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RN4NwdzqEeaMeaEvRdRzBA" name="getParent" method="_RVUSg9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTBzgNzqEeaMeaEvRdRzBA" type="_RN1KcNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RN4NwtzqEeaMeaEvRdRzBA" name="printTree" method="_RVUShdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN4Nw9zqEeaMeaEvRdRzBA" name="increment">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RN4NxNzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RN4NxdzqEeaMeaEvRdRzBA" name="toString" method="_RVUSiNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN400NzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RN401NzqEeaMeaEvRdRzBA" name="hashCode" method="_RVUSitzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN401dzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS_-UNzqEeaMeaEvRdRzBA" name="TreeNode" method="_RVTEZ9zqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTAlYNzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTAlYdzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RS_-UdzqEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RS_-UtzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS_-U9zqEeaMeaEvRdRzBA" name="parent" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTAlYtzqEeaMeaEvRdRzBA" type="_RN1KcNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTAlY9zqEeaMeaEvRdRzBA" name="getDistance" method="_RVTEb9zqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVlYQdzqEeaMeaEvRdRzBA">
                <body>Called by AprioriAnalyzer
	 * @param node
	 * @return</body>
              </ownedComment>
              <ownedParameter xmi:id="_RTAlZNzqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTAlZdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RTAlZtzqEeaMeaEvRdRzBA" name="getDepth" method="_RVTEctzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVlYQtzqEeaMeaEvRdRzBA">
                <body>Called by TestData (max depth)
	 * @param node
	 * @return</body>
              </ownedComment>
              <ownedParameter xmi:id="_RTAlZ9zqEeaMeaEvRdRzBA" name="currentNode" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTAlaNzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RTBMctzqEeaMeaEvRdRzBA" name="search" method="_RVTrfdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTBMc9zqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTBMdNzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTBMdtzqEeaMeaEvRdRzBA" name="setTestedClass" method="_RVTrhtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTBMd9zqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUCgINzqEeaMeaEvRdRzBA" name="insert" method="_RVTEbNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUCgIdzqEeaMeaEvRdRzBA" name="packageName" type="_RS4pktzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUCgItzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUDHMdzqEeaMeaEvRdRzBA" name="getTestedClasses" method="_RVTrdtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUDHMtzqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUDHM9zqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUDHNNzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RUDuQNzqEeaMeaEvRdRzBA" name="equals" method="_RVUSjNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUDuQdzqEeaMeaEvRdRzBA" name="obj" type="_RUAD4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUDuQtzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RN74INzqEeaMeaEvRdRzBA" name="UnitTest">
            <ownedAttribute xmi:id="_RUw44NzqEeaMeaEvRdRzBA" name="unitTestID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUw44dzqEeaMeaEvRdRzBA" name="unitTestName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUw44tzqEeaMeaEvRdRzBA" name="unitTestExecutionID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUw449zqEeaMeaEvRdRzBA" name="testMethodName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUw45NzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RVlYRNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RUxf8NzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RVlYRtzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RUxf8dzqEeaMeaEvRdRzBA" name="passed" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVUSj9zqEeaMeaEvRdRzBA" name="UnitTest" specification="_RTDBoNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVUSkNzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVUSkdzqEeaMeaEvRdRzBA" name="unitTestID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVUSktzqEeaMeaEvRdRzBA" name="unitTestName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVUSk9zqEeaMeaEvRdRzBA" name="unitTestExecutionID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVUSlNzqEeaMeaEvRdRzBA" name="testMethodName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVUSldzqEeaMeaEvRdRzBA" type="_RN74INzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// TODO Auto-generated constructor stub
		this.testRun = testRun;
		this.unitTestID = unitTestID;
		this.unitTestName = unitTestName;
		this.unitTestExecutionID = unitTestExecutionID;
		this.testMethodName = testMethodName;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVU5kNzqEeaMeaEvRdRzBA" name="hasPassed" specification="_RN9GQNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVU5kdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return passed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVU5ktzqEeaMeaEvRdRzBA" name="setOutcome" specification="_RN9GQtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVU5k9zqEeaMeaEvRdRzBA" name="outcome">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (outcome.equals(&quot;Passed&quot;)) {
			this.passed = true;
		} else {
			this.passed = false;
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVU5lNzqEeaMeaEvRdRzBA" name="toString" specification="_RN9tUNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVU5ldzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;UnitTest [unitTestID=&quot; + unitTestID + &quot;, unitTestName=&quot; + unitTestName + &quot;, outcome=&quot; + passed + &quot;]&quot;;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RN9GQNzqEeaMeaEvRdRzBA" name="hasPassed" method="_RVU5kNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN9GQdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RN9GQtzqEeaMeaEvRdRzBA" name="setOutcome" method="_RVU5ktzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN9GQ9zqEeaMeaEvRdRzBA" name="outcome">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RN9tUNzqEeaMeaEvRdRzBA" name="toString" method="_RVU5lNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN9tUdzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RTDBoNzqEeaMeaEvRdRzBA" name="UnitTest" method="_RVUSj9zqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTDBptzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTDBp9zqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RTDBodzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTDBotzqEeaMeaEvRdRzBA" name="unitTestID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RTDBo9zqEeaMeaEvRdRzBA" name="unitTestName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RTDBpNzqEeaMeaEvRdRzBA" name="unitTestExecutionID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RTDBpdzqEeaMeaEvRdRzBA" name="testMethodName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RTDBqNzqEeaMeaEvRdRzBA" type="_RN74INzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RN-7cNzqEeaMeaEvRdRzBA" name="UnitTestsToTestRunMapper">
            <ownedComment xmi:id="_RVlYSNzqEeaMeaEvRdRzBA">
              <body>Maps one TestedClass to One TestRun and multiple UnitTests
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_RUxf89zqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RVlYSdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RUxf9NzqEeaMeaEvRdRzBA" name="unitTestList" type="_RN74INzqEeaMeaEvRdRzBA" isOrdered="true" association="_RV1P5NzqEeaMeaEvRdRzBA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RUyHANzqEeaMeaEvRdRzBA" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUyHAdzqEeaMeaEvRdRzBA" value="new ArrayList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RUyHAtzqEeaMeaEvRdRzBA" name="failurePercentage">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVU5mtzqEeaMeaEvRdRzBA" name="UnitTestsToTestRunMapper" specification="_RTDosNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVU5m9zqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVU5nNzqEeaMeaEvRdRzBA" type="_RN-7cNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.testRun = unitTest.getTestRun();
		unitTestList.add(unitTest);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVU5ndzqEeaMeaEvRdRzBA" name="addUnitTestToTestRun" specification="_RTEPwdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVU5ntzqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>unitTestList.add(unitTest);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVU5n9zqEeaMeaEvRdRzBA" name="calculateFailurePercentage" specification="_RN_igNzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>double numberOfUnitTests = unitTestList.size();
		double numberOfFailedTests = 0;
		for (UnitTest unitTest : unitTestList) {
			if (!unitTest.hasPassed()) {
				numberOfFailedTests++;
			}
		}
		failurePercentage = (numberOfFailedTests * 100 / numberOfUnitTests);
		int round = (int) Math.round(failurePercentage * 100);
		// limit double to two digits after comma
		failurePercentage = round / 100.0;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVU5oNzqEeaMeaEvRdRzBA" name="toString" specification="_RN_igdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVU5odzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;Mapper [testRun=&quot; + testRun.getRunID() + &quot;, unitTestList=&quot; + unitTestList + &quot;, failurePercentage=&quot;
				+ getFailurePercentage() + &quot;]&quot;;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RN_igNzqEeaMeaEvRdRzBA" name="calculateFailurePercentage" visibility="private" method="_RVU5n9zqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RN_igdzqEeaMeaEvRdRzBA" name="toString" method="_RVU5oNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RN_igtzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RTDosNzqEeaMeaEvRdRzBA" name="UnitTestsToTestRunMapper" method="_RVU5mtzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTDostzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTDos9zqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RTDosdzqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTEPwNzqEeaMeaEvRdRzBA" type="_RN-7cNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTEPwdzqEeaMeaEvRdRzBA" name="addUnitTestToTestRun" method="_RVU5ndzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTEPwtzqEeaMeaEvRdRzBA" name="unitTest" type="_RN74INzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVkxMtzqEeaMeaEvRdRzBA" name="" memberEnd="_RUtOgdzqEeaMeaEvRdRzBA _RVkxM9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVkxM9zqEeaMeaEvRdRzBA" name="" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RVkxMtzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVkxNNzqEeaMeaEvRdRzBA" name="" memberEnd="_RUt1ktzqEeaMeaEvRdRzBA _RVkxNdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVkxNdzqEeaMeaEvRdRzBA" name="" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RVkxNNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVlYRNzqEeaMeaEvRdRzBA" name="" memberEnd="_RUw45NzqEeaMeaEvRdRzBA _RVlYRdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVlYRdzqEeaMeaEvRdRzBA" name="" type="_RN74INzqEeaMeaEvRdRzBA" association="_RVlYRNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVlYRtzqEeaMeaEvRdRzBA" name="" memberEnd="_RUxf8NzqEeaMeaEvRdRzBA _RVlYR9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVlYR9zqEeaMeaEvRdRzBA" name="" type="_RN74INzqEeaMeaEvRdRzBA" association="_RVlYRtzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVlYSdzqEeaMeaEvRdRzBA" name="" memberEnd="_RUxf89zqEeaMeaEvRdRzBA _RVlYStzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVlYStzqEeaMeaEvRdRzBA" name="" type="_RN-7cNzqEeaMeaEvRdRzBA" association="_RVlYSdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVyzoNzqEeaMeaEvRdRzBA" name="" memberEnd="_RVyzodzqEeaMeaEvRdRzBA _RUqyQNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVyzodzqEeaMeaEvRdRzBA" name="" type="_RNkEsNzqEeaMeaEvRdRzBA" association="_RVyzoNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVyzo9zqEeaMeaEvRdRzBA" name="" memberEnd="_RVyzpNzqEeaMeaEvRdRzBA _RUqyQtzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVyzpNzqEeaMeaEvRdRzBA" name="" type="_RNlS0NzqEeaMeaEvRdRzBA" association="_RVyzo9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVyzptzqEeaMeaEvRdRzBA" name="" memberEnd="_RVyzp9zqEeaMeaEvRdRzBA _RUqyRNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVyzp9zqEeaMeaEvRdRzBA" name="" type="_RNlS0NzqEeaMeaEvRdRzBA" association="_RVyzptzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVzasdzqEeaMeaEvRdRzBA" name="" memberEnd="_RVzastzqEeaMeaEvRdRzBA _RUrZUtzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVzastzqEeaMeaEvRdRzBA" name="" type="_RNlS0NzqEeaMeaEvRdRzBA" association="_RVzasdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVzatNzqEeaMeaEvRdRzBA" name="" memberEnd="_RVzatdzqEeaMeaEvRdRzBA _RUrZVdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVzatdzqEeaMeaEvRdRzBA" name="" type="_RNlS0NzqEeaMeaEvRdRzBA" association="_RVzatNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVzat9zqEeaMeaEvRdRzBA" name="" memberEnd="_RVzauNzqEeaMeaEvRdRzBA _RUsAYdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVzauNzqEeaMeaEvRdRzBA" name="" type="_RNlS0NzqEeaMeaEvRdRzBA" association="_RVzat9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV0BwdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV0BwtzqEeaMeaEvRdRzBA _RUtOgtzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV0BwtzqEeaMeaEvRdRzBA" name="" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RV0BwdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV0BxNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV0BxdzqEeaMeaEvRdRzBA _RUvDsNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV0BxdzqEeaMeaEvRdRzBA" name="" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RV0BxNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV0o0dzqEeaMeaEvRdRzBA" name="" memberEnd="_RV0o0tzqEeaMeaEvRdRzBA _RUvDtdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV0o0tzqEeaMeaEvRdRzBA" name="" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RV0o0dzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV0o1NzqEeaMeaEvRdRzBA" name="" memberEnd="_RV0o1dzqEeaMeaEvRdRzBA _RUvqw9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV0o1dzqEeaMeaEvRdRzBA" name="" type="_RN1KcNzqEeaMeaEvRdRzBA" association="_RV0o1NzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV0o19zqEeaMeaEvRdRzBA" name="" memberEnd="_RV0o2NzqEeaMeaEvRdRzBA _RUwR0dzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV0o2NzqEeaMeaEvRdRzBA" name="" type="_RN1KcNzqEeaMeaEvRdRzBA" association="_RV0o19zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV1P4dzqEeaMeaEvRdRzBA" name="" memberEnd="_RV1P4tzqEeaMeaEvRdRzBA _RUwR1dzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV1P4tzqEeaMeaEvRdRzBA" name="" type="_RN1KcNzqEeaMeaEvRdRzBA" association="_RV1P4dzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV1P5NzqEeaMeaEvRdRzBA" name="" memberEnd="_RV1P5dzqEeaMeaEvRdRzBA _RUxf9NzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV1P5dzqEeaMeaEvRdRzBA" name="" type="_RN-7cNzqEeaMeaEvRdRzBA" association="_RV1P5NzqEeaMeaEvRdRzBA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RJQzhdzqEeaMeaEvRdRzBA" name="model">
          <packagedElement xmi:type="uml:Class" xmi:id="_ROJTgNzqEeaMeaEvRdRzBA" name="Model">
            <generalization xmi:id="_RUH_sNzqEeaMeaEvRdRzBA" general="_RTKWYtzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU0jQNzqEeaMeaEvRdRzBA" name="parser" type="_RNfMMNzqEeaMeaEvRdRzBA" association="_RU0jQtzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU1KUNzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RU1KVNzqEeaMeaEvRdRzBA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_RU1KUdzqEeaMeaEvRdRzBA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RU1KUtzqEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWHutzqEeaMeaEvRdRzBA" name="Model" specification="_ROJTgdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWHu9zqEeaMeaEvRdRzBA" type="_ROJTgNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		// initialize program:
		parser = new StAXParser();

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWHvNzqEeaMeaEvRdRzBA" name="parseFile" specification="_ROJ6kNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWHvdzqEeaMeaEvRdRzBA" name="xmlPath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {
			parser.parse(xmlPath);
		} catch (WrongXMLAttributeException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWHvtzqEeaMeaEvRdRzBA" name="getTestedClassesFromTestRun" specification="_RTK9c9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWHv9zqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVWHwNzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVWHwdzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;TestedClass> classesOfOneRun = testRun.getTestedClasses();

		for (TestedClass testedClass : classesOfOneRun) {
			testedClass.setCurrentFailurePercentage(testRun);
		}

		return classesOfOneRun;

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROJTgdzqEeaMeaEvRdRzBA" name="Model" method="_RVWHutzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_ROJTgtzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_ROJTg9zqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_ROJThNzqEeaMeaEvRdRzBA" type="_ROJTgNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROJ6kNzqEeaMeaEvRdRzBA" name="parseFile" method="_RVWHvNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_ROJ6kdzqEeaMeaEvRdRzBA" name="xmlPath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RTK9c9zqEeaMeaEvRdRzBA" name="getTestedClassesFromTestRun" method="_RVWHvtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTK9dNzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTK9ddzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RTK9dtzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RU0jQtzqEeaMeaEvRdRzBA" name="" memberEnd="_RU0jQdzqEeaMeaEvRdRzBA _RU0jQNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RU0jQdzqEeaMeaEvRdRzBA" name="model" type="_ROJTgNzqEeaMeaEvRdRzBA" association="_RU0jQtzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RU1KVNzqEeaMeaEvRdRzBA" name="" memberEnd="_RU1KU9zqEeaMeaEvRdRzBA _RU1KUNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RU1KU9zqEeaMeaEvRdRzBA" name="model" type="_ROJTgNzqEeaMeaEvRdRzBA" association="_RU1KVNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RJQzhtzqEeaMeaEvRdRzBA" name="view">
          <packagedElement xmi:type="uml:Class" xmi:id="_ROLIsNzqEeaMeaEvRdRzBA" name="TDAAnalyzerView">
            <ownedAttribute xmi:id="_RU1xYNzqEeaMeaEvRdRzBA" name="frequentItemsTable" visibility="private" type="_RTNZtdzqEeaMeaEvRdRzBA" association="_RV3FFNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU1xY9zqEeaMeaEvRdRzBA" name="strongRulesTable" visibility="private" type="_RTNZtdzqEeaMeaEvRdRzBA" association="_RV3FF9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU2YctzqEeaMeaEvRdRzBA" name="confidenceCol" visibility="private" type="_RTNZs9zqEeaMeaEvRdRzBA" association="_RV3sIdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU2YddzqEeaMeaEvRdRzBA" name="supportCountCol" visibility="private" type="_RTNZs9zqEeaMeaEvRdRzBA" association="_RV3sJNzqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWuwNzqEeaMeaEvRdRzBA" name="createFrequentItemTable" specification="_ROLvwNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWuwdzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>TableColumn&lt;Entry&lt;String, String>, String> itemSetCol = new TableColumn&lt;>(&quot;Frequent Items&quot;);
		itemSetCol.setCellValueFactory(
				new Callback&lt;TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String>, ObservableValue&lt;String>>() {

					@Override
					public ObservableValue&lt;String> call(
							TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String> entry) {
						return new SimpleStringProperty(entry.getValue().getKey());
					}
				});

		supportCountCol = new TableColumn&lt;>(&quot;Support Count&quot;);
		supportCountCol.setCellValueFactory(
				new Callback&lt;TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String>, ObservableValue&lt;String>>() {

					@Override
					public ObservableValue&lt;String> call(
							TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String> entry) {
						// for second column we use value
						return new SimpleStringProperty(entry.getValue().getValue());
					}
				});
		
		itemSetCol.setMinWidth(500);
		supportCountCol.setSortType(TableColumn.SortType.DESCENDING);
		frequentItemsTable = new TableView&lt;>();
		frequentItemsTable.getColumns().setAll(itemSetCol, supportCountCol);
		frequentItemsTable.getSortOrder().add(supportCountCol);
		frequentItemsTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);
		frequentItemsTable.setPrefWidth(800);
		frequentItemsTable.setPrefHeight(300);

		ScrollPane scrollPane = new ScrollPane(frequentItemsTable);

		return scrollPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWuwtzqEeaMeaEvRdRzBA" name="createStrongRulesTable" specification="_ROMW0NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWuw9zqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>TableColumn&lt;Entry&lt;String, String>, String> strongRuleCol = new TableColumn&lt;>(&quot;Strong Rule&quot;);
		strongRuleCol.setCellValueFactory(
				new Callback&lt;TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String>, ObservableValue&lt;String>>() {

					@Override
					public ObservableValue&lt;String> call(
							TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String> entry) {
						return new SimpleStringProperty(entry.getValue().getKey());
					}
				});

		confidenceCol = new TableColumn&lt;>(&quot;Confidence&quot;);
		confidenceCol.setCellValueFactory(
				new Callback&lt;TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String>, ObservableValue&lt;String>>() {

					@Override
					public ObservableValue&lt;String> call(
							TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String> entry) {
						// for second column we use value
						return new SimpleStringProperty(entry.getValue().getValue());
					}
				});
		
		strongRuleCol.setMinWidth(500);
		confidenceCol.setSortType(TableColumn.SortType.DESCENDING);
		strongRulesTable = new TableView&lt;>();
		strongRulesTable.getColumns().setAll(strongRuleCol, confidenceCol);
		strongRulesTable.getSortOrder().add(confidenceCol);
		strongRulesTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);
		strongRulesTable.setPrefWidth(800);
		strongRulesTable.setPrefHeight(300);
		

		ScrollPane scrollPane = new ScrollPane(strongRulesTable);

		return scrollPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWuxNzqEeaMeaEvRdRzBA" name="fillFrequentItemTable" specification="_ROMW1dzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>HashMap&lt;List&lt;TestedClass>, Integer> itemSet = TestData.getInstance().getAnalyzer().getFrequentItemSets();
		HashMap&lt;String, String> stringItemSet = hashMapToString(itemSet);

		ObservableList&lt;Entry&lt;String, String>> items = FXCollections.observableArrayList(stringItemSet.entrySet());
		
		// Sort
		supportCountCol.setSortType(TableColumn.SortType.DESCENDING);
		strongRulesTable.getSortOrder().add(supportCountCol);
		
		frequentItemsTable.setItems(items);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWuxdzqEeaMeaEvRdRzBA" name="fillStrongRulesTable" specification="_ROM94NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWuxtzqEeaMeaEvRdRzBA" name="confidence">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;StrongRule> strongRules = TestData.getInstance().getAnalyzer().getStrongRules(confidence);
		HashMap&lt;String, String> stringItemSet = strongRulesToStringHashMap(strongRules);
		
		ObservableList&lt;Entry&lt;String, String>> items = FXCollections.observableArrayList(stringItemSet.entrySet());
		
		// Sort
		confidenceCol.setSortType(TableColumn.SortType.DESCENDING);
		strongRulesTable.getSortOrder().add(confidenceCol);
		strongRulesTable.setItems(items);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWux9zqEeaMeaEvRdRzBA" name="hashMapToString" specification="_RUImwtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWuyNzqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVWuydzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>HashMap&lt;String, String> result = new HashMap&lt;String, String>();

		for (Entry&lt;List&lt;TestedClass>, Integer> entry : itemSet.entrySet()) {
			String key = testedClassListToString(entry.getKey());
			String value = entry.getValue().toString();
			result.put(key, value);
		}
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWuytzqEeaMeaEvRdRzBA" name="strongRulesToStringHashMap" specification="_RUJN09zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWuy9zqEeaMeaEvRdRzBA" name="strongRules" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVWuzNzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>HashMap&lt;String, String> result = new HashMap&lt;String, String>();

		for (StrongRule strongRule : strongRules) {
			String key = testedClassListToString(strongRule.getLeftSide()) + &quot; -> &quot;
					+ testedClassListToString(strongRule.getRightSide());
			int conf = (int) (strongRule.getConfidence() * 100);
			String value = conf + &quot;%&quot;;
			result.put(key, value);
		}
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWuzdzqEeaMeaEvRdRzBA" name="testedClassListToString" specification="_RUJ049zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWuztzqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVWuz9zqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String result = &quot;&quot;;
		for (int i = 0; i &lt; testedClasses.size(); i++) {
			result += testedClasses.get(i).getClassName();
			if (i &lt; testedClasses.size() - 1) {
				result += &quot;, &quot;;
			}
		}
		return result;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROLvwNzqEeaMeaEvRdRzBA" name="createFrequentItemTable" method="_RVWuwNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUImwNzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROMW0NzqEeaMeaEvRdRzBA" name="createStrongRulesTable" method="_RVWuwtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUImwdzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROMW1dzqEeaMeaEvRdRzBA" name="fillFrequentItemTable" method="_RVWuxNzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_ROM94NzqEeaMeaEvRdRzBA" name="fillStrongRulesTable" method="_RVWuxdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_ROM94dzqEeaMeaEvRdRzBA" name="confidence">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RUImwtzqEeaMeaEvRdRzBA" name="hashMapToString" visibility="private" method="_RVWux9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUImw9zqEeaMeaEvRdRzBA" name="itemSet" type="_RTLkgNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUJN0dzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUJN09zqEeaMeaEvRdRzBA" name="strongRulesToStringHashMap" visibility="private" method="_RVWuytzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUJN1NzqEeaMeaEvRdRzBA" name="strongRules" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUJ04dzqEeaMeaEvRdRzBA" type="_RTLkgNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUJ049zqEeaMeaEvRdRzBA" name="testedClassListToString" visibility="private" method="_RVWuzdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUJ05NzqEeaMeaEvRdRzBA" name="testedClasses" type="_RSyi9dzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUKb8NzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ROOzENzqEeaMeaEvRdRzBA" name="TDAChart">
            <ownedAttribute xmi:id="_RU2_gtzqEeaMeaEvRdRzBA" name="xAxis" visibility="private" isLeaf="true" type="_RTP189zqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV3sJ9zqEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RU2_g9zqEeaMeaEvRdRzBA" value="new CategoryAxis()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RU3mkdzqEeaMeaEvRdRzBA" name="yAxis" visibility="private" isLeaf="true" type="_RTQdAdzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV4TMdzqEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RU3mktzqEeaMeaEvRdRzBA" value="new NumberAxis()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RU3mlNzqEeaMeaEvRdRzBA" name="lineChart" type="_RTP19dzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV4TNNzqEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RU3mltzqEeaMeaEvRdRzBA" value="new LineChart&lt;>(xAxis, yAxis)"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RU4NoNzqEeaMeaEvRdRzBA" name="series" visibility="private" type="_RTREE9zqEeaMeaEvRdRzBA" association="_RV4TN9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU4No9zqEeaMeaEvRdRzBA" name="controller" visibility="private" type="_RNMRQNzqEeaMeaEvRdRzBA" association="_RV46QdzqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWu0NzqEeaMeaEvRdRzBA" name="TDAChart" specification="_RTRrIdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWu0dzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVWu0tzqEeaMeaEvRdRzBA" type="_ROOzENzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.controller = controller;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVXV0NzqEeaMeaEvRdRzBA" name="generateLineChart" specification="_ROPaINzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVXV0dzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>xAxis.setLabel(&quot;TestRun&quot;);
		yAxis.setLabel(&quot;Failure Percentage&quot;);

		lineChart.setTitle(&quot;Failure Percentage over all TestRuns&quot;);

		return lineChart;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVXV0tzqEeaMeaEvRdRzBA" name="setChartData" specification="_RTRrJtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVXV09zqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>// a series equals a line in the graph; so here there will be line for
		// every class you click
		series = new XYChart.Series&lt;>();

		List&lt;XYChart.Data&lt;TestRun, Number>> datas = controller.calculateChartData(testedClass);
		int cnt = 1;
		for (XYChart.Data&lt;TestRun, Number> data : datas) {
			
			String xAxisLabel = Integer.toString(cnt);
			XYChart.Data&lt;String, Number> dataPoint = new XYChart.Data&lt;String, Number>(xAxisLabel, data.getYValue());
			//set the HoverNode for a dataPoint
			dataPoint.setNode(new HoveredThresholdNode(data.getXValue(), data.getYValue(), testedClass));
			
			series.getData().add(dataPoint);
			cnt++;
		} 
			
		series.setName(testedClass.getClassName());
		lineChart.getData().add(series);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROPaINzqEeaMeaEvRdRzBA" name="generateLineChart" method="_RVXV0NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RULDANzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTRrIdzqEeaMeaEvRdRzBA" name="TDAChart" method="_RVWu0NzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTRrI9zqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTRrJNzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RTRrItzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTRrJdzqEeaMeaEvRdRzBA" type="_ROOzENzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTRrJtzqEeaMeaEvRdRzBA" name="setChartData" method="_RVXV0tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTRrJ9zqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_ROPaIdzqEeaMeaEvRdRzBA" name="HoveredThresholdNode" visibility="package">
              <ownedComment xmi:id="_RVl_UtzqEeaMeaEvRdRzBA">
                <body>a node which displays a value on hover, but is otherwise empty 
	 *  inspired by https://gist.github.com/jewelsea/4681797</body>
              </ownedComment>
              <generalization xmi:id="_RULqGtzqEeaMeaEvRdRzBA" general="_RTREEdzqEeaMeaEvRdRzBA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVXV1NzqEeaMeaEvRdRzBA" name="HoveredThresholdNode" specification="_RULDA9zqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVXV1dzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVXV1tzqEeaMeaEvRdRzBA" name="value" type="_RULDAdzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVXV19zqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVXV2NzqEeaMeaEvRdRzBA" type="_ROPaIdzqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>setPrefSize(10, 10);
			final Label label = createDataThresholdLabel(testRun, value, testedClass);
			setOnMouseClicked(new EventHandler&lt;MouseEvent>() {
				@Override
				public void handle(MouseEvent event) {
					controller.handleChartNodeClick(testRun, testedClass);
				}
				
			});
			
			setOnMouseEntered(new EventHandler&lt;MouseEvent>() {
				@Override
				public void handle(MouseEvent mouseEvent) {
					getChildren().setAll(label);
					toFront();
				}
			});
			setOnMouseExited(new EventHandler&lt;MouseEvent>() {
				@Override
				public void handle(MouseEvent mouseEvent) {
					getChildren().clear();
					setCursor(Cursor.CROSSHAIR);
				}
			});

		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVXV2dzqEeaMeaEvRdRzBA" name="createDataThresholdLabel" specification="_RULqFdzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RVXV2tzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVXV29zqEeaMeaEvRdRzBA" name="value" type="_RULDAdzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVXV3NzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RVXV3dzqEeaMeaEvRdRzBA" type="_RTQdA9zqEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>String labelString = testRun.getRunDate().toString();
			labelString += &quot;\nPassed: &quot; + testedClass.getUnitTestsByTestRun(testRun, true).size();
			labelString += &quot;\nFailed: &quot; + testedClass.getUnitTestsByTestRun(testRun, false).size();
			final Label label = new Label(labelString);
			label.getStyleClass().addAll(&quot;default-color0&quot;, &quot;chart-line-symbol&quot;, &quot;chart-series-line&quot;);
			label.setStyle(&quot;-fx-font-size: 10;&quot;);
			label.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);
			return label;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_RULDA9zqEeaMeaEvRdRzBA" name="HoveredThresholdNode" visibility="package" method="_RVXV1NzqEeaMeaEvRdRzBA">
                <eAnnotations xmi:id="_RULqEtzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_RULqE9zqEeaMeaEvRdRzBA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_RULDBNzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RULqENzqEeaMeaEvRdRzBA" name="value" type="_RULDAdzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RULqEdzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RULqFNzqEeaMeaEvRdRzBA" type="_ROPaIdzqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_RULqFdzqEeaMeaEvRdRzBA" name="createDataThresholdLabel" visibility="private" method="_RVXV2dzqEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_RULqFtzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RULqF9zqEeaMeaEvRdRzBA" name="value" type="_RULDAdzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RULqGNzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_RULqGdzqEeaMeaEvRdRzBA" type="_RTQdA9zqEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ROSdcNzqEeaMeaEvRdRzBA" name="TDAClassView">
            <ownedAttribute xmi:id="_RU40sNzqEeaMeaEvRdRzBA" name="classView" visibility="private" type="_RTTgUtzqEeaMeaEvRdRzBA" association="_RV46RNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU40s9zqEeaMeaEvRdRzBA" name="view" visibility="private" isLeaf="true" type="_RPHj4NzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV46R9zqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVXV3tzqEeaMeaEvRdRzBA" name="TDAClassView" specification="_RTUHYtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVXV39zqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVXV4NzqEeaMeaEvRdRzBA" type="_ROSdcNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.view = view;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVXV4dzqEeaMeaEvRdRzBA" name="generateEmptyClassView" specification="_ROTEgNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVXV4tzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Create a TreeView that has the selectedDirectory as rootItem
		TreeView&lt;TreeNode> treeView = new TreeView&lt;TreeNode>();
		this.classView = treeView;
		return treeView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVXV49zqEeaMeaEvRdRzBA" name="createClassView" specification="_RTUucNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVXV5NzqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVXV5dzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>EventHandler&lt;MouseEvent> mouseEventHandle = (MouseEvent event) -> {
			handleMouseClicked(event);
		};

		classView.addEventHandler(MouseEvent.MOUSE_CLICKED, mouseEventHandle);

		TreeItem&lt;TreeNode> rootItem = createClassItems(node);
		classView.setRoot(rootItem);
		return classView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVXV5tzqEeaMeaEvRdRzBA" name="createClassItems" specification="_RTVVgNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVXV59zqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVXV6NzqEeaMeaEvRdRzBA" type="_RSzKA9zqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>TreeItem&lt;TreeNode> rootItem = new TreeItem&lt;TreeNode>(node);

		// All Leafs
		if (node.getChildren().size() == 0) {
			return rootItem;
		}

		for (TreeNode child : node.getChildren()) {
			// Create new TreeItem as root with children
			TreeItem&lt;TreeNode> subRoot = createClassItems(child);
			rootItem.getChildren().add(subRoot);
		}
		return rootItem;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVX84NzqEeaMeaEvRdRzBA" name="fillClassView" specification="_RTVVg9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVX84dzqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVX84tzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Create a TreeView that has the selectedDirectory as rootItem
		classView = createClassView(node);

		// Below works, but is deprecated
		// view.showTreeView(treeView);
		view.updateClassView(classView);

		return classView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVX849zqEeaMeaEvRdRzBA" name="handleMouseClicked" specification="_RUM4MdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVX85NzqEeaMeaEvRdRzBA" name="event" type="_RTQdBdzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>Node node = event.getPickResult().getIntersectedNode();
		// Accept clicks only on node cells, and not on empty spaces of the
		// TreeView
		if (node instanceof Text || (node instanceof TreeCell &amp;&amp; ((TreeCell) node).getText() != null)) {
			TreeNode clickedNode = (TreeNode) ((TreeItem) classView.getSelectionModel().getSelectedItem()).getValue();
				view.getController().handleClassTreeClick(clickedNode);
		}
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROTEgNzqEeaMeaEvRdRzBA" name="generateEmptyClassView" method="_RVXV4dzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUMRINzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTUHYtzqEeaMeaEvRdRzBA" name="TDAClassView" method="_RVXV3tzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTUHZNzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTUHZdzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RTUHY9zqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTUHZtzqEeaMeaEvRdRzBA" type="_ROSdcNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTUucNzqEeaMeaEvRdRzBA" name="createClassView" method="_RVXV49zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTUucdzqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUMRIdzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTVVgNzqEeaMeaEvRdRzBA" name="createClassItems" method="_RVXV5tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTVVgdzqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUMRItzqEeaMeaEvRdRzBA" type="_RSzKA9zqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTVVg9zqEeaMeaEvRdRzBA" name="fillClassView" method="_RVX84NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTVVhNzqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUM4MNzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUM4MdzqEeaMeaEvRdRzBA" name="handleMouseClicked" visibility="private" method="_RVX849zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUM4MtzqEeaMeaEvRdRzBA" name="event" type="_RTQdBdzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ROU5sNzqEeaMeaEvRdRzBA" name="TDAMenuBar">
            <ownedAttribute xmi:id="_RU5bwNzqEeaMeaEvRdRzBA" name="controller" visibility="private" type="_RNMRQNzqEeaMeaEvRdRzBA" association="_RV5hUdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU5bwtzqEeaMeaEvRdRzBA" name="view" visibility="private" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RV5hVNzqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVX85dzqEeaMeaEvRdRzBA" name="TDAMenuBar" specification="_RTYY0NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVX85tzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVX859zqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVX86NzqEeaMeaEvRdRzBA" type="_ROU5sNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.controller = controller;
		this.view = view;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVX86dzqEeaMeaEvRdRzBA" name="createMenuBar" specification="_ROVgwNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVX86tzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>MenuBar menuBar = new MenuBar();
		Menu file = new Menu(&quot;File&quot;);

		// Open the File Browser, capable of selecting multiple files
		MenuItem openFile = new MenuItem(&quot;Open File&quot;);
		openFile.setOnAction(new EventHandler&lt;ActionEvent>() {

			@Override
			public void handle(ActionEvent event) {

				controller.openFile();

			}
		});
		// Open the Folder Browser, capable of selecting multiple files
		MenuItem openFolder = new MenuItem(&quot;Open Folder&quot;);
		openFolder.setOnAction(new EventHandler&lt;ActionEvent>() {

			@Override
			public void handle(ActionEvent event) {
				controller.openFolder();
			}
		});
		/*
		 * MenuItem recentItem = new MenuItem(&quot;Recent&quot;);
		 * recentItem.setOnAction(new EventHandler&lt;ActionEvent>() {
		 * 
		 * @Override public void handle(ActionEvent event) { // TODO } });
		 */
		MenuItem clearData = new MenuItem(&quot;Clear All Data&quot;);
		clearData.setOnAction(new EventHandler&lt;ActionEvent>() {
			@Override
			public void handle(ActionEvent event) {
				controller.handleClearDataButton();
				event.consume();
			}
		});
		MenuItem exitItem = new MenuItem(&quot;Exit&quot;);
		exitItem.setOnAction(new EventHandler&lt;ActionEvent>() {
			@Override
			public void handle(ActionEvent event) {
				controller.exitMain();
				event.consume();
			}
		});
		file.getItems().addAll(openFile, openFolder, clearData, exitItem);
		menuBar.getMenus().add(file);

		return menuBar;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVX869zqEeaMeaEvRdRzBA" name="clearDataAlert" specification="_ROWH0NzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>Alert clearDataAlert = new Alert(AlertType.CONFIRMATION,
				&quot;Do you really want to clear all Data?\n All loaded TestRuns will be lost.&quot;);
		clearDataAlert.setTitle(&quot;Clear Data?&quot;);

		Optional&lt;ButtonType> result = clearDataAlert.showAndWait();
		if (result.isPresent() &amp;&amp; result.get() == ButtonType.OK) {
			controller.clearData();
		}
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROVgwNzqEeaMeaEvRdRzBA" name="createMenuBar" method="_RVX86dzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUM4M9zqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROWH0NzqEeaMeaEvRdRzBA" name="clearDataAlert" method="_RVX869zqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RTYY0NzqEeaMeaEvRdRzBA" name="TDAMenuBar" method="_RVX85dzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTYY09zqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTYY1NzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RTYY0dzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTYY0tzqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTYY1dzqEeaMeaEvRdRzBA" type="_ROU5sNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ROWu4NzqEeaMeaEvRdRzBA" name="TDATableView">
            <ownedAttribute xmi:id="_RU5bxNzqEeaMeaEvRdRzBA" name="controller" visibility="private" type="_RNMRQNzqEeaMeaEvRdRzBA" association="_RV6IYNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU6C0NzqEeaMeaEvRdRzBA" name="testedClassesTable" visibility="private" type="_RTNZtdzqEeaMeaEvRdRzBA" association="_RV6IY9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU6C09zqEeaMeaEvRdRzBA" name="data" type="_RTMyo9zqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV6IZtzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU6p4NzqEeaMeaEvRdRzBA" name="classNameCol" visibility="private" type="_RTNZs9zqEeaMeaEvRdRzBA" association="_RV6vcNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU6p4tzqEeaMeaEvRdRzBA" name="failurePercentageCol" visibility="private" type="_RTNZs9zqEeaMeaEvRdRzBA" association="_RV6vc9zqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVX87NzqEeaMeaEvRdRzBA" name="TDATableView" specification="_RTZm8NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVX87dzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVX87tzqEeaMeaEvRdRzBA" type="_ROWu4NzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.controller = controller;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVX879zqEeaMeaEvRdRzBA" name="createTestedClassesTable" specification="_ROXV8NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVX88NzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>testedClassesTable = new TableView&lt;TestedClass>();
		testedClassesTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);

		testedClassesTable.setPrefWidth(800);
		testedClassesTable.setPrefHeight(300);

		classNameCol = new TableColumn(&quot;Tested Class&quot;);
		failurePercentageCol = new TableColumn(&quot;Failure Percentage&quot;);

		classNameCol.setCellValueFactory(new PropertyValueFactory&lt;TestedClass, String>(&quot;className&quot;));
		failurePercentageCol
				.setCellValueFactory(new PropertyValueFactory&lt;TestedClass, Double>(&quot;currentFailurePercentage&quot;));

		failurePercentageCol.setSortType(TableColumn.SortType.DESCENDING);

		testedClassesTable.getColumns().addAll(classNameCol, failurePercentageCol);
		testedClassesTable.getSortOrder().add(failurePercentageCol);

		testedClassesTable.setRowFactory(tv -> {
			TableRow&lt;TestedClass> row = new TableRow&lt;TestedClass>() {

				@Override
				public void updateItem(TestedClass item, boolean empty) {
					super.updateItem(item, empty);
					if (item == null) {
						setStyle(&quot;&quot;);
					} else if (item.getCurrentFailurePercentage() > 90.00) {
						setStyle(&quot;-fx-background-color: red;&quot;);
					} else if (item.getCurrentFailurePercentage() > 75.00) {
						setStyle(&quot;-fx-background-color: orange;&quot;);
					} else if (item.getCurrentFailurePercentage() > 50.00) {
						setStyle(&quot;-fx-background-color: yellow;&quot;);
					} else {
						setStyle(&quot;&quot;);
					}
				}

			};

			// Make rows able to be double clicked and display the selected row
			// in
			// the graph
			row.setOnMouseClicked(event -> {
				if (event.getClickCount() == 2 &amp;&amp; (!row.isEmpty())) {
					TestedClass testedClass = row.getItem();

					controller.handleTableRowClick(testedClass);
				}
			});
			return row;
		});

		ScrollPane scrollPane = new ScrollPane(testedClassesTable);

		return scrollPane;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVYj8NzqEeaMeaEvRdRzBA" name="fillTestedClassTable" specification="_RTZm9dzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVYj8dzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>data = FXCollections.observableArrayList(controller.getTestedClassesFromTestRun(testRun));

		testedClassesTable.setItems(data);

		failurePercentageCol.setSortType(TableColumn.SortType.DESCENDING);
		testedClassesTable.getSortOrder().add(failurePercentageCol);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROXV8NzqEeaMeaEvRdRzBA" name="createTestedClassesTable" method="_RVX879zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUNfQNzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTZm8NzqEeaMeaEvRdRzBA" name="TDATableView" method="_RVX87NzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTZm8tzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTZm89zqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RTZm8dzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTZm9NzqEeaMeaEvRdRzBA" type="_ROWu4NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTZm9dzqEeaMeaEvRdRzBA" name="fillTestedClassTable" method="_RVYj8NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTZm9tzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ROZyMNzqEeaMeaEvRdRzBA" name="TDATestRunTotals">
            <ownedAttribute xmi:id="_RU6p5NzqEeaMeaEvRdRzBA" name="controller" visibility="private" type="_RNMRQNzqEeaMeaEvRdRzBA" association="_RV6vdtzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU7Q8NzqEeaMeaEvRdRzBA" name="testRunTotals" visibility="private" type="_RTa1EtzqEeaMeaEvRdRzBA" association="_RV7WgNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU7Q89zqEeaMeaEvRdRzBA" name="totals" visibility="private" type="_RNU0IdzqEeaMeaEvRdRzBA" association="_RV7Wg9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU74AdzqEeaMeaEvRdRzBA" name="generatedList" type="_RTMyo9zqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV7WhtzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU74A9zqEeaMeaEvRdRzBA" name="idLabel" visibility="private" type="_RTQdA9zqEeaMeaEvRdRzBA" association="_RV79kdzqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVYj8tzqEeaMeaEvRdRzBA" name="TDATestRunTotals" specification="_RUOGUNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVYj89zqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVYj9NzqEeaMeaEvRdRzBA" name="idLabel" type="_RTQdA9zqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVYj9dzqEeaMeaEvRdRzBA" type="_ROZyMNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.controller = controller;
		this.idLabel = idLabel;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVYj9tzqEeaMeaEvRdRzBA" name="createTestRunTotalsBox" specification="_ROaZQNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVYj99zqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>testRunTotals = new ListView&lt;String>();
		testRunTotals.setPrefSize(800, 32);

		testRunTotals.setOrientation(Orientation.HORIZONTAL);

		ScrollPane scrollPane = new ScrollPane(testRunTotals);
		scrollPane.setMinHeight(45);

		return scrollPane;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVYj-NzqEeaMeaEvRdRzBA" name="showTestRunTotals" specification="_RTbcINzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVYj-dzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>ObservableList&lt;String> testResults = listedCounters(testRun);
		idLabel.setText(&quot;Loaded TestRun: &quot;.concat(testRun.getRunName()));
		testRunTotals.setItems(testResults);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVYj-tzqEeaMeaEvRdRzBA" name="listedCounters" specification="_RTbcItzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVYj-9zqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVYj_NzqEeaMeaEvRdRzBA" type="_RTMyo9zqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>totals = testRun.getResultSummary();
		// Important Counters:
		String stringTotal = &quot;Total: &quot;.concat(totals.getSumTotal());
		String stringExecuted = &quot;Executed: &quot;.concat(totals.getSumExecuted());
		String stringPassed = &quot;Passed: &quot;.concat(totals.getSumPassed());
		String stringFailed = &quot;Failed: &quot;.concat(totals.getSumFailed());

		ObservableList&lt;String> testResults = FXCollections.observableArrayList(stringTotal, stringPassed, stringFailed,
				stringExecuted);
		if (Integer.parseInt(totals.getSumAborted()) != 0) {
			testResults.add(&quot;Aborted: &quot;.concat(totals.getSumAborted()));
		}
		if (Integer.parseInt(totals.getSumCompleted()) != 0) {
			testResults.add(&quot;Completed: &quot;.concat(totals.getSumCompleted()));
		}
		if (Integer.parseInt(totals.getSumDisconnected()) != 0) {
			testResults.add(&quot;Disconnected: &quot;.concat(totals.getSumDisconnected()));
		}
		if (Integer.parseInt(totals.getSumError()) != 0) {
			testResults.add(&quot;Error: &quot;.concat(totals.getSumError()));
		}
		if (Integer.parseInt(totals.getSumInProgress()) != 0) {
			testResults.add(&quot;In Progress: &quot;.concat(totals.getSumInProgress()));
		}
		if (Integer.parseInt(totals.getSumInconclusive()) != 0) {
			testResults.add(&quot;Inconclusive: &quot;.concat(totals.getSumInconclusive()));
		}
		if (Integer.parseInt(totals.getSumNotExecuted()) != 0) {
			testResults.add(&quot;Not Executed: &quot;.concat(totals.getSumNotExecuted()));
		}
		if (Integer.parseInt(totals.getSumNotRunnable()) != 0) {
			testResults.add(&quot;Not Runnable: &quot;.concat(totals.getSumNotRunnable()));
		}
		if (Integer.parseInt(totals.getSumPassedButRunAborted()) != 0) {
			testResults.add(&quot;Passed But Run Aborted: &quot;.concat(totals.getSumPassedButRunAborted()));
		}
		if (Integer.parseInt(totals.getSumPending()) != 0) {
			testResults.add(&quot;Pending: &quot;.concat(totals.getSumPending()));
		}
		if (Integer.parseInt(totals.getSumTimeOut()) != 0) {
			testResults.add(&quot;Time Out: &quot;.concat(totals.getSumTimeOut()));
		}
		if (Integer.parseInt(totals.getSumWarning()) != 0) {
			testResults.add(&quot;Warning: &quot;.concat(totals.getSumWarning()));
		}
		return testResults;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROaZQNzqEeaMeaEvRdRzBA" name="createTestRunTotalsBox" method="_RVYj9tzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVmmYdzqEeaMeaEvRdRzBA">
                <body>@return Creates a flat Horizontal Box containing our Counters, to be
	 *         displayed at the top of the main View.</body>
              </ownedComment>
              <ownedParameter xmi:id="_RUOGVtzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTbcINzqEeaMeaEvRdRzBA" name="showTestRunTotals" method="_RVYj-NzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVmmYtzqEeaMeaEvRdRzBA">
                <body>@param testRun
	 * @param details
	 *            Asks the linked Methods for an Observable list by passing on
	 *            values from the controller, then creates that list.</body>
              </ownedComment>
              <ownedParameter xmi:id="_RTbcIdzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTbcItzqEeaMeaEvRdRzBA" name="listedCounters" method="_RVYj-tzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVmmY9zqEeaMeaEvRdRzBA">
                <body>@param totals
	 * @return Creates an Observable List with the all Counters, and returns it.</body>
              </ownedComment>
              <ownedParameter xmi:id="_RTbcI9zqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUOGV9zqEeaMeaEvRdRzBA" type="_RTMyo9zqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUOGUNzqEeaMeaEvRdRzBA" name="TDATestRunTotals" method="_RVYj8tzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RUOGU9zqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RUOGVNzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RUOGUdzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUOGUtzqEeaMeaEvRdRzBA" name="idLabel" type="_RTQdA9zqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUOGVdzqEeaMeaEvRdRzBA" type="_ROZyMNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ROcOcNzqEeaMeaEvRdRzBA" name="TDATreeView">
            <ownedAttribute xmi:id="_RU74BdzqEeaMeaEvRdRzBA" name="treeView" type="_RTTgUtzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV79lNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU8fEdzqEeaMeaEvRdRzBA" name="view" visibility="private" isLeaf="true" type="_RPHj4NzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV79l9zqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVYj_dzqEeaMeaEvRdRzBA" name="TDATreeView" specification="_RTcqQNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVYj_tzqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVYj_9zqEeaMeaEvRdRzBA" type="_ROcOcNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.view = view;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVYkANzqEeaMeaEvRdRzBA" name="generateEmptyTreeView" specification="_ROcOcdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVYkAdzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Create a TreeView that has the selectedDirectory as rootItem
		TreeView&lt;String> treeView = new TreeView&lt;String>();
		this.treeView = treeView;
		return treeView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVYkAtzqEeaMeaEvRdRzBA" name="fillTreeView" specification="_RUOtYdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVYkA9zqEeaMeaEvRdRzBA" name="selectedDirectory" type="_RSxU0NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVYkBNzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Create a TreeView that has the selectedDirectory as rootItem
		treeView = createTreeView(selectedDirectory.toString());

		// Below works, but is deprecated
		// view.showTreeView(treeView);
		view.updateTreeView(treeView);

		return treeView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZLANzqEeaMeaEvRdRzBA" name="createTreeItems" specification="_ROc1gdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZLAdzqEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVZLAtzqEeaMeaEvRdRzBA" type="_RSzKA9zqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Not sure if working on windows with this regex
		String[] rootFolder = rootDirectory.split(&quot;/|\\\\&quot;);

		TreeItem&lt;String> rootItem = new TreeItem&lt;String>(rootFolder[rootFolder.length - 1]);
		Path rootPath = Paths.get(rootDirectory);
		File[] files = rootPath.toFile().listFiles();
		for (File file : files) {
			if (file.isDirectory()) {
				// Create new TreeItem as root with children
				TreeItem&lt;String> subRoot = createTreeItems(file.toString());
				if (subRoot.getChildren().size() != 0) {
					rootItem.getChildren().add(subRoot);
				}
			} else {
				String lowerCaseFile = file.toString().toLowerCase();
				if (lowerCaseFile.endsWith(&quot;.xml&quot;) &amp;&amp; lowerCaseFile.contains(&quot;testrun&quot;)) {
					// Create new TreeItem as leaf and add to rootItem
					TreeItem&lt;String> treeItem = new TreeItem&lt;String>(file.getName());
					rootItem.getChildren().add(treeItem);
				}
			}
		}
		return rootItem;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZLA9zqEeaMeaEvRdRzBA" name="createTreeView" specification="_ROdckdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZLBNzqEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVZLBdzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>EventHandler&lt;MouseEvent> mouseEventHandle = (MouseEvent event) -> {
			handleMouseClicked(event);
		};

		treeView.addEventHandler(MouseEvent.MOUSE_CLICKED, mouseEventHandle);

		TreeItem&lt;String> rootItem = createTreeItems(rootDirectory);
		treeView.setRoot(rootItem);
		return treeView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZLBtzqEeaMeaEvRdRzBA" name="handleMouseClicked" specification="_RUPUdNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZLB9zqEeaMeaEvRdRzBA" name="event" type="_RTQdBdzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>Node node = event.getPickResult().getIntersectedNode();
		// Accept clicks only on node cells, and not on empty spaces of the
		// TreeView
		if (node instanceof Text || (node instanceof TreeCell &amp;&amp; ((TreeCell) node).getText() != null)) {
			String xmlName = (String) ((TreeItem) treeView.getSelectionModel().getSelectedItem()).getValue();
			if (xmlName.endsWith(&quot;.xml&quot;) &amp;&amp; event.getClickCount() == 2) {
				view.getController().handleTreeItemClick(xmlName);
			}
		}
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROcOcdzqEeaMeaEvRdRzBA" name="generateEmptyTreeView" method="_RVYkANzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUOtYNzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROc1gdzqEeaMeaEvRdRzBA" name="createTreeItems" method="_RVZLANzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_ROc1gtzqEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RUPUctzqEeaMeaEvRdRzBA" type="_RSzKA9zqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROdckdzqEeaMeaEvRdRzBA" name="createTreeView" method="_RVZLA9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_ROdcktzqEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RUPUc9zqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTcqQNzqEeaMeaEvRdRzBA" name="TDATreeView" method="_RVYj_dzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTdRUNzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTdRUdzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RTcqQdzqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTdRUtzqEeaMeaEvRdRzBA" type="_ROcOcNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUOtYdzqEeaMeaEvRdRzBA" name="fillTreeView" method="_RVYkAtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUOtYtzqEeaMeaEvRdRzBA" name="selectedDirectory" type="_RSxU0NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUPUcdzqEeaMeaEvRdRzBA" type="_RTTgUtzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUPUdNzqEeaMeaEvRdRzBA" name="handleMouseClicked" visibility="private" method="_RVZLBtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUPUddzqEeaMeaEvRdRzBA" name="event" type="_RTQdBdzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_ROfRwNzqEeaMeaEvRdRzBA" name="TDAcomparison">
            <ownedAttribute xmi:id="_RU8fE9zqEeaMeaEvRdRzBA" name="view" visibility="private" isLeaf="true" type="_RPHj4NzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RV8kodzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU9GIdzqEeaMeaEvRdRzBA" name="rootPane" visibility="private" type="_RTd4YNzqEeaMeaEvRdRzBA" association="_RV8kpNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU9GI9zqEeaMeaEvRdRzBA" name="comparisonSlot1" visibility="private" type="_RTefc9zqEeaMeaEvRdRzBA" association="_RV8kp9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU9GJdzqEeaMeaEvRdRzBA" name="comparisonSlot2" visibility="private" type="_RTefc9zqEeaMeaEvRdRzBA" association="_RV9LsdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU9GJ9zqEeaMeaEvRdRzBA" name="testedClass" visibility="private" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RV9LtNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU9tMdzqEeaMeaEvRdRzBA" name="run1" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RV9Lt9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU9tM9zqEeaMeaEvRdRzBA" name="run2" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RV9ywtzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RU9tNdzqEeaMeaEvRdRzBA" name="passedList1" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RU9tNtzqEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RU9tN9zqEeaMeaEvRdRzBA" name="failedList1" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RU9tONzqEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RU-UQNzqEeaMeaEvRdRzBA" name="passedList2" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RU-UQdzqEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RU-UQtzqEeaMeaEvRdRzBA" name="failedList2" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RU-UQ9zqEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZLCNzqEeaMeaEvRdRzBA" name="TDAcomparison" specification="_RTfGgNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZLCdzqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZLCtzqEeaMeaEvRdRzBA" type="_ROfRwNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.view = view;
		rootPane = new BorderPane();
		rootPane.setPrefWidth(1200);

		Label comparisonLabel = new Label(&quot;Comparison:&quot;);
		rootPane.setTop(comparisonLabel);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZLC9zqEeaMeaEvRdRzBA" name="generateEmptyComparisonPane" specification="_ROf40NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZLDNzqEeaMeaEvRdRzBA" type="_RTefcdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>comparisonSlot1 = generateEmptyComparisonSlot();
		comparisonSlot2 = generateEmptyComparisonSlot();

		rootPane.setLeft(comparisonSlot1);
		rootPane.setRight(comparisonSlot2);
		return rootPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZLDdzqEeaMeaEvRdRzBA" name="generateEmptyComparisonSlot" specification="_ROgf4NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZLDtzqEeaMeaEvRdRzBA" type="_RTefc9zqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>VBox comparisonVBox = new VBox();
		// comparisonVBox.setStyle(&quot;-fx-border: 1px solid black&quot;);
		comparisonVBox.setPrefWidth(300);
		Label timeStamp = new Label(&quot;Run - Date&quot;);

		comparisonVBox.getChildren().addAll(generateEmptyDetailsHBox(), timeStamp, generateEmptyTestsVBox());
		return comparisonVBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZLD9zqEeaMeaEvRdRzBA" name="generateEmptyDetailsHBox" specification="_ROgf4dzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZLENzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>HBox testsBox = new HBox();
		Label passedLabel = new Label(&quot;Passed: XX&quot;);
		Label failedLabel = new Label(&quot;Failed: XX&quot;);
		Label failurePercentage = new Label(&quot;Failure-%: XX&quot;);
		testsBox.getChildren().addAll(passedLabel, failedLabel, failurePercentage);
		return testsBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZLEdzqEeaMeaEvRdRzBA" name="generateEmptyTestsVBox" specification="_ROgf4tzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZyENzqEeaMeaEvRdRzBA" type="_RTefc9zqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>VBox testsBox = new VBox();
		Label passedLabel = new Label(&quot;Passed:&quot;);
		Label failedLabel = new Label(&quot;Failed:&quot;);
		testsBox.getChildren().addAll(passedLabel, generateEmptyListView(), failedLabel, generateEmptyListView());
		return testsBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZyEdzqEeaMeaEvRdRzBA" name="generateEmptyListView" specification="_ROgf49zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZyEtzqEeaMeaEvRdRzBA" type="_RTUHYNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>Text testsView = new Text(&quot;No testrun loaded&quot;);
		return testsView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZyE9zqEeaMeaEvRdRzBA" name="generateComparisonPane" specification="_RTftkNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZyFNzqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZyFdzqEeaMeaEvRdRzBA" type="_RTefcdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// TODO: generateComparisonSlot and fill with content

		rootPane.setLeft(comparisonSlot1);
		rootPane.setRight(comparisonSlot2);
		return rootPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZyFtzqEeaMeaEvRdRzBA" name="generateComparisonSlot" specification="_RTftktzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZyF9zqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZyGNzqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVZyGdzqEeaMeaEvRdRzBA" type="_RTefc9zqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>//		VBox comparisonVBox = new VBox();
//		// comparisonVBox.setStyle(&quot;-fx-border: 1px solid black&quot;);
//		comparisonVBox.setPrefWidth(300);
		Label timeStamp = new Label(run.getRunDate().toString());
		if (isSlot1) {
			comparisonSlot1.getChildren().clear();
			comparisonSlot1.getChildren().addAll(generateDetailsHBox(run, isSlot1), timeStamp, generateTestsVBox(run, isSlot1));
			return comparisonSlot1;
		} else {
			comparisonSlot2.getChildren().clear();
			comparisonSlot2.getChildren().addAll(generateDetailsHBox(run, isSlot1), timeStamp, generateTestsVBox(run, isSlot1));
			return comparisonSlot2;
		}
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZyGtzqEeaMeaEvRdRzBA" name="updateComparisonSlot" specification="_RTftldzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZyG9zqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZyHNzqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZyHdzqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>// TODO: Check, compare and set current TestedClass
		loadComparisonSlot(testedClass, run, isSlot1);
		if (isSlot1) {
			comparisonSlot1 = generateComparisonSlot(run, isSlot1);
		} else {
			comparisonSlot2 = generateComparisonSlot(run, isSlot1);
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZyHtzqEeaMeaEvRdRzBA" name="generateDetailsHBox" specification="_RTgUodzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZyH9zqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZyINzqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVZyIdzqEeaMeaEvRdRzBA" type="_RTd4YtzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>HBox detailsBox = new HBox();
		int passed = 0;
		int failed = 0;
		if (isSlot1) {
			passed = passedList1.size();
			failed = failedList1.size();
		} else  {
			passed = passedList2.size();
			failed = failedList2.size();
		}

		Label passedLabel = new Label(&quot;Passed: &quot; + passed);
		Label failedLabel = new Label(&quot;Failed: &quot; + failed);
		Label failurePercentage = new Label(&quot;Failure-%: &quot; + testedClass.getFailurePercentageByTestrun(run));
		detailsBox.getChildren().addAll(passedLabel, failedLabel, failurePercentage);
		return detailsBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZyItzqEeaMeaEvRdRzBA" name="generateTestsVBox" specification="_RTgUpNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZyI9zqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZyJNzqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVZyJdzqEeaMeaEvRdRzBA" type="_RTefc9zqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>VBox testsBox = new VBox();
		Label passedLabel = new Label(&quot;Passed:&quot;);
		Label failedLabel = new Label(&quot;Failed:&quot;);
		testsBox.getChildren().addAll(passedLabel, generateListView(run, &quot;passed&quot;, isSlot1), failedLabel,
				generateListView(run, &quot;failed&quot;, isSlot1));
		return testsBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZyJtzqEeaMeaEvRdRzBA" name="generateListView" specification="_RTg7sNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZyJ9zqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZyKNzqEeaMeaEvRdRzBA" name="status">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVZyKdzqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVZyKtzqEeaMeaEvRdRzBA" type="_RTa1EtzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>ListView&lt;String> testsList;
		if (status.equals(&quot;passed&quot;)) {
			if (isSlot1) {
				testsList = new ListView&lt;String>(FXCollections.observableArrayList(passedList1));
				testsList.setStyle(&quot;-fx-color: green&quot;);
				return testsList;
			} else {
				testsList = new ListView&lt;String>(FXCollections.observableArrayList(passedList2));
				testsList.setStyle(&quot;-fx-color: green&quot;);
				return testsList;
			}

		} else if (status.equals(&quot;failed&quot;)) {
			if (isSlot1) {
				testsList = new ListView&lt;String>(FXCollections.observableArrayList(failedList1));
				testsList.setStyle(&quot;-fx-color: red&quot;);
				return testsList;
			} else {
				testsList = new ListView&lt;String>(FXCollections.observableArrayList(failedList2));
				testsList.setStyle(&quot;-fx-color: red&quot;);
				return testsList;
			}
		} else {
			System.err.println(&quot;Only failed and passed possible as testresult&quot;);
		}

		return null;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVZyK9zqEeaMeaEvRdRzBA" name="loadComparisonSlot" specification="_RThiwNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVZyLNzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZyLdzqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVZyLtzqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.testedClass = testedClass;

		if (isSlot1) {
			passedList1 = testedClass.getUnitTestsNamesByTestRun(run, true);
			failedList1 = testedClass.getUnitTestsNamesByTestRun(run, false);
		} else {
			passedList2 = testedClass.getUnitTestsNamesByTestRun(run, true);
			failedList2 = testedClass.getUnitTestsNamesByTestRun(run, false);
		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROf40NzqEeaMeaEvRdRzBA" name="generateEmptyComparisonPane" method="_RVZLC9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUP7gNzqEeaMeaEvRdRzBA" type="_RTefcdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROgf4NzqEeaMeaEvRdRzBA" name="generateEmptyComparisonSlot" visibility="private" method="_RVZLDdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUP7gdzqEeaMeaEvRdRzBA" type="_RTefc9zqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROgf4dzqEeaMeaEvRdRzBA" name="generateEmptyDetailsHBox" visibility="private" method="_RVZLD9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUQikNzqEeaMeaEvRdRzBA" type="_RTMypdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROgf4tzqEeaMeaEvRdRzBA" name="generateEmptyTestsVBox" method="_RVZLEdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUQikdzqEeaMeaEvRdRzBA" type="_RTefc9zqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_ROgf49zqEeaMeaEvRdRzBA" name="generateEmptyListView" method="_RVZyEdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUQiktzqEeaMeaEvRdRzBA" type="_RTUHYNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTfGgNzqEeaMeaEvRdRzBA" name="TDAcomparison" method="_RVZLCNzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTfGgtzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTfGg9zqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RTfGgdzqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTfGhNzqEeaMeaEvRdRzBA" type="_ROfRwNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTftkNzqEeaMeaEvRdRzBA" name="generateComparisonPane" method="_RVZyE9zqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVmmZNzqEeaMeaEvRdRzBA">
                <body>generates the upper level Pane
	 * &lt;ul>
	 * &lt;li>comparisonLabel: Simple Label displaying &quot;Comparison:&quot;&lt;/li>
	 * &lt;li>comparisonSlot1
	 * &lt;li>
	 * &lt;li>comparisonSlot2&lt;/li>
	 * &lt;/ul>
	 * 
	 * @param run
	 * @return rootPane: BorderPane</body>
              </ownedComment>
              <ownedParameter xmi:id="_RTftkdzqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUQik9zqEeaMeaEvRdRzBA" type="_RTefcdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTftktzqEeaMeaEvRdRzBA" name="generateComparisonSlot" method="_RVZyFtzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVmmZdzqEeaMeaEvRdRzBA">
                <body>generates one comparison slot &lt;br/>
	 * Elements:
	 * &lt;ul>
	 * &lt;li>DetailsHBox on top&lt;/li>
	 * &lt;li>timeStamp of TestRun&lt;/li>
	 * &lt;li>TestsBox with two lists of UnitTests (passed and failed)&lt;/li>
	 * &lt;/ul>
	 * 
	 * @param run
	 * @return VBox</body>
              </ownedComment>
              <ownedParameter xmi:id="_RTftk9zqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTftlNzqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RUQilNzqEeaMeaEvRdRzBA" type="_RTefc9zqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTftldzqEeaMeaEvRdRzBA" name="updateComparisonSlot" method="_RVZyGtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTftltzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTftl9zqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTgUoNzqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RTgUodzqEeaMeaEvRdRzBA" name="generateDetailsHBox" method="_RVZyHtzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVmmZtzqEeaMeaEvRdRzBA">
                <body>generates a detailsHBox for the header of a comparisonSlot &lt;br/>
	 * Elements:
	 * &lt;ul>
	 * &lt;li>passedLabel: number of passed tests&lt;/li>
	 * &lt;li>failedLabel: number of failed tests&lt;/li>
	 * &lt;li>failurePercentage: failure percentage of tested class in this run
	 * &lt;/li>
	 * &lt;/ul>
	 * 
	 * @param run
	 * @return HBox</body>
              </ownedComment>
              <ownedParameter xmi:id="_RTgUotzqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTgUo9zqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RUQildzqEeaMeaEvRdRzBA" type="_RTd4YtzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTgUpNzqEeaMeaEvRdRzBA" name="generateTestsVBox" method="_RVZyItzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVmmZ9zqEeaMeaEvRdRzBA">
                <body>generates TestVBox &lt;br/>
	 * Elements:
	 * &lt;ul>
	 * &lt;li>passedLabel: Simple Label displaying &quot;Passed:&quot;&lt;/li>
	 * &lt;li>passedListView: String-List containing only passed tests&lt;/li>
	 * &lt;li>failedLabel: Simple Label displaying &quot;Failed:&quot;&lt;/li>
	 * &lt;li>failedListView: String-List containing only failed tests&lt;/li>
	 * &lt;/ul>
	 * 
	 * @param run
	 * @return VBox</body>
              </ownedComment>
              <ownedParameter xmi:id="_RTgUpdzqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTgUptzqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RUQiltzqEeaMeaEvRdRzBA" type="_RTefc9zqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTg7sNzqEeaMeaEvRdRzBA" name="generateListView" method="_RVZyJtzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVmmaNzqEeaMeaEvRdRzBA">
                <body>generates a ListView&lt;String> element depending on whether the
	 * status-parameter is &quot;passed&quot; or &quot;failed&quot;
	 * 
	 * @param run
	 * @param status
	 *            : can either be &quot;passed&quot; or &quot;failed&quot;
	 * @return ListView&lt;String></body>
              </ownedComment>
              <ownedParameter xmi:id="_RTg7sdzqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTg7stzqEeaMeaEvRdRzBA" name="status">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RTg7s9zqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RURJoNzqEeaMeaEvRdRzBA" type="_RTa1EtzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RThiwNzqEeaMeaEvRdRzBA" name="loadComparisonSlot" method="_RVZyK9zqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVmmadzqEeaMeaEvRdRzBA">
                <body>sets the global testedClass attribute, sets the global run1 attribute,
	 * fills the global passedList1 and failedList1 lists
	 * 
	 * @param testedClass
	 * @param run</body>
              </ownedComment>
              <ownedParameter xmi:id="_RThiwdzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RThiwtzqEeaMeaEvRdRzBA" name="run" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RThiw9zqEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RPHj4NzqEeaMeaEvRdRzBA" name="View">
            <generalization xmi:id="_RUWCJNzqEeaMeaEvRdRzBA" general="_RTJvUdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVCls9zqEeaMeaEvRdRzBA" name="model" visibility="private" type="_ROJTgNzqEeaMeaEvRdRzBA" association="_RWCENNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDMwdzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RWCEN9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDMwtzqEeaMeaEvRdRzBA" name="rootPane" visibility="private" type="_RTd4YNzqEeaMeaEvRdRzBA" association="_RWCrQdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDMxNzqEeaMeaEvRdRzBA" name="table" type="_ROWu4NzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RWCrRNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDMxdzqEeaMeaEvRdRzBA" name="tree" type="_ROcOcNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RWCrR9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDMxtzqEeaMeaEvRdRzBA" name="analyzer" visibility="private" type="_ROLIsNzqEeaMeaEvRdRzBA" association="_RWDSUdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDz0dzqEeaMeaEvRdRzBA" name="graph" type="_ROOzENzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RWDSVNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDz0tzqEeaMeaEvRdRzBA" name="totals" type="_ROZyMNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RWDSV9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDz09zqEeaMeaEvRdRzBA" name="menuBar" type="_ROU5sNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RWD5YdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDz1NzqEeaMeaEvRdRzBA" name="sideTabPane" visibility="private" type="_RTqFodzqEeaMeaEvRdRzBA" association="_RWD5ZNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVDz1tzqEeaMeaEvRdRzBA" name="mainWindowTabPane" visibility="private" type="_RTqFodzqEeaMeaEvRdRzBA" association="_RWD5Z9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVEa4NzqEeaMeaEvRdRzBA" name="classTree" type="_ROSdcNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RWEgcdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVEa4dzqEeaMeaEvRdRzBA" name="comparison" type="_ROfRwNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RWEgdNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVEa4tzqEeaMeaEvRdRzBA" name="nothingLoadedPane" visibility="private" type="_RTd4YtzqEeaMeaEvRdRzBA" association="_RWEgd9zqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVEa5NzqEeaMeaEvRdRzBA" name="isInitiated" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RVEa5dzqEeaMeaEvRdRzBA" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_RVEa59zqEeaMeaEvRdRzBA" name="tablePane" visibility="private" type="_RTqssNzqEeaMeaEvRdRzBA" association="_RWFHgdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVFB8dzqEeaMeaEvRdRzBA" name="chartPane" visibility="private" type="_RTqssNzqEeaMeaEvRdRzBA" association="_RWFHhNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVFB89zqEeaMeaEvRdRzBA" name="aprioriPane" visibility="private" type="_RTqssNzqEeaMeaEvRdRzBA" association="_RWFukdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RVFB9dzqEeaMeaEvRdRzBA" name="idLabel" visibility="private" type="_RTQdA9zqEeaMeaEvRdRzBA" association="_RWFulNzqEeaMeaEvRdRzBA"/>
            <interfaceRealization xmi:id="_RUUM8NzqEeaMeaEvRdRzBA" client="_RPHj4NzqEeaMeaEvRdRzBA" supplier="_RToQcNzqEeaMeaEvRdRzBA" contract="_RToQcNzqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeDgNzqEeaMeaEvRdRzBA" name="View" specification="_RTr60NzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeDgdzqEeaMeaEvRdRzBA" name="model" type="_ROJTgNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVeDgtzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVeDg9zqEeaMeaEvRdRzBA" type="_RPHj4NzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.model = model;
		this.controller = controller;
		this.model.addObserver(this);
		this.setScene(new Scene(createNothingLoadedPane(), 1200, 900));
		this.setTitle(&quot;Test Data Analyser&quot;);
		this.setMaximized(true);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeDhNzqEeaMeaEvRdRzBA" name="createRootPane" specification="_RPJZENzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeDhdzqEeaMeaEvRdRzBA" type="_RTefcdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>rootPane = new BorderPane();
		menuBar = new TDAMenuBar(controller, this);

		// sticks the menubar to top
		this.rootPane.setTop(menuBar.createMenuBar());

		/*---- CONTENT GRIDPANE with the main content (TableView, Graph,...) ----*/
		tablePane = new GridPane();

		// margins around the whole center grid (top/right/bottom/left)
		tablePane.setPadding(new Insets(10, 10, 10, 10));
		tablePane.setAlignment(Pos.TOP_CENTER);

		idLabel = new Label();
		tablePane.add(idLabel, 1, 1);
		Label totalsLabel = new Label(&quot;TestRun Result Summary: &quot;);
		tablePane.add(totalsLabel, 1, 2);

		totals = new TDATestRunTotals(controller, idLabel);
		tablePane.add(totals.createTestRunTotalsBox(), 1, 3);

		tree = new TDATreeView(this);
		table = new TDATableView(controller);
		classTree = new TDAClassView(this);

		tablePane.add(table.createTestedClassesTable(), 1, 4);

		graph = new TDAChart(controller);

		comparison = new TDAcomparison(this);

		chartPane = new GridPane();
		ColumnConstraints column1 = new ColumnConstraints();
		column1.setPercentWidth(100);
		chartPane.getColumnConstraints().add(column1);
		chartPane.setPadding(new Insets(10, 10, 10, 10));
		chartPane.add(graph.generateLineChart(), 0, 0);

		Button resetLineChart = new Button(&quot;Reset LineCharts&quot;);
		resetLineChart.setOnMouseClicked(click -> {
			controller.handleResetGraph();
		});
		chartPane.add(resetLineChart, 0, 1);

		chartPane.add(comparison.generateEmptyComparisonPane(), 0, 2);
		
		// Analyzer (Apriori) Pane
		aprioriPane = new GridPane();

		// margins around the whole center grid (top/right/bottom/left)
		aprioriPane.setPadding(new Insets(10, 10, 10, 10));
		aprioriPane.setAlignment(Pos.TOP_CENTER);

		Label aprioriHeader = new Label(&quot;Apriori Analyzer&quot;);
		aprioriPane.add(aprioriHeader, 1, 1);

		analyzer = new TDAAnalyzerView();

		aprioriPane.add(analyzer.createFrequentItemTable(), 1, 2);
		aprioriPane.add(analyzer.createStrongRulesTable(), 1, 4);

		GridPane.setHalignment(resetLineChart, HPos.CENTER);
		GridPane.setValignment(resetLineChart, VPos.BOTTOM);
		tablePane.setVgap(20);

		/*----- SIDEBAR TABPANE for switching between testruns and classes */
		sideTabPane = new TabPane();

		Tab tab1 = new Tab();
		tab1.setText(&quot;Testruns&quot;);
		tab1.setClosable(false);
		tab1.setContent(tree.generateEmptyTreeView());
		sideTabPane.getTabs().add(tab1);

		Tab tab2 = new Tab();
		tab2.setText(&quot;Classes&quot;);
		tab2.setClosable(false);
		tab2.setContent(classTree.generateEmptyClassView());
		sideTabPane.getTabs().add(tab2);

		sideTabPane.setMinWidth(300);
		sideTabPane.setPrefWidth(300);
		sideTabPane.setMaxWidth(350);

		rootPane.setLeft(sideTabPane);

		mainWindowTabPane = new TabPane();

		Tab mainTab1 = new Tab(&quot;Table&quot;);
		mainTab1.setClosable(false);
		mainTab1.setContent(tablePane);

		mainWindowTabPane.getTabs().add(mainTab1);

		Tab mainTab2 = new Tab(&quot;Chart&quot;);
		mainTab2.setClosable(false);
		mainTab2.setContent(chartPane);
		mainWindowTabPane.getTabs().add(mainTab2);

		Tab mainTab3 = new Tab(&quot;Analyzer&quot;);
		mainTab3.setClosable(false);
		mainTab3.setContent(aprioriPane);
		mainWindowTabPane.getTabs().add(mainTab3);

		mainWindowTabPane.getSelectionModel().selectedItemProperty().addListener((ov, oldTab, newTab) -> {
			if (newTab.getText().equals(&quot;Analyzer&quot;)) {
				analyzer.fillFrequentItemTable();
				analyzer.fillStrongRulesTable(0.8);
			}
		});

		rootPane.setCenter(mainWindowTabPane);

		return rootPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeDhtzqEeaMeaEvRdRzBA" name="errorAlert" specification="_RPJZEdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeDh9zqEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>Alert error = new Alert(AlertType.ERROR, message);
		error.showAndWait();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeDiNzqEeaMeaEvRdRzBA" name="pathAlert" specification="_RPKAIdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeDidzqEeaMeaEvRdRzBA" type="_RSxU0NzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVeDitzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>FileChooser fileBrowser = new FileChooser();
		fileBrowser.setTitle(&quot;Open Resource File&quot;);
		fileBrowser.getExtensionFilters().add(new FileChooser.ExtensionFilter(&quot;XML files&quot;, &quot;*.xml&quot;));

		return fileBrowser.showOpenMultipleDialog(this);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeDi9zqEeaMeaEvRdRzBA" name="directoryAlert" specification="_RPKAJNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeDjNzqEeaMeaEvRdRzBA" type="_RSxU0NzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>DirectoryChooser directoryBrowser = new DirectoryChooser();
		directoryBrowser.setTitle(&quot;Select Root Directory&quot;);
		File selectedDirectory = directoryBrowser.showDialog(this);

		return selectedDirectory;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeDjdzqEeaMeaEvRdRzBA" name="initCloseEventHandler" specification="_RTsh49zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeDjtzqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>view.setOnCloseRequest(new EventHandler&lt;WindowEvent>() {
			public void handle(WindowEvent we) {
				exitAlert();
				we.consume();
			}
		});
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeDj9zqEeaMeaEvRdRzBA" name="exitAlert" specification="_RPKAJdzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>Alert exitAlert = new Alert(AlertType.CONFIRMATION,
				&quot;Do you really want to exit? All unsaved changes will be lost.&quot;);
		exitAlert.setTitle(&quot;Are you sure?&quot;);
		exitAlert.setHeaderText(null);
		Optional&lt;ButtonType> result = exitAlert.showAndWait();
		if (result.isPresent() &amp;&amp; result.get() == ButtonType.OK) {
			this.close();
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeDkNzqEeaMeaEvRdRzBA" name="updateTreeView" specification="_RUVbFNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeDkdzqEeaMeaEvRdRzBA" name="treeView" type="_RTTgUtzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>sideTabPane.getTabs().get(0).setContent(treeView);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeqkNzqEeaMeaEvRdRzBA" name="updateClassView" specification="_RUWCIdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeqkdzqEeaMeaEvRdRzBA" name="treeView" type="_RTTgUtzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>sideTabPane.getTabs().get(1).setContent(treeView);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeqktzqEeaMeaEvRdRzBA" name="clearTotals" specification="_RPKnMNzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>totals = new TDATestRunTotals(controller, idLabel);
		tablePane.add(totals.createTestRunTotalsBox(), 1, 3);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeqk9zqEeaMeaEvRdRzBA" name="isInitiated" specification="_RPKnMdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeqlNzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return isInitiated;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeqldzqEeaMeaEvRdRzBA" name="fillClassTreeView" specification="_RPKnM9zqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>// TODO: update list when folders are added more than once

		// TODO updateClassTreeView();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeqltzqEeaMeaEvRdRzBA" name="updateRootPane" specification="_RPKnNNzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>this.getScene().setRoot(createRootPane());
		isInitiated = true;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVeql9zqEeaMeaEvRdRzBA" name="createNothingLoadedPane" specification="_RPKnNdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVeqmNzqEeaMeaEvRdRzBA" type="_RTefcdzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>nothingLoadedPane = new HBox();

		nothingLoadedPane.setAlignment(Pos.CENTER);
		nothingLoadedPane.setPadding(new Insets(15, 12, 15, 12));
		nothingLoadedPane.setSpacing(10);
		nothingLoadedPane.setStyle(&quot;-fx-background-color: #336699;&quot;);

		Button loadFileButton = new Button();
		loadFileButton.setPrefSize(164, 164);
		loadFileButton.setStyle(&quot;-fx-background-image: url('/tda/src/view/openfile.png')&quot;);
		loadFileButton.setOnAction(new EventHandler&lt;ActionEvent>() {

			@Override
			public void handle(ActionEvent event) {

				controller.openFile();
			}
		});
		/*
		 * currently not working, bc openFile is using deprecated calls
		 * loadFileButon.setOnAction(new EventHandler&lt;ActionEvent>() {
		 * 
		 * @Override public void handle(ActionEvent event) {
		 * 
		 * controller.openFile(); if (isInitiated == false) { updateRootPane();
		 * }
		 * 
		 * } });
		 */

		Button loadFolderButton = new Button();
		loadFolderButton.setPrefSize(164, 164);
		loadFolderButton.setStyle(&quot;-fx-background-image: url('/tda/src/view/openfolder.png')&quot;);
		loadFolderButton.setOnAction(new EventHandler&lt;ActionEvent>() {

			@Override
			public void handle(ActionEvent event) {
				controller.openFolder();
			}
		});
		nothingLoadedPane.getChildren().addAll(loadFileButton, loadFolderButton);

		return nothingLoadedPane;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RPJZENzqEeaMeaEvRdRzBA" name="createRootPane" visibility="private" method="_RVeDhNzqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVnNc9zqEeaMeaEvRdRzBA">
                <body>@return Creates our base panes in our main View. Includes the menuBar on
	 *         top, the TreeView on the Left and the TestRun Totals and Class
	 *         Table + Graph below.</body>
              </ownedComment>
              <ownedParameter xmi:id="_RUU0ANzqEeaMeaEvRdRzBA" type="_RTefcdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RPJZEdzqEeaMeaEvRdRzBA" name="errorAlert" method="_RVeDhtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RPKAINzqEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RPKAIdzqEeaMeaEvRdRzBA" name="pathAlert" method="_RVeDiNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RPKAItzqEeaMeaEvRdRzBA" type="_RSxU0NzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RPKAI9zqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RPKAJNzqEeaMeaEvRdRzBA" name="directoryAlert" method="_RVeDi9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUVbE9zqEeaMeaEvRdRzBA" type="_RSxU0NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RPKAJdzqEeaMeaEvRdRzBA" name="exitAlert" method="_RVeDj9zqEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_RVnNdNzqEeaMeaEvRdRzBA">
                <body>The exit Alert window called by exiting through the &quot;Data&quot; dropdown menu.</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_RPKnMNzqEeaMeaEvRdRzBA" name="clearTotals" method="_RVeqktzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RPKnMdzqEeaMeaEvRdRzBA" name="isInitiated" method="_RVeqk9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RPKnMtzqEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RPKnM9zqEeaMeaEvRdRzBA" name="fillClassTreeView" method="_RVeqldzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RPKnNNzqEeaMeaEvRdRzBA" name="updateRootPane" method="_RVeqltzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RPKnNdzqEeaMeaEvRdRzBA" name="createNothingLoadedPane" method="_RVeql9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUWCI9zqEeaMeaEvRdRzBA" type="_RTefcdzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTr60NzqEeaMeaEvRdRzBA" name="View" method="_RVeDgNzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RTr609zqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RTr61NzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RTr60dzqEeaMeaEvRdRzBA" name="model" type="_ROJTgNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTr60tzqEeaMeaEvRdRzBA" name="controller" type="_RNMRQNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RTr61dzqEeaMeaEvRdRzBA" type="_RPHj4NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTsh4NzqEeaMeaEvRdRzBA" name="setTestRunLabel">
              <ownedParameter xmi:id="_RTsh4dzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RTsh49zqEeaMeaEvRdRzBA" name="initCloseEventHandler" method="_RVeDjdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RTsh5NzqEeaMeaEvRdRzBA" name="view" type="_RPHj4NzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUU0AdzqEeaMeaEvRdRzBA" name="update">
              <ownedParameter xmi:id="_RUU0AtzqEeaMeaEvRdRzBA" name="o" type="_RTKWYtzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RUU0A9zqEeaMeaEvRdRzBA" name="arg" type="_RUAD4NzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUVbFNzqEeaMeaEvRdRzBA" name="updateTreeView" method="_RVeDkNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUWCINzqEeaMeaEvRdRzBA" name="treeView" type="_RTTgUtzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RUWCIdzqEeaMeaEvRdRzBA" name="updateClassView" method="_RVeqkNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUWCItzqEeaMeaEvRdRzBA" name="treeView" type="_RTTgUtzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV3FFNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV3FFdzqEeaMeaEvRdRzBA _RU1xYNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV3FFdzqEeaMeaEvRdRzBA" name="" type="_ROLIsNzqEeaMeaEvRdRzBA" association="_RV3FFNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV3FF9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV3FGNzqEeaMeaEvRdRzBA _RU1xY9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV3FGNzqEeaMeaEvRdRzBA" name="" type="_ROLIsNzqEeaMeaEvRdRzBA" association="_RV3FF9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV3sIdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV3sItzqEeaMeaEvRdRzBA _RU2YctzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV3sItzqEeaMeaEvRdRzBA" name="" type="_ROLIsNzqEeaMeaEvRdRzBA" association="_RV3sIdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV3sJNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV3sJdzqEeaMeaEvRdRzBA _RU2YddzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV3sJdzqEeaMeaEvRdRzBA" name="" type="_ROLIsNzqEeaMeaEvRdRzBA" association="_RV3sJNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV3sJ9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV3sKNzqEeaMeaEvRdRzBA _RU2_gtzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV3sKNzqEeaMeaEvRdRzBA" name="" type="_ROOzENzqEeaMeaEvRdRzBA" association="_RV3sJ9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV4TMdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV4TMtzqEeaMeaEvRdRzBA _RU3mkdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV4TMtzqEeaMeaEvRdRzBA" name="" type="_ROOzENzqEeaMeaEvRdRzBA" association="_RV4TMdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV4TNNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV4TNdzqEeaMeaEvRdRzBA _RU3mlNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV4TNdzqEeaMeaEvRdRzBA" name="" type="_ROOzENzqEeaMeaEvRdRzBA" association="_RV4TNNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV4TN9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV4TONzqEeaMeaEvRdRzBA _RU4NoNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV4TONzqEeaMeaEvRdRzBA" name="" type="_ROOzENzqEeaMeaEvRdRzBA" association="_RV4TN9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV46QdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV46QtzqEeaMeaEvRdRzBA _RU4No9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV46QtzqEeaMeaEvRdRzBA" name="" type="_ROOzENzqEeaMeaEvRdRzBA" association="_RV46QdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV46RNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV46RdzqEeaMeaEvRdRzBA _RU40sNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV46RdzqEeaMeaEvRdRzBA" name="" type="_ROSdcNzqEeaMeaEvRdRzBA" association="_RV46RNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV46R9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV46SNzqEeaMeaEvRdRzBA _RU40s9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV46SNzqEeaMeaEvRdRzBA" name="" type="_ROSdcNzqEeaMeaEvRdRzBA" association="_RV46R9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV5hUdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV5hUtzqEeaMeaEvRdRzBA _RU5bwNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV5hUtzqEeaMeaEvRdRzBA" name="" type="_ROU5sNzqEeaMeaEvRdRzBA" association="_RV5hUdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV5hVNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV5hVdzqEeaMeaEvRdRzBA _RU5bwtzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV5hVdzqEeaMeaEvRdRzBA" name="" type="_ROU5sNzqEeaMeaEvRdRzBA" association="_RV5hVNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV6IYNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV6IYdzqEeaMeaEvRdRzBA _RU5bxNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV6IYdzqEeaMeaEvRdRzBA" name="" type="_ROWu4NzqEeaMeaEvRdRzBA" association="_RV6IYNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV6IY9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV6IZNzqEeaMeaEvRdRzBA _RU6C0NzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV6IZNzqEeaMeaEvRdRzBA" name="" type="_ROWu4NzqEeaMeaEvRdRzBA" association="_RV6IY9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV6IZtzqEeaMeaEvRdRzBA" name="" memberEnd="_RV6IZ9zqEeaMeaEvRdRzBA _RU6C09zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV6IZ9zqEeaMeaEvRdRzBA" name="" type="_ROWu4NzqEeaMeaEvRdRzBA" association="_RV6IZtzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV6vcNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV6vcdzqEeaMeaEvRdRzBA _RU6p4NzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV6vcdzqEeaMeaEvRdRzBA" name="" type="_ROWu4NzqEeaMeaEvRdRzBA" association="_RV6vcNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV6vc9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV6vdNzqEeaMeaEvRdRzBA _RU6p4tzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV6vdNzqEeaMeaEvRdRzBA" name="" type="_ROWu4NzqEeaMeaEvRdRzBA" association="_RV6vc9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV6vdtzqEeaMeaEvRdRzBA" name="" memberEnd="_RV6vd9zqEeaMeaEvRdRzBA _RU6p5NzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV6vd9zqEeaMeaEvRdRzBA" name="" type="_ROZyMNzqEeaMeaEvRdRzBA" association="_RV6vdtzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV7WgNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV7WgdzqEeaMeaEvRdRzBA _RU7Q8NzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV7WgdzqEeaMeaEvRdRzBA" name="" type="_ROZyMNzqEeaMeaEvRdRzBA" association="_RV7WgNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV7Wg9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV7WhNzqEeaMeaEvRdRzBA _RU7Q89zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV7WhNzqEeaMeaEvRdRzBA" name="" type="_ROZyMNzqEeaMeaEvRdRzBA" association="_RV7Wg9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV7WhtzqEeaMeaEvRdRzBA" name="" memberEnd="_RV7Wh9zqEeaMeaEvRdRzBA _RU74AdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV7Wh9zqEeaMeaEvRdRzBA" name="" type="_ROZyMNzqEeaMeaEvRdRzBA" association="_RV7WhtzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV79kdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV79ktzqEeaMeaEvRdRzBA _RU74A9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV79ktzqEeaMeaEvRdRzBA" name="" type="_ROZyMNzqEeaMeaEvRdRzBA" association="_RV79kdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV79lNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV79ldzqEeaMeaEvRdRzBA _RU74BdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV79ldzqEeaMeaEvRdRzBA" name="" type="_ROcOcNzqEeaMeaEvRdRzBA" association="_RV79lNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV79l9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV79mNzqEeaMeaEvRdRzBA _RU8fEdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV79mNzqEeaMeaEvRdRzBA" name="" type="_ROcOcNzqEeaMeaEvRdRzBA" association="_RV79l9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV8kodzqEeaMeaEvRdRzBA" name="" memberEnd="_RV8kotzqEeaMeaEvRdRzBA _RU8fE9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV8kotzqEeaMeaEvRdRzBA" name="" type="_ROfRwNzqEeaMeaEvRdRzBA" association="_RV8kodzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV8kpNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV8kpdzqEeaMeaEvRdRzBA _RU9GIdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV8kpdzqEeaMeaEvRdRzBA" name="" type="_ROfRwNzqEeaMeaEvRdRzBA" association="_RV8kpNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV8kp9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV8kqNzqEeaMeaEvRdRzBA _RU9GI9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV8kqNzqEeaMeaEvRdRzBA" name="" type="_ROfRwNzqEeaMeaEvRdRzBA" association="_RV8kp9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV9LsdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV9LstzqEeaMeaEvRdRzBA _RU9GJdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV9LstzqEeaMeaEvRdRzBA" name="" type="_ROfRwNzqEeaMeaEvRdRzBA" association="_RV9LsdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV9LtNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV9LtdzqEeaMeaEvRdRzBA _RU9GJ9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV9LtdzqEeaMeaEvRdRzBA" name="" type="_ROfRwNzqEeaMeaEvRdRzBA" association="_RV9LtNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV9Lt9zqEeaMeaEvRdRzBA" name="" memberEnd="_RV9ywNzqEeaMeaEvRdRzBA _RU9tMdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV9ywNzqEeaMeaEvRdRzBA" name="" type="_ROfRwNzqEeaMeaEvRdRzBA" association="_RV9Lt9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RV9ywtzqEeaMeaEvRdRzBA" name="" memberEnd="_RV9yw9zqEeaMeaEvRdRzBA _RU9tM9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RV9yw9zqEeaMeaEvRdRzBA" name="" type="_ROfRwNzqEeaMeaEvRdRzBA" association="_RV9ywtzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWCENNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWCENdzqEeaMeaEvRdRzBA _RVCls9zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWCENdzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWCENNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWCEN9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWCEONzqEeaMeaEvRdRzBA _RVDMwdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWCEONzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWCEN9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWCrQdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWCrQtzqEeaMeaEvRdRzBA _RVDMwtzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWCrQtzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWCrQdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWCrRNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWCrRdzqEeaMeaEvRdRzBA _RVDMxNzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWCrRdzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWCrRNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWCrR9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWCrSNzqEeaMeaEvRdRzBA _RVDMxdzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWCrSNzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWCrR9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWDSUdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWDSUtzqEeaMeaEvRdRzBA _RVDMxtzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWDSUtzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWDSUdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWDSVNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWDSVdzqEeaMeaEvRdRzBA _RVDz0dzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWDSVdzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWDSVNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWDSV9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWDSWNzqEeaMeaEvRdRzBA _RVDz0tzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWDSWNzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWDSV9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWD5YdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWD5YtzqEeaMeaEvRdRzBA _RVDz09zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWD5YtzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWD5YdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWD5ZNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWD5ZdzqEeaMeaEvRdRzBA _RVDz1NzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWD5ZdzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWD5ZNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWD5Z9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWD5aNzqEeaMeaEvRdRzBA _RVDz1tzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWD5aNzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWD5Z9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWEgcdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWEgctzqEeaMeaEvRdRzBA _RVEa4NzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWEgctzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWEgcdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWEgdNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWEgddzqEeaMeaEvRdRzBA _RVEa4dzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWEgddzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWEgdNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWEgd9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWEgeNzqEeaMeaEvRdRzBA _RVEa4tzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWEgeNzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWEgd9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWFHgdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWFHgtzqEeaMeaEvRdRzBA _RVEa59zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWFHgtzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWFHgdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWFHhNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWFHhdzqEeaMeaEvRdRzBA _RVFB8dzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWFHhdzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWFHhNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWFukdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWFuktzqEeaMeaEvRdRzBA _RVFB89zqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWFuktzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWFukdzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RWFulNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWFuldzqEeaMeaEvRdRzBA _RVFB9dzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RWFuldzqEeaMeaEvRdRzBA" name="" type="_RPHj4NzqEeaMeaEvRdRzBA" association="_RWFulNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RJT20NzqEeaMeaEvRdRzBA" name="controller">
          <packagedElement xmi:type="uml:Class" xmi:id="_RNMRQNzqEeaMeaEvRdRzBA" name="Controller">
            <ownedAttribute xmi:id="_RUmg0NzqEeaMeaEvRdRzBA" name="model" visibility="private" isLeaf="true" type="_ROJTgNzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RVyMkNzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RUnH4dzqEeaMeaEvRdRzBA" name="view" visibility="private" isLeaf="true" type="_RPHj4NzqEeaMeaEvRdRzBA" isReadOnly="true" association="_RVyMk9zqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVLvoNzqEeaMeaEvRdRzBA" name="Controller" specification="_RNNfYNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVLvodzqEeaMeaEvRdRzBA" type="_RNMRQNzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.model = new Model();
		this.view = new View(this.model, this);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVLvotzqEeaMeaEvRdRzBA" name="start" specification="_RNOGcNzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>// TODO implement this operation
		this.view.show();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVLvo9zqEeaMeaEvRdRzBA" name="openFile" specification="_RNOGcdzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>List&lt;File> fileChoices = view.pathAlert();
		// Prevents OOB- and Nullpointer-Exceptions when aborting the file
		// selection
		if (fileChoices != null) {
			if (view.isInitiated() == false) {
				view.updateRootPane();
			}
			for (File xmlFile : fileChoices) {
				model.parseFile(xmlFile.toString());
			}

			TestRun testRun = TestData.getInstance().getTestRunList().get(0);
			TestData.getInstance().printTree();

			view.getTable().fillTestedClassTable(testRun);
			view.getTotals().showTestRunTotals(testRun);

			view.getClassTree().fillClassView(TestData.getInstance().getRoot());
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVLvpNzqEeaMeaEvRdRzBA" name="parseFilesInDirectory" specification="_RT8ZgNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVLvpdzqEeaMeaEvRdRzBA" name="files" type="_RSxU0NzqEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVLvptzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>//TODO: Redundant Check to prevent Exceptions
		if (files.length != 0) {
			for (File file : files) {
				if (file.isDirectory()) {
					// Calls same method again.
					parseFilesInDirectory(file.listFiles());
				} else {
					String lowerCaseFile = file.toString().toLowerCase();
					if (lowerCaseFile.endsWith(&quot;.xml&quot;) &amp;&amp; lowerCaseFile.contains(&quot;testrun&quot;)) {
						model.parseFile(file.toString());
					}

				}
			}
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVLvp9zqEeaMeaEvRdRzBA" name="createTreeItems" specification="_RNOtgNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVLvqNzqEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVLvqdzqEeaMeaEvRdRzBA" type="_RSzKA9zqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Not sure if working on windows with this regex
		String[] rootFolder = rootDirectory.split(&quot;/|\\\\&quot;);

		TreeItem rootItem = new TreeItem(rootFolder[rootFolder.length - 1]);
		Path rootPath = Paths.get(rootDirectory);
		File[] files = rootPath.toFile().listFiles();
		for (File file : files) {
			if (file.isDirectory()) {
				// Create new TreeItem as root with children
				TreeItem subRoot = createTreeItems(file.toString());
				if (subRoot.getChildren().size() != 0) {
					rootItem.getChildren().add(subRoot);
				}
			} else {
				String lowerCaseFile = file.toString().toLowerCase();
				if (lowerCaseFile.endsWith(&quot;.xml&quot;) &amp;&amp; lowerCaseFile.contains(&quot;testrun&quot;)) {
					// Create new TreeItem as leaf and add to rootItem
					TreeItem&lt;TestRun> treeItem = new TreeItem(file.getName());
					rootItem.getChildren().add(treeItem);
				}
			}
		}
		return rootItem;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVLvqtzqEeaMeaEvRdRzBA" name="openFolder" specification="_RNPUkNzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>File selectedDirectory = this.view.directoryAlert();
		// Prevents Nullpointer- and OOB-Exceptions
		if (selectedDirectory != null) {
			if (view.isInitiated() == false) {
				view.updateRootPane();
			}
			// Parse all existing xml files in within the selectedDirectory
			File[] files = selectedDirectory.listFiles();
			parseFilesInDirectory(files);

			view.getTree().fillTreeView(selectedDirectory);

			view.getClassTree().fillClassView(TestData.getInstance().getRoot());

			TestData.getInstance().getAnalyzer().analyze();
			TestData.getInstance().getRoot().printTree(0);
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWsNzqEeaMeaEvRdRzBA" name="exitMain" specification="_RNPUkdzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>this.view.exitAlert();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWsdzqEeaMeaEvRdRzBA" name="getTestedClassesFromTestRun" specification="_RSzxENzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVMWstzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVMWs9zqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVMWtNzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return model.getTestedClassesFromTestRun(testRun);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWtdzqEeaMeaEvRdRzBA" name="handleTreeItemClick" specification="_RNPUktzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVMWttzqEeaMeaEvRdRzBA" name="xmlName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;TestRun> testRuns = TestData.getInstance().getTestRunList();
		handleResetGraph();
		for (TestRun testRun : testRuns) {
			if (testRun.getPath().contains(xmlName)) {
				view.getTable().fillTestedClassTable(testRun);
				view.getTotals().showTestRunTotals(testRun);
				break;
			}
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWt9zqEeaMeaEvRdRzBA" name="handleTableRowClick" specification="_RS0YINzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVMWuNzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>view.getGraph().setChartData(testedClass);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWudzqEeaMeaEvRdRzBA" name="handleResetGraph" specification="_RNP7oNzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>view.getGraph().getLineChart().getData().clear();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWutzqEeaMeaEvRdRzBA" name="handleClearDataButton" specification="_RNP7odzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>view.getMenuBar().clearDataAlert();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWu9zqEeaMeaEvRdRzBA" name="clearData" specification="_RNP7otzqEeaMeaEvRdRzBA">
              <language>java</language>
              <body>// TODO: does not clear testruntotals yet

		// Clear the testData
		TestData.getInstance().getTestRunList().clear();
		TestData.getInstance().getUnitTestList().clear();

		// Delete the Table Data
		if (view.getTable().getData() != null) {
			view.getTable().getData().clear();
		}

		// Delete the TreeView
		view.getTree().getTreeView().setRoot(null);

		// Clear the classesTreeView
		view.updateClassView(view.getClassTree().generateEmptyClassView());

		// TODO Clear TestRunTotals

		// Clear the Graph Content by Calling the ResetButton Handler
		handleResetGraph();

		// Clear both Observable Lists for the TestRunInfos
		if (view.getTotals().getGeneratedList() != null) {
			// view.getTotals().getAllCounters().clear();
			view.getTotals().getGeneratedList().clear();
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWvNzqEeaMeaEvRdRzBA" name="calculateChartData" specification="_RS0YJNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVMWvdzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVMWvtzqEeaMeaEvRdRzBA" type="_RS0YItzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVMWv9zqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;XYChart.Data&lt;TestRun, Number>> datas = new LinkedList&lt;>();
		for (TestRun testRun : TestData.getInstance().getTestRunList()) {
			double yValue = testedClass.getFailurePercentageByTestrun(testRun);
			if (yValue == -1) {
				continue;
			}
			XYChart.Data&lt;TestRun, Number> dataPoint = new XYChart.Data&lt;TestRun, Number>(testRun, yValue);
			datas.add(dataPoint);
		}
		return datas;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWwNzqEeaMeaEvRdRzBA" name="handleClassTreeClick" specification="_RS0_M9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVMWwdzqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>if (node.getTestedClass() != null) {
			view.getGraph().setChartData(node.getTestedClass());
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVMWwtzqEeaMeaEvRdRzBA" name="handleChartNodeClick" specification="_RS0_NdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVMWw9zqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVMWxNzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>System.out.println(&quot;Clicked node &quot; + testRun.getRunName());
		view.getComparison().updateComparisonSlot(testedClass, testRun, true);
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RNNfYNzqEeaMeaEvRdRzBA" name="Controller" method="_RVLvoNzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RNNfYdzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RNNfYtzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RNNfY9zqEeaMeaEvRdRzBA" type="_RNMRQNzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNOGcNzqEeaMeaEvRdRzBA" name="start" method="_RVLvotzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RNOGcdzqEeaMeaEvRdRzBA" name="openFile" method="_RVLvo9zqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RNOtgNzqEeaMeaEvRdRzBA" name="createTreeItems" method="_RVLvp9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNOtgdzqEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RT8Zg9zqEeaMeaEvRdRzBA" type="_RSzKA9zqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNPUkNzqEeaMeaEvRdRzBA" name="openFolder" method="_RVLvqtzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RNPUkdzqEeaMeaEvRdRzBA" name="exitMain" method="_RVMWsNzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RNPUktzqEeaMeaEvRdRzBA" name="handleTreeItemClick" method="_RVMWtdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RNPUk9zqEeaMeaEvRdRzBA" name="xmlName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RNP7oNzqEeaMeaEvRdRzBA" name="handleResetGraph" method="_RVMWudzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RNP7odzqEeaMeaEvRdRzBA" name="handleClearDataButton" method="_RVMWutzqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RNP7otzqEeaMeaEvRdRzBA" name="clearData" method="_RVMWu9zqEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_RSzxENzqEeaMeaEvRdRzBA" name="getTestedClassesFromTestRun" method="_RVMWsdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RSzxEdzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RSzxEtzqEeaMeaEvRdRzBA" type="_RNw5ANzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RSzxE9zqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS0YINzqEeaMeaEvRdRzBA" name="handleTableRowClick" method="_RVMWt9zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS0YIdzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RS0YJNzqEeaMeaEvRdRzBA" name="calculateChartData" method="_RVMWvNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS0YJdzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS0_MNzqEeaMeaEvRdRzBA" type="_RS0YItzqEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RS0_MdzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RS0_M9zqEeaMeaEvRdRzBA" name="handleClassTreeClick" method="_RVMWwNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS0_NNzqEeaMeaEvRdRzBA" name="node" type="_RN1KcNzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RS0_NdzqEeaMeaEvRdRzBA" name="handleChartNodeClick" method="_RVMWwtzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RS0_NtzqEeaMeaEvRdRzBA" name="testRun" type="_RNqLUNzqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RS1mQNzqEeaMeaEvRdRzBA" name="testedClass" type="_RNw5ANzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RT8ZgNzqEeaMeaEvRdRzBA" name="parseFilesInDirectory" visibility="private" method="_RVLvpNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RT8ZgdzqEeaMeaEvRdRzBA" name="files" type="_RSxU0NzqEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RT8ZgtzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVyMkNzqEeaMeaEvRdRzBA" name="" memberEnd="_RVyMkdzqEeaMeaEvRdRzBA _RUmg0NzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVyMkdzqEeaMeaEvRdRzBA" name="" type="_RNMRQNzqEeaMeaEvRdRzBA" association="_RVyMkNzqEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_RVyMk9zqEeaMeaEvRdRzBA" name="" memberEnd="_RVyMlNzqEeaMeaEvRdRzBA _RUnH4dzqEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_RVyMlNzqEeaMeaEvRdRzBA" name="" type="_RNMRQNzqEeaMeaEvRdRzBA" association="_RVyMk9zqEeaMeaEvRdRzBA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RJWTENzqEeaMeaEvRdRzBA" name="exceptions">
          <packagedElement xmi:type="uml:Class" xmi:id="_RNSX4NzqEeaMeaEvRdRzBA" name="WrongXMLAttributeException">
            <generalization xmi:id="_RT-Ot9zqEeaMeaEvRdRzBA" general="_RT9AkdzqEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_RUnH49zqEeaMeaEvRdRzBA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_RUnu8NzqEeaMeaEvRdRzBA" value="-6082910519611169383L"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVM9wNzqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_RNSX4dzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVM9wdzqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVM9wtzqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_RT9nodzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVM9w9zqEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVM9xNzqEeaMeaEvRdRzBA" name="cause" type="_RT9Ak9zqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVM9xdzqEeaMeaEvRdRzBA" name="enableSuppression">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVM9xtzqEeaMeaEvRdRzBA" name="writableStackTrace">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVM9x9zqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super(message, cause, enableSuppression, writableStackTrace);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVM9yNzqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_RT9nqdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVM9ydzqEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVM9ytzqEeaMeaEvRdRzBA" name="cause" type="_RT9Ak9zqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVM9y9zqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super(message, cause);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVM9zNzqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_RNS-89zqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVM9zdzqEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RVM9ztzqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super(message);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVM9z9zqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_RT-OstzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVM90NzqEeaMeaEvRdRzBA" name="cause" type="_RT9Ak9zqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RVM90dzqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super(cause);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_RNSX4dzqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_RVM9wNzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RNS-8NzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RNS-8dzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RNS-8tzqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RNS-89zqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_RVM9zNzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RNTmANzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RNTmAdzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RNS-9NzqEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RNTmAtzqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RT9nodzqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_RVM9wtzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RT9nptzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RT9np9zqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RT9notzqEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RT9no9zqEeaMeaEvRdRzBA" name="cause" type="_RT9Ak9zqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RT9npNzqEeaMeaEvRdRzBA" name="enableSuppression">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RT9npdzqEeaMeaEvRdRzBA" name="writableStackTrace">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RT9nqNzqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RT9nqdzqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_RVM9yNzqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RT9nrNzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RT-OsNzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RT9nqtzqEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_RT9nq9zqEeaMeaEvRdRzBA" name="cause" type="_RT9Ak9zqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RT-OsdzqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_RT-OstzqEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_RVM9z9zqEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_RT-OtNzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_RT-OtdzqEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_RT-Os9zqEeaMeaEvRdRzBA" name="cause" type="_RT9Ak9zqEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_RT-OttzqEeaMeaEvRdRzBA" type="_RNSX4NzqEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RJ_MQNzqEeaMeaEvRdRzBA" name="main">
          <packagedElement xmi:type="uml:Class" xmi:id="_ROIFYNzqEeaMeaEvRdRzBA" name="TDA">
            <generalization xmi:id="_RUHYpdzqEeaMeaEvRdRzBA" general="_RTJIQNzqEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWHtdzqEeaMeaEvRdRzBA" name="main" specification="_ROIFYdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWHttzqEeaMeaEvRdRzBA" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVWHt9zqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>launch(args);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVWHuNzqEeaMeaEvRdRzBA" name="start" specification="_RUHYoNzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RVWHudzqEeaMeaEvRdRzBA" name="primaryStage" type="_RTJvUdzqEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>new Controller().start();
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_ROIFYdzqEeaMeaEvRdRzBA" name="main" isStatic="true" method="_RVWHtdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_ROIscNzqEeaMeaEvRdRzBA" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ROIscdzqEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_RUHYoNzqEeaMeaEvRdRzBA" name="start" method="_RVWHuNzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_RUHYodzqEeaMeaEvRdRzBA" name="primaryStage" type="_RTJvUdzqEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RJQMcdzqEeaMeaEvRdRzBA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_RJQMctzqEeaMeaEvRdRzBA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_RSxU0NzqEeaMeaEvRdRzBA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RS20YNzqEeaMeaEvRdRzBA" name="FileInputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RJQMc9zqEeaMeaEvRdRzBA" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_RJQMdNzqEeaMeaEvRdRzBA" name="file">
          <packagedElement xmi:type="uml:Interface" xmi:id="_RSx74dzqEeaMeaEvRdRzBA" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RSyi8dzqEeaMeaEvRdRzBA" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RJQMddzqEeaMeaEvRdRzBA" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_RSyi89zqEeaMeaEvRdRzBA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_RKBBcNzqEeaMeaEvRdRzBA" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_RTMLkdzqEeaMeaEvRdRzBA" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RLQ-oNzqEeaMeaEvRdRzBA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_RTu-INzqEeaMeaEvRdRzBA" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RSyi9dzqEeaMeaEvRdRzBA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RS4pkNzqEeaMeaEvRdRzBA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RS4pktzqEeaMeaEvRdRzBA" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTKWYNzqEeaMeaEvRdRzBA" name="HashSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTKWYtzqEeaMeaEvRdRzBA" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RTK9cdzqEeaMeaEvRdRzBA" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTLkgNzqEeaMeaEvRdRzBA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTWjoNzqEeaMeaEvRdRzBA" name="Optional"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RToQcNzqEeaMeaEvRdRzBA" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RT9AkNzqEeaMeaEvRdRzBA" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_RT9AkdzqEeaMeaEvRdRzBA" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RT9Ak9zqEeaMeaEvRdRzBA" name="Throwable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RUAD4NzqEeaMeaEvRdRzBA" name="Object"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RUAq8NzqEeaMeaEvRdRzBA" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RULDAdzqEeaMeaEvRdRzBA" name="Number"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RJQzgNzqEeaMeaEvRdRzBA" name="javafx">
      <packagedElement xmi:type="uml:Package" xmi:id="_RJQzgdzqEeaMeaEvRdRzBA" name="scene">
        <packagedElement xmi:type="uml:Class" xmi:id="_RTMypdzqEeaMeaEvRdRzBA" name="Node"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_RJQzgtzqEeaMeaEvRdRzBA" name="chart">
          <packagedElement xmi:type="uml:Class" xmi:id="_RSzKAdzqEeaMeaEvRdRzBA" name="XYChart"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTP189zqEeaMeaEvRdRzBA" name="CategoryAxis"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTP19dzqEeaMeaEvRdRzBA" name="LineChart"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTQdAdzqEeaMeaEvRdRzBA" name="NumberAxis"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RJQzg9zqEeaMeaEvRdRzBA" name="control">
          <packagedElement xmi:type="uml:Class" xmi:id="_RSzKA9zqEeaMeaEvRdRzBA" name="TreeItem"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_RKN1wNzqEeaMeaEvRdRzBA" name="Alert">
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_RTXKsdzqEeaMeaEvRdRzBA" name="AlertType"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_RKQ5ENzqEeaMeaEvRdRzBA" name="cell">
            <packagedElement xmi:type="uml:Class" xmi:id="_RTY_4tzqEeaMeaEvRdRzBA" name="PropertyValueFactory"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTNZsdzqEeaMeaEvRdRzBA" name="ScrollPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTNZs9zqEeaMeaEvRdRzBA" name="TableColumn"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTNZtdzqEeaMeaEvRdRzBA" name="TableView"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTQdA9zqEeaMeaEvRdRzBA" name="Label"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTTgUNzqEeaMeaEvRdRzBA" name="TreeCell"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTTgUtzqEeaMeaEvRdRzBA" name="TreeView"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTWjpNzqEeaMeaEvRdRzBA" name="Alert"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTXKs9zqEeaMeaEvRdRzBA" name="ButtonType"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTXKtdzqEeaMeaEvRdRzBA" name="Menu"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTXxwdzqEeaMeaEvRdRzBA" name="MenuBar"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTXxw9zqEeaMeaEvRdRzBA" name="MenuItem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTY_4NzqEeaMeaEvRdRzBA" name="TableRow"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTa1EtzqEeaMeaEvRdRzBA" name="ListView"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTpek9zqEeaMeaEvRdRzBA" name="Button"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTpeldzqEeaMeaEvRdRzBA" name="Tab"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTqFodzqEeaMeaEvRdRzBA" name="TabPane"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RKEr0NzqEeaMeaEvRdRzBA" name="input">
          <packagedElement xmi:type="uml:Class" xmi:id="_RTQdBdzqEeaMeaEvRdRzBA" name="MouseEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RKEr0dzqEeaMeaEvRdRzBA" name="layout">
          <packagedElement xmi:type="uml:Class" xmi:id="_RTREEdzqEeaMeaEvRdRzBA" name="StackPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTd4YNzqEeaMeaEvRdRzBA" name="BorderPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTd4YtzqEeaMeaEvRdRzBA" name="HBox"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTefcdzqEeaMeaEvRdRzBA" name="Pane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTefc9zqEeaMeaEvRdRzBA" name="VBox"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTqFo9zqEeaMeaEvRdRzBA" name="ColumnConstraints"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_RTqssNzqEeaMeaEvRdRzBA" name="GridPane"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RKJkUNzqEeaMeaEvRdRzBA" name="text">
          <packagedElement xmi:type="uml:Class" xmi:id="_RTUHYNzqEeaMeaEvRdRzBA" name="Text"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTP18dzqEeaMeaEvRdRzBA" name="Cursor"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTpekdzqEeaMeaEvRdRzBA" name="Scene"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RJ-lMNzqEeaMeaEvRdRzBA" name="application">
        <packagedElement xmi:type="uml:Class" xmi:id="_RTJIQNzqEeaMeaEvRdRzBA" name="Application"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RJ-lMdzqEeaMeaEvRdRzBA" name="stage">
        <packagedElement xmi:type="uml:Class" xmi:id="_RTJvUdzqEeaMeaEvRdRzBA" name="Stage"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTqsstzqEeaMeaEvRdRzBA" name="DirectoryChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTqstNzqEeaMeaEvRdRzBA" name="FileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTrTwNzqEeaMeaEvRdRzBA" name="WindowEvent"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RKBBcdzqEeaMeaEvRdRzBA" name="beans">
        <packagedElement xmi:type="uml:Package" xmi:id="_RKBBctzqEeaMeaEvRdRzBA" name="property">
          <packagedElement xmi:type="uml:Class" xmi:id="_RTMLk9zqEeaMeaEvRdRzBA" name="SimpleStringProperty"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RKBBc9zqEeaMeaEvRdRzBA" name="value">
          <packagedElement xmi:type="uml:Interface" xmi:id="_RTMLldzqEeaMeaEvRdRzBA" name="ObservableValue"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RKBogNzqEeaMeaEvRdRzBA" name="collections">
        <packagedElement xmi:type="uml:Class" xmi:id="_RTMyodzqEeaMeaEvRdRzBA" name="FXCollections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RTMyo9zqEeaMeaEvRdRzBA" name="ObservableList"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RKBogdzqEeaMeaEvRdRzBA" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_RTOAwdzqEeaMeaEvRdRzBA" name="Callback"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RKEEwNzqEeaMeaEvRdRzBA" name="event">
        <packagedElement xmi:type="uml:Interface" xmi:id="_RTPO4NzqEeaMeaEvRdRzBA" name="EventHandler"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTWjotzqEeaMeaEvRdRzBA" name="ActionEvent"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_RKVKgNzqEeaMeaEvRdRzBA" name="geometry">
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_RTa1ENzqEeaMeaEvRdRzBA" name="Orientation"/>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_RToQctzqEeaMeaEvRdRzBA" name="HPos"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_RTo3gdzqEeaMeaEvRdRzBA" name="Insets"/>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_RTo3g9zqEeaMeaEvRdRzBA" name="Pos"/>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_RTo3hdzqEeaMeaEvRdRzBA" name="VPos"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RJTPwtzqEeaMeaEvRdRzBA" name="XYChart">
      <packagedElement xmi:type="uml:Class" xmi:id="_RS0YItzqEeaMeaEvRdRzBA" name="Data"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_RTREE9zqEeaMeaEvRdRzBA" name="Series"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RJhSMNzqEeaMeaEvRdRzBA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_RJhSMdzqEeaMeaEvRdRzBA" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_RJhSMtzqEeaMeaEvRdRzBA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_RS3bcNzqEeaMeaEvRdRzBA" name="XMLInputFactory"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_RS3bctzqEeaMeaEvRdRzBA" name="XMLStreamConstants"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_RS3bdNzqEeaMeaEvRdRzBA" name="XMLStreamReader"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RJ4ekNzqEeaMeaEvRdRzBA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_RJ5FoNzqEeaMeaEvRdRzBA" name="junit">
        <packagedElement xmi:type="uml:Class" xmi:id="_RTE20NzqEeaMeaEvRdRzBA" name="Assert"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_RKsW4NzqEeaMeaEvRdRzBA" name="runner">
          <packagedElement xmi:type="uml:Interface" xmi:id="_RTj_ANzqEeaMeaEvRdRzBA" name="RunWith"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_RKsW4dzqEeaMeaEvRdRzBA" name="runners">
          <packagedElement xmi:type="uml:Class" xmi:id="_RTj_AtzqEeaMeaEvRdRzBA" name="Suite"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_RKsW4tzqEeaMeaEvRdRzBA" name="Suite">
            <packagedElement xmi:type="uml:Interface" xmi:id="_RTkmEdzqEeaMeaEvRdRzBA" name="SuiteClasses"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RTE20tzqEeaMeaEvRdRzBA" name="After"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RTE21NzqEeaMeaEvRdRzBA" name="AfterClass"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RTFd4dzqEeaMeaEvRdRzBA" name="Before"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RTFd49zqEeaMeaEvRdRzBA" name="BeforeClass"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_RTGE8NzqEeaMeaEvRdRzBA" name="Test"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ROl_cNzqEeaMeaEvRdRzBA" name="TestedClassTests">
      <eAnnotations xmi:id="_ROl_cdzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_ROl_ctzqEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_ROl_c9zqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_RU-URNzqEeaMeaEvRdRzBA" name="testRun1" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RV9yxdzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RU-7UdzqEeaMeaEvRdRzBA" name="unitTest1" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RV-Z0NzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RU-7U9zqEeaMeaEvRdRzBA" name="unitTest2" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RV-Z09zqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RU-7VdzqEeaMeaEvRdRzBA" name="unitTest4" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RV-Z1tzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RU-7V9zqEeaMeaEvRdRzBA" name="unitTest3" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RV_A4dzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RU_iYdzqEeaMeaEvRdRzBA" name="testedClass" visibility="private" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RV_A5NzqEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZINzqEeaMeaEvRdRzBA" name="setUp" specification="_ROnNk9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun1 = new TestRun(&quot;Run1&quot;, &quot;foo&quot;);
		unitTest1 = new UnitTest(testRun1, &quot;test1&quot;, &quot;fooTest1&quot;, &quot;Run1fooTest1&quot;, &quot;testFooBar&quot;);
		unitTest2 = new UnitTest(testRun1, &quot;test2&quot;, &quot;fooTest2&quot;, &quot;Run1fooTest2&quot;, &quot;testFooBar&quot;);
		unitTest3 = new UnitTest(testRun1, &quot;test3&quot;, &quot;fooTest3&quot;, &quot;Run1fooTest3&quot;, &quot;testFooBar&quot;);
		unitTest4 = new UnitTest(testRun1, &quot;test4&quot;, &quot;fooTest4&quot;, &quot;Run1fooTest4&quot;, &quot;testFooBar&quot;);
		
		testedClass = new TestedClass(&quot;TestMe&quot;, unitTest1);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZIdzqEeaMeaEvRdRzBA" name="testFailurePercentage50" specification="_ROn0o9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Passed&quot;);
		unitTest3.setOutcome(&quot;Failed&quot;);
		unitTest4.setOutcome(&quot;Failed&quot;);
		

		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		testedClass.addUnitTestToClassLog(unitTest4);
		
		
		assertEquals(50, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZItzqEeaMeaEvRdRzBA" name="testFailurePercentage33" specification="_ROn0p9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Passed&quot;);
		unitTest3.setOutcome(&quot;Failed&quot;);
		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		
		assertEquals(33.33, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZI9zqEeaMeaEvRdRzBA" name="testFailurePercentage66" specification="_ROobs9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Failed&quot;);
		unitTest3.setOutcome(&quot;Failed&quot;);
		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		
		assertEquals(66.67, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZJNzqEeaMeaEvRdRzBA" name="testFailurePercentage0" specification="_ROobt9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Passed&quot;);
		unitTest3.setOutcome(&quot;Passed&quot;);
		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		
		assertEquals(0, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZJdzqEeaMeaEvRdRzBA" name="testGetClassnameOfTestMe" specification="_ROpCwtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertEquals(&quot;TestMe&quot;, testedClass.getClassName());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZJtzqEeaMeaEvRdRzBA" name="testSetClassnameToNewTestMe" specification="_ROpCxtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testedClass.setClassName(&quot;NewTestMe&quot;);
		assertEquals(&quot;NewTestMe&quot;, testedClass.getClassName());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZJ9zqEeaMeaEvRdRzBA" name="testAddNewUnitTestToClassLog" specification="_ROpCytzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> before = testedClass.getClassLog().get(0).getUnitTestList();
		testedClass.addUnitTestToClassLog(unitTest2);
		before.add(unitTest2);
		
		assertEquals(before, testedClass.getUnitTestsByTestRun(testRun1));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZKNzqEeaMeaEvRdRzBA" name="testAddExistingUnitTestToClassLog" specification="_ROpp09zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> before = testedClass.getClassLog().get(0).getUnitTestList();
		testedClass.addUnitTestToClassLog(unitTest1);
		
		assertEquals(before, testedClass.getUnitTestsByTestRun(testRun1));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZKdzqEeaMeaEvRdRzBA" name="testGetFailurePercentageByTestRun" specification="_ROpp19zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Passed&quot;);
		unitTest3.setOutcome(&quot;Failed&quot;);
		unitTest4.setOutcome(&quot;Failed&quot;);
		

		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		testedClass.addUnitTestToClassLog(unitTest4);
		
		double failurePercentage = testedClass.getClassLog().get(0).getFailurePercentage();
		
		assertEquals(failurePercentage, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
		List&lt;UnitTest> before = testedClass.getClassLog().get(0).getUnitTestList();
		testedClass.addUnitTestToClassLog(unitTest1);
		
		assertEquals(before.toString(), testedClass.getClassLog().get(0).getUnitTestList().toString());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZKtzqEeaMeaEvRdRzBA" name="testGetUnitTestsByTestRun" specification="_ROqQ4NzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> compare = testedClass.getClassLog().get(0).getUnitTestList();		
		assertEquals(compare, testedClass.getUnitTestsByTestRun(testRun1));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVaZK9zqEeaMeaEvRdRzBA" name="testFailedGetUnitTestsByTestRun" specification="_ROqQ5NzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testedClass.getUnitTestsByTestRun(new TestRun(&quot;fail01&quot;, &quot;FailRun&quot;));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAMNzqEeaMeaEvRdRzBA" name="testFailedGetFailurePercentageByTestRun" specification="_ROq38NzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertEquals(-1.0, testedClass.getFailurePercentageByTestrun(new TestRun(&quot;fail01&quot;, &quot;FailRun&quot;)), 0.01);
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_ROmmgNzqEeaMeaEvRdRzBA" name="setUpBeforeClass" isStatic="true" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROmmhNzqEeaMeaEvRdRzBA" name="tearDownAfterClass" isStatic="true" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROnNk9zqEeaMeaEvRdRzBA" name="setUp" method="_RVaZINzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROnNl9zqEeaMeaEvRdRzBA" name="tearDown" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROn0o9zqEeaMeaEvRdRzBA" name="testFailurePercentage50" method="_RVaZIdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROn0p9zqEeaMeaEvRdRzBA" name="testFailurePercentage33" method="_RVaZItzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROobs9zqEeaMeaEvRdRzBA" name="testFailurePercentage66" method="_RVaZI9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROobt9zqEeaMeaEvRdRzBA" name="testFailurePercentage0" method="_RVaZJNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROpCwtzqEeaMeaEvRdRzBA" name="testGetClassnameOfTestMe" method="_RVaZJdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROpCxtzqEeaMeaEvRdRzBA" name="testSetClassnameToNewTestMe" method="_RVaZJtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROpCytzqEeaMeaEvRdRzBA" name="testAddNewUnitTestToClassLog" method="_RVaZJ9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROpp09zqEeaMeaEvRdRzBA" name="testAddExistingUnitTestToClassLog" method="_RVaZKNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROpp19zqEeaMeaEvRdRzBA" name="testGetFailurePercentageByTestRun" method="_RVaZKdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROqQ4NzqEeaMeaEvRdRzBA" name="testGetUnitTestsByTestRun" method="_RVaZKtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROqQ5NzqEeaMeaEvRdRzBA" name="testFailedGetUnitTestsByTestRun" method="_RVaZK9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROq38NzqEeaMeaEvRdRzBA" name="testFailedGetFailurePercentageByTestRun" method="_RVbAMNzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ROstINzqEeaMeaEvRdRzBA" name="AllTests">
      <eAnnotations xmi:id="_ROstIdzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_ROstItzqEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_ROstI9zqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ROtUNtzqEeaMeaEvRdRzBA" name="CountersTests">
      <eAnnotations xmi:id="_ROt7QNzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_ROt7QdzqEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_ROt7QtzqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_RU_iY9zqEeaMeaEvRdRzBA" name="counters" visibility="private" type="_RNU0IdzqEeaMeaEvRdRzBA" association="_RV_A59zqEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAMdzqEeaMeaEvRdRzBA" name="setUp" specification="_ROt7Q9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>counters = new Counters(&quot;testSumAborted&quot;, &quot;testSumCompleted&quot;, &quot;testSumDisconnected&quot;, &quot;testSumError&quot;, &quot;testSumExecuted&quot;, &#xD;
				&quot;testSumFailed&quot;, &quot;testSumInProgress&quot;, &quot;testSumInconclusive&quot;, &quot;testSumNotExecuted&quot;, &quot;testSumNotRunnable&quot;,&#xD;
				&quot;testSumPassed&quot;, &quot;testSumPassedButRunAborted&quot;, &quot;testSumPending&quot;, &quot;testSumTimeOut&quot;, &quot;testSumTotal&quot;, &quot;testSumWarning&quot;); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAMtzqEeaMeaEvRdRzBA" name="tearDown" specification="_ROuiUtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>counters = null; &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAM9zqEeaMeaEvRdRzBA" name="testGetSumAbortedSuccess" specification="_ROuiVtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumAborted().equals(&quot;testSumAborted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbANNzqEeaMeaEvRdRzBA" name="testSetSumAbortedSuccess" specification="_ROvJY9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumAborted = &quot;changedSumAborted&quot;; &#xD;
		counters.setSumAborted(changedSumAborted);&#xD;
		assertTrue(counters.getSumAborted().equals(changedSumAborted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbANdzqEeaMeaEvRdRzBA" name="testGetSumCompletedSuccess" specification="_ROvJZ9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumCompleted().equals(&quot;testSumCompleted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbANtzqEeaMeaEvRdRzBA" name="testSetSumCompletedSuccess" specification="_ROvwcNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumCompleted = &quot;changedSumCompleted&quot;; &#xD;
		counters.setSumCompleted(changedSumCompleted);&#xD;
		assertTrue(counters.getSumCompleted().equals(changedSumCompleted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAN9zqEeaMeaEvRdRzBA" name="testGetSumDisconnectedSuccess" specification="_ROvwdNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumDisconnected().equals(&quot;testSumDisconnected&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAONzqEeaMeaEvRdRzBA" name="testSetSumDisconnectedSuccess" specification="_ROvweNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumDisconnected = &quot;changedSumDisconnected&quot;; &#xD;
		counters.setSumDisconnected(changedSumDisconnected);&#xD;
		assertTrue(counters.getSumDisconnected().equals(changedSumDisconnected)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAOdzqEeaMeaEvRdRzBA" name="testGetSumErrorSuccess" specification="_ROwXg9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumError().equals(&quot;testSumError&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAOtzqEeaMeaEvRdRzBA" name="testSetSumErrorSuccess" specification="_ROwXh9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumError = &quot;changedSumError&quot;; &#xD;
		counters.setSumError(changedSumError);&#xD;
		assertTrue(counters.getSumError().equals(changedSumError)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAO9zqEeaMeaEvRdRzBA" name="testGetSumExecutedSuccess" specification="_ROw-ktzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumExecuted().equals(&quot;testSumExecuted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbAPNzqEeaMeaEvRdRzBA" name="testSetSumExecutedSuccess" specification="_ROw-ltzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumExecuted = &quot;changedSumExecuted&quot;; &#xD;
		counters.setSumExecuted(changedSumExecuted);&#xD;
		assertTrue(counters.getSumExecuted().equals(changedSumExecuted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnQNzqEeaMeaEvRdRzBA" name="testGetSumFailedSuccess" specification="_ROxloNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumFailed().equals(&quot;testSumFailed&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnQdzqEeaMeaEvRdRzBA" name="testSetSumFailedSuccess" specification="_ROxlpNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumFailed = &quot;changedSumFailed&quot;; &#xD;
		counters.setSumFailed(changedSumFailed);&#xD;
		assertTrue(counters.getSumFailed().equals(changedSumFailed)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnQtzqEeaMeaEvRdRzBA" name="testGetSumInProgressSuccess" specification="_ROxlqNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumInProgress().equals(&quot;testSumInProgress&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnQ9zqEeaMeaEvRdRzBA" name="testSetSumInProgressSuccess" specification="_ROyMs9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumInProgress = &quot;changedSumInProgress&quot;; &#xD;
		counters.setSumInProgress(changedSumInProgress);&#xD;
		assertTrue(counters.getSumInProgress().equals(changedSumInProgress)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnRNzqEeaMeaEvRdRzBA" name="testGetSumInconclusiveSuccess" specification="_ROyMt9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumInconclusive().equals(&quot;testSumInconclusive&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnRdzqEeaMeaEvRdRzBA" name="testSetSumInconclusiveSuccess" specification="_ROyzwNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumInconclusive = &quot;changedSumInconclusive&quot;; &#xD;
		counters.setSumInconclusive(changedSumInconclusive);&#xD;
		assertTrue(counters.getSumInconclusive().equals(changedSumInconclusive)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnRtzqEeaMeaEvRdRzBA" name="testGetSumNotExecutedSuccess" specification="_ROyzxNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumNotExecuted().equals(&quot;testSumNotExecuted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnR9zqEeaMeaEvRdRzBA" name="testSetSumNotExecutedSuccess" specification="_ROyzyNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumNotExecuted = &quot;changedSumNotExecuted&quot;; &#xD;
		counters.setSumNotExecuted(changedSumNotExecuted);&#xD;
		assertTrue(counters.getSumNotExecuted().equals(changedSumNotExecuted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnSNzqEeaMeaEvRdRzBA" name="testGetSumNotRunnableSuccess" specification="_ROza0tzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumNotRunnable().equals(&quot;testSumNotRunnable&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnSdzqEeaMeaEvRdRzBA" name="testSetSumNotRunnableSuccess" specification="_ROza1tzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumNotRunnable = &quot;changedSumNotRunnable&quot;; &#xD;
		counters.setSumNotRunnable(changedSumNotRunnable);&#xD;
		assertTrue(counters.getSumNotRunnable().equals(changedSumNotRunnable)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnStzqEeaMeaEvRdRzBA" name="testGetSumPassedSuccess" specification="_ROza2tzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumPassed().equals(&quot;testSumPassed&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnS9zqEeaMeaEvRdRzBA" name="testSetSumPassedSuccess" specification="_RO0B49zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumPassed = &quot;changedSumPassed&quot;; &#xD;
		counters.setSumPassed(changedSumPassed);&#xD;
		assertTrue(counters.getSumPassed().equals(changedSumPassed)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnTNzqEeaMeaEvRdRzBA" name="testGetSumPassedButRunAbortedSuccess" specification="_RO0B59zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumPassedButRunAborted().equals(&quot;testSumPassedButRunAborted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVbnTdzqEeaMeaEvRdRzBA" name="testSetSumPassedButRunAbortedSuccess" specification="_RO0o89zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumPassedButRunAborted = &quot;changedSumPassedButRunAborted&quot;; &#xD;
		counters.setSumPassedButRunAborted(changedSumPassedButRunAborted);&#xD;
		assertTrue(counters.getSumPassedButRunAborted().equals(changedSumPassedButRunAborted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOUNzqEeaMeaEvRdRzBA" name="testGetSumPendingSuccess" specification="_RO0o99zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumPending().equals(&quot;testSumPending&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOUdzqEeaMeaEvRdRzBA" name="testSetSumPendingSuccess" specification="_RO1QAtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumPending = &quot;changedSumPending&quot;; &#xD;
		counters.setSumPending(changedSumPending);&#xD;
		assertTrue(counters.getSumPending().equals(changedSumPending)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOUtzqEeaMeaEvRdRzBA" name="testGetSumTimeOutSuccess" specification="_RO1QBtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumTimeOut().equals(&quot;testSumTimeOut&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOU9zqEeaMeaEvRdRzBA" name="testSetSumTimeOutSuccess" specification="_RO1QCtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumTimeOut = &quot;changedSumTimeOut&quot;; &#xD;
		counters.setSumTimeOut(changedSumTimeOut);&#xD;
		assertTrue(counters.getSumTimeOut().equals(changedSumTimeOut)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOVNzqEeaMeaEvRdRzBA" name="testGetSumTotalSuccess" specification="_RO13E9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumTotal().equals(&quot;testSumTotal&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOVdzqEeaMeaEvRdRzBA" name="testSetSumTotalSuccess" specification="_RO13F9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumTotal = &quot;changedSumTotal&quot;; &#xD;
		counters.setSumTotal(changedSumTotal);&#xD;
		assertTrue(counters.getSumTotal().equals(changedSumTotal)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOVtzqEeaMeaEvRdRzBA" name="testGetSumWarningSuccess" specification="_RO2eIdzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumWarning().equals(&quot;testSumWarning&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOV9zqEeaMeaEvRdRzBA" name="testSetSumWarningSuccess" specification="_RO2eJdzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumWarning = &quot;changedSumWarning&quot;; &#xD;
		counters.setSumWarning(changedSumWarning);&#xD;
		assertTrue(counters.getSumWarning().equals(changedSumWarning)); &#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_ROt7Q9zqEeaMeaEvRdRzBA" name="setUp" method="_RVbAMdzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROuiUtzqEeaMeaEvRdRzBA" name="tearDown" method="_RVbAMtzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROuiVtzqEeaMeaEvRdRzBA" name="testGetSumAbortedSuccess" method="_RVbAM9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROvJY9zqEeaMeaEvRdRzBA" name="testSetSumAbortedSuccess" method="_RVbANNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROvJZ9zqEeaMeaEvRdRzBA" name="testGetSumCompletedSuccess" method="_RVbANdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROvwcNzqEeaMeaEvRdRzBA" name="testSetSumCompletedSuccess" method="_RVbANtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROvwdNzqEeaMeaEvRdRzBA" name="testGetSumDisconnectedSuccess" method="_RVbAN9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROvweNzqEeaMeaEvRdRzBA" name="testSetSumDisconnectedSuccess" method="_RVbAONzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROwXg9zqEeaMeaEvRdRzBA" name="testGetSumErrorSuccess" method="_RVbAOdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROwXh9zqEeaMeaEvRdRzBA" name="testSetSumErrorSuccess" method="_RVbAOtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROw-ktzqEeaMeaEvRdRzBA" name="testGetSumExecutedSuccess" method="_RVbAO9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROw-ltzqEeaMeaEvRdRzBA" name="testSetSumExecutedSuccess" method="_RVbAPNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROxloNzqEeaMeaEvRdRzBA" name="testGetSumFailedSuccess" method="_RVbnQNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROxlpNzqEeaMeaEvRdRzBA" name="testSetSumFailedSuccess" method="_RVbnQdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROxlqNzqEeaMeaEvRdRzBA" name="testGetSumInProgressSuccess" method="_RVbnQtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROyMs9zqEeaMeaEvRdRzBA" name="testSetSumInProgressSuccess" method="_RVbnQ9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROyMt9zqEeaMeaEvRdRzBA" name="testGetSumInconclusiveSuccess" method="_RVbnRNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROyzwNzqEeaMeaEvRdRzBA" name="testSetSumInconclusiveSuccess" method="_RVbnRdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROyzxNzqEeaMeaEvRdRzBA" name="testGetSumNotExecutedSuccess" method="_RVbnRtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROyzyNzqEeaMeaEvRdRzBA" name="testSetSumNotExecutedSuccess" method="_RVbnR9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROza0tzqEeaMeaEvRdRzBA" name="testGetSumNotRunnableSuccess" method="_RVbnSNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROza1tzqEeaMeaEvRdRzBA" name="testSetSumNotRunnableSuccess" method="_RVbnSdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_ROza2tzqEeaMeaEvRdRzBA" name="testGetSumPassedSuccess" method="_RVbnStzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO0B49zqEeaMeaEvRdRzBA" name="testSetSumPassedSuccess" method="_RVbnS9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO0B59zqEeaMeaEvRdRzBA" name="testGetSumPassedButRunAbortedSuccess" method="_RVbnTNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO0o89zqEeaMeaEvRdRzBA" name="testSetSumPassedButRunAbortedSuccess" method="_RVbnTdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO0o99zqEeaMeaEvRdRzBA" name="testGetSumPendingSuccess" method="_RVcOUNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO1QAtzqEeaMeaEvRdRzBA" name="testSetSumPendingSuccess" method="_RVcOUdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO1QBtzqEeaMeaEvRdRzBA" name="testGetSumTimeOutSuccess" method="_RVcOUtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO1QCtzqEeaMeaEvRdRzBA" name="testSetSumTimeOutSuccess" method="_RVcOU9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO13E9zqEeaMeaEvRdRzBA" name="testGetSumTotalSuccess" method="_RVcOVNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO13F9zqEeaMeaEvRdRzBA" name="testSetSumTotalSuccess" method="_RVcOVdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO2eIdzqEeaMeaEvRdRzBA" name="testGetSumWarningSuccess" method="_RVcOVtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO2eJdzqEeaMeaEvRdRzBA" name="testSetSumWarningSuccess" method="_RVcOV9zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RO3sQNzqEeaMeaEvRdRzBA" name="TestDataTests">
      <eAnnotations xmi:id="_RO4TUNzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_RO4TUdzqEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_RO4TUtzqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_RVAJcNzqEeaMeaEvRdRzBA" name="testData" visibility="private" type="_RNlS0NzqEeaMeaEvRdRzBA" association="_RV_n8dzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVAJctzqEeaMeaEvRdRzBA" name="testRun1" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RV_n9NzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVAJdNzqEeaMeaEvRdRzBA" name="testRun2" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RV_n99zqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVAwgdzqEeaMeaEvRdRzBA" name="unitTests" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RWAPAdzqEeaMeaEvRdRzBA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVAwgtzqEeaMeaEvRdRzBA" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_RVAwhNzqEeaMeaEvRdRzBA" value="new UnitTest[10]"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RVAwhtzqEeaMeaEvRdRzBA" name="testedClass1" visibility="private" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RWAPBNzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVAwiNzqEeaMeaEvRdRzBA" name="testedClass2" visibility="private" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RWAPB9zqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVBXkNzqEeaMeaEvRdRzBA" name="testedClass3" visibility="private" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RWA2EdzqEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOWNzqEeaMeaEvRdRzBA" name="setUp" specification="_RO5hctzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData = TestData.getInstance(); 
		
		testRun1 = new TestRun(&quot;Run1&quot;, &quot;run-name-1&quot;);
		testRun2 = new TestRun(&quot;Run2&quot;, &quot;run-name-2&quot;);
		
		int half = unitTests.length/2;
		
		for (int i = 0; i &lt; half; i++) {
			unitTests[i] = new UnitTest(testRun1, &quot;test&quot;+i, &quot;fooTest&quot;+i, &quot;Run1fooTest&quot;+i, &quot;testFooBar&quot;);
		}
		
		for (int i = half; i &lt; unitTests.length; i++) {
			unitTests[i] = new UnitTest(testRun2, &quot;test&quot;+i, &quot;fooTest&quot;+i, &quot;Run2fooTest&quot;+i, &quot;testFooBar&quot;);
		}
		
		testedClass1 = new TestedClass(&quot;TestMe&quot;, unitTests[0]);
		testedClass2 = new TestedClass(&quot;TestMe&quot;, unitTests[1]); 
		testedClass3 = new TestedClass(&quot;Test3&quot;, unitTests[2]);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOWdzqEeaMeaEvRdRzBA" name="tearDown" specification="_RO5hdtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.getTestRunList().clear();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOWtzqEeaMeaEvRdRzBA" name="testAddNewTestRunSuccess" specification="_RO6Ig9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestRun(testRun1);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		assertTrue(testData.getTestRunList().contains(testRun1)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVcOW9zqEeaMeaEvRdRzBA" name="testAddNewTestRunToAlreadyExistingTestRunListSuccess" specification="_RO6Ih9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestRun(testRun1);
			testData.addNewTestRun(testRun2);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		assertTrue(testData.getTestRunList().contains(testRun2) &amp;&amp; testData.getTestRunList().contains(testRun1)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1YNzqEeaMeaEvRdRzBA" name="testAddNewTestRunFail" specification="_RO6vk9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewTestRun(testRun1);
			testData.addNewTestRun(testRun1);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1YdzqEeaMeaEvRdRzBA" name="testAddNewTestRunToAlreadyExistingTestRunListFail" specification="_RO6vmNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewTestRun(testRun1);
			testData.addNewTestRun(testRun2);
			testData.addNewTestRun(testRun2);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1YtzqEeaMeaEvRdRzBA" name="testAddNewTestedClassSuccess" specification="_RO7WpNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewTestedClassToTree(testedClass1); 
		
		assertTrue(testData.getClassByName(&quot;testedClass1&quot;).equals(testedClass1)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1Y9zqEeaMeaEvRdRzBA" name="testAddNewTestedClassToAlreadyExistingTestedClassListSuccess" specification="_RO7WqNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestedClassToTree(testedClass1); 
			testData.addNewTestedClassToTree(testedClass3); 
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		assertTrue(testData.getClassByName(&quot;testedClass3&quot;).equals(testedClass3) &amp;&amp; 
				testData.getClassByName(&quot;testedClass1&quot;).equals(testedClass1)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1ZNzqEeaMeaEvRdRzBA" name="testAddNewTestedClassExistingClass" specification="_RO79s9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestedClassToTree(testedClass1); 
			testData.addNewTestedClassToTree(testedClass2); 
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		assertTrue((testData.getClassByName(&quot;testedClass1&quot;).getClassLog().get(0).getUnitTestList().get(0).equals(unitTests[0])) &amp;&amp; 
				(testData.getClassByName(&quot;testedClass2&quot;).getClassLog().get(0).getUnitTestList().get(1).equals(unitTests[1]))); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1ZdzqEeaMeaEvRdRzBA" name="testAddNewUnitTest" specification="_RO79t9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewUnitTest(unitTests[0]);
		
		assertTrue(testData.getUnitTestList().contains(unitTests[0])); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1ZtzqEeaMeaEvRdRzBA" name="testGetTestRunByIDSuccess" specification="_RO8kwNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestRun(testRun1);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
		TestRun addedTestRun = testData.getTestRunByID(&quot;Run1&quot;); 
		
		assertTrue(addedTestRun == testRun1); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1Z9zqEeaMeaEvRdRzBA" name="testGetTestRunByIDFail" specification="_RO8kxNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestRun(testRun1);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
		TestRun addedTestRun = testData.getTestRunByID(&quot;Run2&quot;); 
		
		assertTrue(addedTestRun == null); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1aNzqEeaMeaEvRdRzBA" name="testGetClassByName" specification="_RO8kyNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewTestedClassToTree(testedClass1); 
		
		TestedClass addedClass = testData.getClassByName(&quot;TestMe&quot;); 
		
		assertTrue(addedClass.equals(testedClass1)); 

	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_RO46YNzqEeaMeaEvRdRzBA" name="setUpBeforeClass" isStatic="true" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO46ZNzqEeaMeaEvRdRzBA" name="tearDownAfterClass" isStatic="true" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO5hctzqEeaMeaEvRdRzBA" name="setUp" method="_RVcOWNzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO5hdtzqEeaMeaEvRdRzBA" name="tearDown" method="_RVcOWdzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO6Ig9zqEeaMeaEvRdRzBA" name="testAddNewTestRunSuccess" method="_RVcOWtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO6Ih9zqEeaMeaEvRdRzBA" name="testAddNewTestRunToAlreadyExistingTestRunListSuccess" method="_RVcOW9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO6vk9zqEeaMeaEvRdRzBA" name="testAddNewTestRunFail" method="_RVc1YNzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO6vmNzqEeaMeaEvRdRzBA" name="testAddNewTestRunToAlreadyExistingTestRunListFail" method="_RVc1YdzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO7WpNzqEeaMeaEvRdRzBA" name="testAddNewTestedClassSuccess" method="_RVc1YtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO7WqNzqEeaMeaEvRdRzBA" name="testAddNewTestedClassToAlreadyExistingTestedClassListSuccess" method="_RVc1Y9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO79s9zqEeaMeaEvRdRzBA" name="testAddNewTestedClassExistingClass" method="_RVc1ZNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO79t9zqEeaMeaEvRdRzBA" name="testAddNewUnitTest" method="_RVc1ZdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO8kwNzqEeaMeaEvRdRzBA" name="testGetTestRunByIDSuccess" method="_RVc1ZtzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO8kxNzqEeaMeaEvRdRzBA" name="testGetTestRunByIDFail" method="_RVc1Z9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RO8kyNzqEeaMeaEvRdRzBA" name="testGetClassByName" method="_RVc1aNzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RO_BANzqEeaMeaEvRdRzBA" name="TestRunStartTimeTests">
      <eAnnotations xmi:id="_RO_BAdzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_RO_BAtzqEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_RO_BA9zqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_RVBXktzqEeaMeaEvRdRzBA" name="time1" visibility="private" type="_RNt1sNzqEeaMeaEvRdRzBA" association="_RWA2FNzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVBXlNzqEeaMeaEvRdRzBA" name="time2" visibility="private" type="_RNt1sNzqEeaMeaEvRdRzBA" association="_RWA2F9zqEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1adzqEeaMeaEvRdRzBA" name="setUp" specification="_RO_oENzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>time1 = new TestRunStartTime(2017, 1, 12, 19, 5, 23); 
		time2 = new TestRunStartTime(2017, 1, 12, 19, 5, 25); 		 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1atzqEeaMeaEvRdRzBA" name="tearDown" specification="_RPAPINzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>time1 = null; 
		time2 = null; 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1a9zqEeaMeaEvRdRzBA" name="getYearSuccess" specification="_RPAPJNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int year = time1.getYear(); 
		assertEquals(2017, year); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVc1bNzqEeaMeaEvRdRzBA" name="getMonthSuccess" specification="_RPA2MNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int month = time1.getMonth(); 
		assertEquals(1, month); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdccNzqEeaMeaEvRdRzBA" name="getDaySuccess" specification="_RPA2NNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int day = time1.getDay(); 
		assertEquals(12, day); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdccdzqEeaMeaEvRdRzBA" name="getHourSuccess" specification="_RPA2ONzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int hour = time1.getHour(); 
		assertEquals(19, hour); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdcctzqEeaMeaEvRdRzBA" name="getMinSuccess" specification="_RPBdQ9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int minute = time1.getMin(); 
		assertEquals(5, minute); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdcc9zqEeaMeaEvRdRzBA" name="getSecSuccess" specification="_RPBdR9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int second = time1.getSec(); 
		assertEquals(second, 23); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdcdNzqEeaMeaEvRdRzBA" name="toStringSuccess" specification="_RPCEUdzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String string = time1.toString(); 
		assertTrue((&quot;TestRunStartTime &quot; + &quot;[&quot; + 2017 + &quot;-&quot; + 1 + &quot;-&quot; + 12 + &quot; &quot; + 19 + &quot;:&quot; + 5 + &quot;:&quot; + 23 + &quot;]&quot;).equals(string));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdcddzqEeaMeaEvRdRzBA" name="compareToSuccess" specification="_RPCEVdzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int comparison = time1.compareTo(time2); 
		System.out.println(comparison);
		assertEquals(1, comparison); 
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_RO_oENzqEeaMeaEvRdRzBA" name="setUp" method="_RVc1adzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPAPINzqEeaMeaEvRdRzBA" name="tearDown" method="_RVc1atzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPAPJNzqEeaMeaEvRdRzBA" name="getYearSuccess" method="_RVc1a9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPA2MNzqEeaMeaEvRdRzBA" name="getMonthSuccess" method="_RVc1bNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPA2NNzqEeaMeaEvRdRzBA" name="getDaySuccess" method="_RVdccNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPA2ONzqEeaMeaEvRdRzBA" name="getHourSuccess" method="_RVdccdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPBdQ9zqEeaMeaEvRdRzBA" name="getMinSuccess" method="_RVdcctzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPBdR9zqEeaMeaEvRdRzBA" name="getSecSuccess" method="_RVdcc9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPCEUdzqEeaMeaEvRdRzBA" name="toStringSuccess" method="_RVdcdNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPCEVdzqEeaMeaEvRdRzBA" name="compareToSuccess" method="_RVdcddzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RPDScNzqEeaMeaEvRdRzBA" name="TestRunTests">
      <eAnnotations xmi:id="_RPDScdzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_RPDSctzqEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_RPDSc9zqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_RVB-oNzqEeaMeaEvRdRzBA" name="testRun1" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RWBdIdzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVB-otzqEeaMeaEvRdRzBA" name="testRun2" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RWBdJNzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVB-pNzqEeaMeaEvRdRzBA" name="unitTests" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RWBdJ9zqEeaMeaEvRdRzBA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_RVB-pdzqEeaMeaEvRdRzBA" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_RVB-p9zqEeaMeaEvRdRzBA" value="new UnitTest[10]"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_RVClsdzqEeaMeaEvRdRzBA" name="testedClass1" visibility="private" type="_RNw5ANzqEeaMeaEvRdRzBA" association="_RWCEMdzqEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdcdtzqEeaMeaEvRdRzBA" name="setUp" specification="_RPEgk9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun1 = new TestRun(&quot;Run1&quot;, &quot;run-name-1&quot;);
		testRun2 = new TestRun(&quot;Run2&quot;, &quot;run-name-2&quot;);
		
		int half = unitTests.length/2;
		
		for (int i = 0; i &lt; half; i++) {
			unitTests[i] = new UnitTest(testRun1, &quot;test&quot;+i, &quot;fooTest&quot;+i, &quot;Run1fooTest&quot;+i, &quot;testFooBar&quot;);
		}
		
		for (int i = half; i &lt; unitTests.length; i++) {
			unitTests[i] = new UnitTest(testRun2, &quot;test&quot;+i, &quot;fooTest&quot;+i, &quot;Run2fooTest&quot;+i, &quot;testFooBar&quot;);
		}
		
		testedClass1 = new TestedClass(&quot;TestMe&quot;, unitTests[0]);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdcd9zqEeaMeaEvRdRzBA" name="testAddNewTestedClassToTestRun" specification="_RPFHo9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;TestedClass> testedClasses = testRun1.getTestedClasses();
		testRun1.addTestedClassToTestRun(testedClass1);
		testedClasses.add(testedClass1);
		
		assertEquals(testedClasses, testRun1.getTestedClasses());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdceNzqEeaMeaEvRdRzBA" name="testAddExistingTestedClassToTestRun" specification="_RPFHp9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun1.addTestedClassToTestRun(testedClass1);
		List&lt;TestedClass> testedClasses = testRun1.getTestedClasses();
		
		// Adding class the second time should have no effect
		testRun1.addTestedClassToTestRun(testedClass1);
		
		assertEquals(testedClasses, testRun1.getTestedClasses());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdcedzqEeaMeaEvRdRzBA" name="testEqualsSameTestRuns" specification="_RPFus9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(testRun1.equals(testRun1));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdcetzqEeaMeaEvRdRzBA" name="testEqualsSameTestID" specification="_RPFut9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun testRun3 = new TestRun(&quot;Run1&quot;, &quot;run-name-2&quot;);
		assertTrue(testRun1.equals(testRun3));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVdce9zqEeaMeaEvRdRzBA" name="testEqualsDifferentTestRuns" specification="_RPGVwNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertFalse(testRun1.equals(testRun2));
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_RPD5gNzqEeaMeaEvRdRzBA" name="setUpBeforeClass" isStatic="true" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPD5hNzqEeaMeaEvRdRzBA" name="tearDownAfterClass" isStatic="true" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPEgk9zqEeaMeaEvRdRzBA" name="setUp" method="_RVdcdtzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPEgl9zqEeaMeaEvRdRzBA" name="tearDown" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPFHo9zqEeaMeaEvRdRzBA" name="testAddNewTestedClassToTestRun" method="_RVdcd9zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPFHp9zqEeaMeaEvRdRzBA" name="testAddExistingTestedClassToTestRun" method="_RVdceNzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPFus9zqEeaMeaEvRdRzBA" name="testEqualsSameTestRuns" method="_RVdcedzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPFut9zqEeaMeaEvRdRzBA" name="testEqualsSameTestID" method="_RVdcetzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPGVwNzqEeaMeaEvRdRzBA" name="testEqualsDifferentTestRuns" method="_RVdce9zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RPcUANzqEeaMeaEvRdRzBA" name="UnitTestTests">
      <eAnnotations xmi:id="_RPcUAdzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_RPcUAtzqEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_RPcUA9zqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_RVIFQNzqEeaMeaEvRdRzBA" name="unitTest" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RWG8s9zqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVIFQtzqEeaMeaEvRdRzBA" name="testRun" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RWG8ttzqEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG0NzqEeaMeaEvRdRzBA" name="setUp" specification="_RPcUBNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun = new TestRun(&quot;testRunID&quot;, &quot;testRunName&quot;); &#xD;
		unitTest = new UnitTest(testRun, &quot;testID&quot;, &quot;testName&quot;, &quot;testExecutionID&quot;, &quot;testMethodName&quot;);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG0dzqEeaMeaEvRdRzBA" name="tearDown" specification="_RPc7E9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun = null; &#xD;
		unitTest = null; &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG0tzqEeaMeaEvRdRzBA" name="getUnitTestIDSuccess" specification="_RPdiIdzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String testID = unitTest.getUnitTestID(); &#xD;
		assertEquals(testID, &quot;testID&quot;); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG09zqEeaMeaEvRdRzBA" name="setUnitTestIDSuccess" specification="_RPdiJdzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String newTestID = &quot;newTestID&quot;; &#xD;
		unitTest.setUnitTestID(newTestID);&#xD;
		String changedTestID = unitTest.getUnitTestID(); &#xD;
		assertEquals(changedTestID, newTestID); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG1NzqEeaMeaEvRdRzBA" name="getUnitTestNameSuccess" specification="_RPeJMtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String testName = unitTest.getUnitTestName(); &#xD;
		assertEquals(testName, &quot;testName&quot;); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG1dzqEeaMeaEvRdRzBA" name="setUnitTestNameSuccess" specification="_RPeJNtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String newTestName = &quot;newTestName&quot;; &#xD;
		unitTest.setUnitTestName(newTestName);&#xD;
		String changedTestName = unitTest.getUnitTestName(); &#xD;
		assertEquals(newTestName, changedTestName); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG1tzqEeaMeaEvRdRzBA" name="getUnitTestExecutionIDSuccess" specification="_RPewQtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String testExecutionID = unitTest.getUnitTestExecutionID(); &#xD;
		assertEquals(&quot;testExecutionID&quot;, testExecutionID); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG19zqEeaMeaEvRdRzBA" name="setUnitTestExecutionIDSuccess" specification="_RPewRtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String newTestExecutionID = &quot;newTestExecutionID&quot;; &#xD;
		unitTest.setUnitTestExecutionID(newTestExecutionID);&#xD;
		String changedTestExecutionID = unitTest.getUnitTestExecutionID(); &#xD;
		assertEquals(newTestExecutionID, changedTestExecutionID); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG2NzqEeaMeaEvRdRzBA" name="getTestMethodNameSuccess" specification="_RPewStzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String testMethodName = unitTest.getTestMethodName(); &#xD;
		assertEquals(testMethodName, &quot;testMethodName&quot;); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG2dzqEeaMeaEvRdRzBA" name="setTestMethodNameSuccess" specification="_RPfXU9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String newTestMethodName = &quot;newTestMethodName&quot;; &#xD;
		unitTest.setTestMethodName(newTestMethodName);&#xD;
		String changedTestMethodName = unitTest.getTestMethodName(); &#xD;
		assertEquals(newTestMethodName, changedTestMethodName); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG2tzqEeaMeaEvRdRzBA" name="getTestRunSuccess" specification="_RPfXV9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun unitTestTestRun = unitTest.getTestRun(); &#xD;
		assertTrue(unitTestTestRun.equals(testRun)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG29zqEeaMeaEvRdRzBA" name="setTestRunSuccess" specification="_RPf-Y9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun newTestRun = new TestRun(&quot;newTestRunID&quot;, &quot;newTestRunName&quot;);&#xD;
		unitTest.setTestRun(newTestRun);&#xD;
		TestRun changedTestRun = unitTest.getTestRun(); &#xD;
		assertTrue(newTestRun.equals(changedTestRun)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG3NzqEeaMeaEvRdRzBA" name="getSetTestedClassSuccess" specification="_RPf-Z9zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestedClass testedClass = new TestedClass(&quot;testedClass&quot;, unitTest); &#xD;
		unitTest.setTestedClass(testedClass); &#xD;
		TestedClass settedTestedClass = unitTest.getTestedClass(); &#xD;
		assertTrue(testedClass.equals(settedTestedClass)); &#xD;
		&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVhG3dzqEeaMeaEvRdRzBA" name="hasPassedsetOutcomePassedSuccess" specification="_RPglcNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest.setOutcome(&quot;Passed&quot;);&#xD;
		boolean outcome = unitTest.hasPassed(); &#xD;
		assertTrue(outcome); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht4NzqEeaMeaEvRdRzBA" name="hasPassedSetOutcomeFailedSuccess" specification="_RPgldNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest.setOutcome(&quot;Failed&quot;);&#xD;
		boolean outcome = unitTest.hasPassed(); &#xD;
		assertFalse(outcome); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht4dzqEeaMeaEvRdRzBA" name="toStringWithOutcomePassedSuccess" specification="_RPgleNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest.setOutcome(&quot;Passed&quot;);&#xD;
		String string = unitTest.toString(); &#xD;
		assertEquals((&quot;UnitTest [unitTestID=&quot; + &quot;testID&quot; + &quot;, unitTestName=&quot; + &quot;testName&quot; + &quot;, outcome=&quot; + true + &quot;]&quot;), string);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht4tzqEeaMeaEvRdRzBA" name="toStringWithOutcomeFailedSuccess" specification="_RPhMgtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest.setOutcome(&quot;Failed&quot;);&#xD;
		String string = unitTest.toString(); &#xD;
		assertEquals((&quot;UnitTest [unitTestID=&quot; + &quot;testID&quot; + &quot;, unitTestName=&quot; + &quot;testName&quot; + &quot;, outcome=&quot; + false + &quot;]&quot;), string);&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_RPcUBNzqEeaMeaEvRdRzBA" name="setUp" method="_RVhG0NzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPc7E9zqEeaMeaEvRdRzBA" name="tearDown" method="_RVhG0dzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPdiIdzqEeaMeaEvRdRzBA" name="getUnitTestIDSuccess" method="_RVhG0tzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPdiJdzqEeaMeaEvRdRzBA" name="setUnitTestIDSuccess" method="_RVhG09zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPeJMtzqEeaMeaEvRdRzBA" name="getUnitTestNameSuccess" method="_RVhG1NzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPeJNtzqEeaMeaEvRdRzBA" name="setUnitTestNameSuccess" method="_RVhG1dzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPewQtzqEeaMeaEvRdRzBA" name="getUnitTestExecutionIDSuccess" method="_RVhG1tzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPewRtzqEeaMeaEvRdRzBA" name="setUnitTestExecutionIDSuccess" method="_RVhG19zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPewStzqEeaMeaEvRdRzBA" name="getTestMethodNameSuccess" method="_RVhG2NzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPfXU9zqEeaMeaEvRdRzBA" name="setTestMethodNameSuccess" method="_RVhG2dzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPfXV9zqEeaMeaEvRdRzBA" name="getTestRunSuccess" method="_RVhG2tzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPf-Y9zqEeaMeaEvRdRzBA" name="setTestRunSuccess" method="_RVhG29zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPf-Z9zqEeaMeaEvRdRzBA" name="getSetTestedClassSuccess" method="_RVhG3NzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPglcNzqEeaMeaEvRdRzBA" name="hasPassedsetOutcomePassedSuccess" method="_RVhG3dzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPgldNzqEeaMeaEvRdRzBA" name="hasPassedSetOutcomeFailedSuccess" method="_RVht4NzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPgleNzqEeaMeaEvRdRzBA" name="toStringWithOutcomePassedSuccess" method="_RVht4dzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPhMgtzqEeaMeaEvRdRzBA" name="toStringWithOutcomeFailedSuccess" method="_RVht4tzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RPiaoNzqEeaMeaEvRdRzBA" name="UnitTestsToTestRunMapperTests">
      <eAnnotations xmi:id="_RPiaodzqEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_RPiaotzqEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_RPiao9zqEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_RVIsUNzqEeaMeaEvRdRzBA" name="mapper" visibility="private" type="_RN-7cNzqEeaMeaEvRdRzBA" association="_RWHjwNzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVIsUtzqEeaMeaEvRdRzBA" name="unitTest1" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RWHjw9zqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVIsVNzqEeaMeaEvRdRzBA" name="unitTest2" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RWHjxtzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVIsVtzqEeaMeaEvRdRzBA" name="unitTest3" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RWHjydzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVJTYdzqEeaMeaEvRdRzBA" name="unitTest4" visibility="private" type="_RN74INzqEeaMeaEvRdRzBA" association="_RWIK0dzqEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_RVJTY9zqEeaMeaEvRdRzBA" name="testRun" visibility="private" type="_RNqLUNzqEeaMeaEvRdRzBA" association="_RWIK1NzqEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht49zqEeaMeaEvRdRzBA" name="setUp" specification="_RPjBsNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun = new TestRun(&quot;testRunID&quot;, &quot;testRunName&quot;); 
		unitTest1 = new UnitTest(testRun, &quot;testID1&quot;, &quot;testName1&quot;, &quot;testExecutionID1&quot;, &quot;testMethodName1&quot;);
		unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2 = new UnitTest(testRun, &quot;testID2&quot;, &quot;testName2&quot;, &quot;testExecutionID2&quot;, &quot;testMethodName2&quot;);
		unitTest2.setOutcome(&quot;Failed&quot;);
		unitTest3 = new UnitTest(testRun, &quot;testID3&quot;, &quot;testName3&quot;, &quot;testExecutionID3&quot;, &quot;testMethodName3&quot;);
		unitTest3.setOutcome(&quot;Passed&quot;);
		unitTest4 = new UnitTest(testRun, &quot;testID4&quot;, &quot;testName4&quot;, &quot;testExecutionID4&quot;, &quot;testMethodName4&quot;);
		unitTest4.setOutcome(&quot;Failed&quot;);
		mapper = new UnitTestsToTestRunMapper(unitTest1); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht5NzqEeaMeaEvRdRzBA" name="tearDown" specification="_RPjBtNzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>mapper = null; 
		testRun = null; 
		unitTest1 = null;
		unitTest2 = null;
		unitTest3 = null;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht5dzqEeaMeaEvRdRzBA" name="addUnitTestToTestRunSuccess" specification="_RPjowtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>mapper.addUnitTestToTestRun(unitTest2);
		List&lt;UnitTest> compareList = new ArrayList&lt;>();
		compareList.add(unitTest1); 
		compareList.add(unitTest2); 
		assertTrue(mapper.getUnitTestList().equals(compareList)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht5tzqEeaMeaEvRdRzBA" name="getFailurePercentageSuccess" specification="_RPjoxtzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>mapper.addUnitTestToTestRun(unitTest2);
		mapper.addUnitTestToTestRun(unitTest3);
		mapper.addUnitTestToTestRun(unitTest4);
		double fp = mapper.getFailurePercentage(); 
		assertEquals(fp, 50.00, 0.0); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht59zqEeaMeaEvRdRzBA" name="getUnitTestListSuccess" specification="_RPkP0dzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> compareList = new ArrayList&lt;>();
		compareList.add(unitTest1); 
		assertTrue(mapper.getUnitTestList().equals(compareList)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht6NzqEeaMeaEvRdRzBA" name="getTestRunSuccess" specification="_RPkP1dzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun compareTestRun = mapper.getTestRun(); 
		assertTrue(compareTestRun.equals(testRun)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht6dzqEeaMeaEvRdRzBA" name="setTestRunSuccess" specification="_RPkP2dzqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun newTestRun = new TestRun(&quot;newRunID&quot;, &quot;newRunName&quot;);
		mapper.setTestRun(newTestRun);
		assertTrue(mapper.getTestRun().equals(newTestRun)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht6tzqEeaMeaEvRdRzBA" name="setUnitTestListSuccess" specification="_RPk249zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> newList = new ArrayList&lt;>();
		newList.add(unitTest2); 
		newList.add(unitTest3); 
		mapper.setUnitTestList(newList);
		assertTrue(mapper.getUnitTestList().equals(newList)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_RVht69zqEeaMeaEvRdRzBA" name="toStringSuccess" specification="_RPk259zqEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String string = mapper.toString(); 
		System.out.println(string);
		assertEquals((&quot;Mapper [testRun=&quot; + &quot;testRunID&quot; + &quot;, unitTestList=&quot; + 
				&quot;[UnitTest [unitTestID=testID1, unitTestName=testName1, outcome=true]]&quot; + 
				&quot;, failurePercentage=&quot; + &quot;0.0&quot; + &quot;]&quot;), string);
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_RPjBsNzqEeaMeaEvRdRzBA" name="setUp" method="_RVht49zqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPjBtNzqEeaMeaEvRdRzBA" name="tearDown" method="_RVht5NzqEeaMeaEvRdRzBA" raisedException="_RT9AkdzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPjowtzqEeaMeaEvRdRzBA" name="addUnitTestToTestRunSuccess" method="_RVht5dzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPjoxtzqEeaMeaEvRdRzBA" name="getFailurePercentageSuccess" method="_RVht5tzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPkP0dzqEeaMeaEvRdRzBA" name="getUnitTestListSuccess" method="_RVht59zqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPkP1dzqEeaMeaEvRdRzBA" name="getTestRunSuccess" method="_RVht6NzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPkP2dzqEeaMeaEvRdRzBA" name="setTestRunSuccess" method="_RVht6dzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPk249zqEeaMeaEvRdRzBA" name="setUnitTestListSuccess" method="_RVht6tzqEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_RPk259zqEeaMeaEvRdRzBA" name="toStringSuccess" method="_RVht69zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV1P59zqEeaMeaEvRdRzBA" name="" memberEnd="_RV1P6NzqEeaMeaEvRdRzBA _RUyuENzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV1P6NzqEeaMeaEvRdRzBA" name="" type="_ROBXsNzqEeaMeaEvRdRzBA" association="_RV1P59zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV128dzqEeaMeaEvRdRzBA" name="" memberEnd="_RV128tzqEeaMeaEvRdRzBA _RUyuEtzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV128tzqEeaMeaEvRdRzBA" name="" type="_ROBXsNzqEeaMeaEvRdRzBA" association="_RV128dzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV129NzqEeaMeaEvRdRzBA" name="" memberEnd="_RV129dzqEeaMeaEvRdRzBA _RUyuFNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV129dzqEeaMeaEvRdRzBA" name="" type="_ROBXsNzqEeaMeaEvRdRzBA" association="_RV129NzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV1299zqEeaMeaEvRdRzBA" name="" memberEnd="_RV12-NzqEeaMeaEvRdRzBA _RUzVI9zqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV12-NzqEeaMeaEvRdRzBA" name="" type="_ROBXsNzqEeaMeaEvRdRzBA" association="_RV1299zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV2eAdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV2eAtzqEeaMeaEvRdRzBA _RUzVJtzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV2eAtzqEeaMeaEvRdRzBA" name="" type="_ROBXsNzqEeaMeaEvRdRzBA" association="_RV2eAdzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV2eBNzqEeaMeaEvRdRzBA" name="" memberEnd="_RV2eBdzqEeaMeaEvRdRzBA _RUzVKNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV2eBdzqEeaMeaEvRdRzBA" name="" type="_ROBXsNzqEeaMeaEvRdRzBA" association="_RV2eBNzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV9yxdzqEeaMeaEvRdRzBA" name="" memberEnd="_RV9yxtzqEeaMeaEvRdRzBA _RU-URNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV9yxtzqEeaMeaEvRdRzBA" name="" type="_ROl_cNzqEeaMeaEvRdRzBA" association="_RV9yxdzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV-Z0NzqEeaMeaEvRdRzBA" name="" memberEnd="_RV-Z0dzqEeaMeaEvRdRzBA _RU-7UdzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV-Z0dzqEeaMeaEvRdRzBA" name="" type="_ROl_cNzqEeaMeaEvRdRzBA" association="_RV-Z0NzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV-Z09zqEeaMeaEvRdRzBA" name="" memberEnd="_RV-Z1NzqEeaMeaEvRdRzBA _RU-7U9zqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV-Z1NzqEeaMeaEvRdRzBA" name="" type="_ROl_cNzqEeaMeaEvRdRzBA" association="_RV-Z09zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV-Z1tzqEeaMeaEvRdRzBA" name="" memberEnd="_RV-Z19zqEeaMeaEvRdRzBA _RU-7VdzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV-Z19zqEeaMeaEvRdRzBA" name="" type="_ROl_cNzqEeaMeaEvRdRzBA" association="_RV-Z1tzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV_A4dzqEeaMeaEvRdRzBA" name="" memberEnd="_RV_A4tzqEeaMeaEvRdRzBA _RU-7V9zqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV_A4tzqEeaMeaEvRdRzBA" name="" type="_ROl_cNzqEeaMeaEvRdRzBA" association="_RV_A4dzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV_A5NzqEeaMeaEvRdRzBA" name="" memberEnd="_RV_A5dzqEeaMeaEvRdRzBA _RU_iYdzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV_A5dzqEeaMeaEvRdRzBA" name="" type="_ROl_cNzqEeaMeaEvRdRzBA" association="_RV_A5NzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV_A59zqEeaMeaEvRdRzBA" name="" memberEnd="_RV_A6NzqEeaMeaEvRdRzBA _RU_iY9zqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV_A6NzqEeaMeaEvRdRzBA" name="" type="_ROtUNtzqEeaMeaEvRdRzBA" association="_RV_A59zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV_n8dzqEeaMeaEvRdRzBA" name="" memberEnd="_RV_n8tzqEeaMeaEvRdRzBA _RVAJcNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV_n8tzqEeaMeaEvRdRzBA" name="" type="_RO3sQNzqEeaMeaEvRdRzBA" association="_RV_n8dzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV_n9NzqEeaMeaEvRdRzBA" name="" memberEnd="_RV_n9dzqEeaMeaEvRdRzBA _RVAJctzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV_n9dzqEeaMeaEvRdRzBA" name="" type="_RO3sQNzqEeaMeaEvRdRzBA" association="_RV_n9NzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RV_n99zqEeaMeaEvRdRzBA" name="" memberEnd="_RV_n-NzqEeaMeaEvRdRzBA _RVAJdNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RV_n-NzqEeaMeaEvRdRzBA" name="" type="_RO3sQNzqEeaMeaEvRdRzBA" association="_RV_n99zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWAPAdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWAPAtzqEeaMeaEvRdRzBA _RVAwgdzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWAPAtzqEeaMeaEvRdRzBA" name="" type="_RO3sQNzqEeaMeaEvRdRzBA" association="_RWAPAdzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWAPBNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWAPBdzqEeaMeaEvRdRzBA _RVAwhtzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWAPBdzqEeaMeaEvRdRzBA" name="" type="_RO3sQNzqEeaMeaEvRdRzBA" association="_RWAPBNzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWAPB9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWAPCNzqEeaMeaEvRdRzBA _RVAwiNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWAPCNzqEeaMeaEvRdRzBA" name="" type="_RO3sQNzqEeaMeaEvRdRzBA" association="_RWAPB9zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWA2EdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWA2EtzqEeaMeaEvRdRzBA _RVBXkNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWA2EtzqEeaMeaEvRdRzBA" name="" type="_RO3sQNzqEeaMeaEvRdRzBA" association="_RWA2EdzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWA2FNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWA2FdzqEeaMeaEvRdRzBA _RVBXktzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWA2FdzqEeaMeaEvRdRzBA" name="" type="_RO_BANzqEeaMeaEvRdRzBA" association="_RWA2FNzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWA2F9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWA2GNzqEeaMeaEvRdRzBA _RVBXlNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWA2GNzqEeaMeaEvRdRzBA" name="" type="_RO_BANzqEeaMeaEvRdRzBA" association="_RWA2F9zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWBdIdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWBdItzqEeaMeaEvRdRzBA _RVB-oNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWBdItzqEeaMeaEvRdRzBA" name="" type="_RPDScNzqEeaMeaEvRdRzBA" association="_RWBdIdzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWBdJNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWBdJdzqEeaMeaEvRdRzBA _RVB-otzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWBdJdzqEeaMeaEvRdRzBA" name="" type="_RPDScNzqEeaMeaEvRdRzBA" association="_RWBdJNzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWBdJ9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWBdKNzqEeaMeaEvRdRzBA _RVB-pNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWBdKNzqEeaMeaEvRdRzBA" name="" type="_RPDScNzqEeaMeaEvRdRzBA" association="_RWBdJ9zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWCEMdzqEeaMeaEvRdRzBA" name="" memberEnd="_RWCEMtzqEeaMeaEvRdRzBA _RVClsdzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWCEMtzqEeaMeaEvRdRzBA" name="" type="_RPDScNzqEeaMeaEvRdRzBA" association="_RWCEMdzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWG8s9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWG8tNzqEeaMeaEvRdRzBA _RVIFQNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWG8tNzqEeaMeaEvRdRzBA" name="" type="_RPcUANzqEeaMeaEvRdRzBA" association="_RWG8s9zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWG8ttzqEeaMeaEvRdRzBA" name="" memberEnd="_RWG8t9zqEeaMeaEvRdRzBA _RVIFQtzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWG8t9zqEeaMeaEvRdRzBA" name="" type="_RPcUANzqEeaMeaEvRdRzBA" association="_RWG8ttzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWHjwNzqEeaMeaEvRdRzBA" name="" memberEnd="_RWHjwdzqEeaMeaEvRdRzBA _RVIsUNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWHjwdzqEeaMeaEvRdRzBA" name="" type="_RPiaoNzqEeaMeaEvRdRzBA" association="_RWHjwNzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWHjw9zqEeaMeaEvRdRzBA" name="" memberEnd="_RWHjxNzqEeaMeaEvRdRzBA _RVIsUtzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWHjxNzqEeaMeaEvRdRzBA" name="" type="_RPiaoNzqEeaMeaEvRdRzBA" association="_RWHjw9zqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWHjxtzqEeaMeaEvRdRzBA" name="" memberEnd="_RWHjx9zqEeaMeaEvRdRzBA _RVIsVNzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWHjx9zqEeaMeaEvRdRzBA" name="" type="_RPiaoNzqEeaMeaEvRdRzBA" association="_RWHjxtzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWHjydzqEeaMeaEvRdRzBA" name="" memberEnd="_RWHjytzqEeaMeaEvRdRzBA _RVIsVtzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWHjytzqEeaMeaEvRdRzBA" name="" type="_RPiaoNzqEeaMeaEvRdRzBA" association="_RWHjydzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWIK0dzqEeaMeaEvRdRzBA" name="" memberEnd="_RWIK0tzqEeaMeaEvRdRzBA _RVJTYdzqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWIK0tzqEeaMeaEvRdRzBA" name="" type="_RPiaoNzqEeaMeaEvRdRzBA" association="_RWIK0dzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_RWIK1NzqEeaMeaEvRdRzBA" name="" memberEnd="_RWIK1dzqEeaMeaEvRdRzBA _RVJTY9zqEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_RWIK1dzqEeaMeaEvRdRzBA" name="" type="_RPiaoNzqEeaMeaEvRdRzBA" association="_RWIK1NzqEeaMeaEvRdRzBA"/>
    </packagedElement>
    <profileApplication xmi:id="_Qvm9YNzqEeaMeaEvRdRzBA">
      <eAnnotations xmi:id="_Qvm9YdzqEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_Qvm9YtzqEeaMeaEvRdRzBA" base_Package="_Qoj6MNzqEeaMeaEvRdRzBA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_RNOtgtzqEeaMeaEvRdRzBA" genericsValue="TestRun" base_Element="_RNOtgNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RNmg8NzqEeaMeaEvRdRzBA" base_Element="_RNl54NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RNsAhNzqEeaMeaEvRdRzBA" base_Element="_RNsAgtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RNsAhdzqEeaMeaEvRdRzBA" base_Element="_RNsAgtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RNsnkNzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RNvq4tzqEeaMeaEvRdRzBA" base_Element="_RNvq4NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RNvq49zqEeaMeaEvRdRzBA" base_Element="_RNvq4NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RNvq5NzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RNyuMNzqEeaMeaEvRdRzBA" base_Element="_RNyHINzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RNyuMdzqEeaMeaEvRdRzBA" base_Element="_RNyHINzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RNyuMtzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RNyuNdzqEeaMeaEvRdRzBA" base_Element="_RNyuM9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RNyuNtzqEeaMeaEvRdRzBA" base_Element="_RNyuM9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RNyuN9zqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RN400dzqEeaMeaEvRdRzBA" base_Element="_RN4NxdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RN400tzqEeaMeaEvRdRzBA" base_Element="_RN4NxdzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RN4009zqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RN401tzqEeaMeaEvRdRzBA" base_Element="_RN401NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RN5b4NzqEeaMeaEvRdRzBA" base_Element="_RN401NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RN5b4dzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RN9tUtzqEeaMeaEvRdRzBA" base_Element="_RN9tUNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RN9tU9zqEeaMeaEvRdRzBA" base_Element="_RN9tUNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RN9tVNzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROAJkNzqEeaMeaEvRdRzBA" base_Element="_RN_igdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROAJkdzqEeaMeaEvRdRzBA" base_Element="_RN_igdzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROAJktzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROB-wdzqEeaMeaEvRdRzBA" base_Element="_ROB-wNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROB-wtzqEeaMeaEvRdRzBA" base_Element="_ROB-wNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROB-w9zqEeaMeaEvRdRzBA" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROCl0dzqEeaMeaEvRdRzBA" base_Element="_ROCl0NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROCl0tzqEeaMeaEvRdRzBA" base_Element="_ROCl0NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROCl09zqEeaMeaEvRdRzBA" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROCl1dzqEeaMeaEvRdRzBA" base_Element="_ROCl1NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROCl1tzqEeaMeaEvRdRzBA" base_Element="_ROCl1NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROCl19zqEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RODM4dzqEeaMeaEvRdRzBA" base_Element="_RODM4NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RODM4tzqEeaMeaEvRdRzBA" base_Element="_RODM4NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RODM49zqEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RODM5dzqEeaMeaEvRdRzBA" base_Element="_RODM5NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RODM5tzqEeaMeaEvRdRzBA" base_Element="_RODM5NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RODM59zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROLvwdzqEeaMeaEvRdRzBA" base_Element="_ROLvwNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROLvwtzqEeaMeaEvRdRzBA" base_Element="_ROLvwNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROLvw9zqEeaMeaEvRdRzBA" name="SuppressWarnings">
      <annotationParameters xmi:id="_ROLvxNzqEeaMeaEvRdRzBA" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVl_UNzqEeaMeaEvRdRzBA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROMW0dzqEeaMeaEvRdRzBA" base_Element="_ROMW0NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROMW0tzqEeaMeaEvRdRzBA" base_Element="_ROMW0NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROMW09zqEeaMeaEvRdRzBA" name="SuppressWarnings">
      <annotationParameters xmi:id="_ROMW1NzqEeaMeaEvRdRzBA" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVl_UdzqEeaMeaEvRdRzBA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ROTrkNzqEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_ROTEgNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROX9ANzqEeaMeaEvRdRzBA" base_Element="_ROXV8NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROX9AdzqEeaMeaEvRdRzBA" base_Element="_ROXV8NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROX9AtzqEeaMeaEvRdRzBA" name="SuppressWarnings">
      <annotationParameters xmi:id="_ROX9A9zqEeaMeaEvRdRzBA" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVl_U9zqEeaMeaEvRdRzBA" value="&quot;rawtypes&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVl_VNzqEeaMeaEvRdRzBA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ROc1gNzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_ROcOcdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_ROdckNzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_ROc1gdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_ROdck9zqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_ROdckdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROmmgdzqEeaMeaEvRdRzBA" base_Element="_ROmmgNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROmmgtzqEeaMeaEvRdRzBA" base_Element="_ROmmgNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROmmg9zqEeaMeaEvRdRzBA" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROnNkNzqEeaMeaEvRdRzBA" base_Element="_ROmmhNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROnNkdzqEeaMeaEvRdRzBA" base_Element="_ROmmhNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROnNktzqEeaMeaEvRdRzBA" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROnNlNzqEeaMeaEvRdRzBA" base_Element="_ROnNk9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROnNldzqEeaMeaEvRdRzBA" base_Element="_ROnNk9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROnNltzqEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROn0oNzqEeaMeaEvRdRzBA" base_Element="_ROnNl9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROn0odzqEeaMeaEvRdRzBA" base_Element="_ROnNl9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROn0otzqEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROn0pNzqEeaMeaEvRdRzBA" base_Element="_ROn0o9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROn0pdzqEeaMeaEvRdRzBA" base_Element="_ROn0o9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROn0ptzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROobsNzqEeaMeaEvRdRzBA" base_Element="_ROn0p9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROobsdzqEeaMeaEvRdRzBA" base_Element="_ROn0p9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROobstzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROobtNzqEeaMeaEvRdRzBA" base_Element="_ROobs9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROobtdzqEeaMeaEvRdRzBA" base_Element="_ROobs9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROobttzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROobuNzqEeaMeaEvRdRzBA" base_Element="_ROobt9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROpCwNzqEeaMeaEvRdRzBA" base_Element="_ROobt9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROpCwdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROpCw9zqEeaMeaEvRdRzBA" base_Element="_ROpCwtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROpCxNzqEeaMeaEvRdRzBA" base_Element="_ROpCwtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROpCxdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROpCx9zqEeaMeaEvRdRzBA" base_Element="_ROpCxtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROpCyNzqEeaMeaEvRdRzBA" base_Element="_ROpCxtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROpCydzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROpp0NzqEeaMeaEvRdRzBA" base_Element="_ROpCytzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROpp0dzqEeaMeaEvRdRzBA" base_Element="_ROpCytzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROpp0tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROpp1NzqEeaMeaEvRdRzBA" base_Element="_ROpp09zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROpp1dzqEeaMeaEvRdRzBA" base_Element="_ROpp09zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROpp1tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROpp2NzqEeaMeaEvRdRzBA" base_Element="_ROpp19zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROpp2dzqEeaMeaEvRdRzBA" base_Element="_ROpp19zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROpp2tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROqQ4dzqEeaMeaEvRdRzBA" base_Element="_ROqQ4NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROqQ4tzqEeaMeaEvRdRzBA" base_Element="_ROqQ4NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROqQ49zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROqQ5dzqEeaMeaEvRdRzBA" base_Element="_ROqQ5NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROqQ5tzqEeaMeaEvRdRzBA" base_Element="_ROqQ5NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROqQ59zqEeaMeaEvRdRzBA" name="Test">
      <annotationParameters xmi:id="_ROqQ6NzqEeaMeaEvRdRzBA" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVmmatzqEeaMeaEvRdRzBA" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROq38dzqEeaMeaEvRdRzBA" base_Element="_ROq38NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROq38tzqEeaMeaEvRdRzBA" base_Element="_ROq38NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROq389zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROtUMNzqEeaMeaEvRdRzBA" base_Element="_ROstINzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROtUMdzqEeaMeaEvRdRzBA" base_Element="_ROstINzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROtUMtzqEeaMeaEvRdRzBA" name="RunWith">
      <annotationParameters xmi:id="_ROtUM9zqEeaMeaEvRdRzBA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVmma9zqEeaMeaEvRdRzBA" value="Suite.class"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_ROtUNNzqEeaMeaEvRdRzBA" name="SuiteClasses">
      <annotationParameters xmi:id="_ROtUNdzqEeaMeaEvRdRzBA" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVmmbNzqEeaMeaEvRdRzBA" value="TestedClassTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVmmbdzqEeaMeaEvRdRzBA" value="TestRunTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVmmbtzqEeaMeaEvRdRzBA" value="TestDataTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVmmb9zqEeaMeaEvRdRzBA" value="TreeNodeTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVmmcNzqEeaMeaEvRdRzBA" value="CountersTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVnNcNzqEeaMeaEvRdRzBA" value="UnitTestTests.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROt7RNzqEeaMeaEvRdRzBA" base_Element="_ROt7Q9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROuiUNzqEeaMeaEvRdRzBA" base_Element="_ROt7Q9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROuiUdzqEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROuiU9zqEeaMeaEvRdRzBA" base_Element="_ROuiUtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROuiVNzqEeaMeaEvRdRzBA" base_Element="_ROuiUtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROuiVdzqEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROvJYNzqEeaMeaEvRdRzBA" base_Element="_ROuiVtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROvJYdzqEeaMeaEvRdRzBA" base_Element="_ROuiVtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROvJYtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROvJZNzqEeaMeaEvRdRzBA" base_Element="_ROvJY9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROvJZdzqEeaMeaEvRdRzBA" base_Element="_ROvJY9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROvJZtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROvJaNzqEeaMeaEvRdRzBA" base_Element="_ROvJZ9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROvJadzqEeaMeaEvRdRzBA" base_Element="_ROvJZ9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROvJatzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROvwcdzqEeaMeaEvRdRzBA" base_Element="_ROvwcNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROvwctzqEeaMeaEvRdRzBA" base_Element="_ROvwcNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROvwc9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROvwddzqEeaMeaEvRdRzBA" base_Element="_ROvwdNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROvwdtzqEeaMeaEvRdRzBA" base_Element="_ROvwdNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROvwd9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROwXgNzqEeaMeaEvRdRzBA" base_Element="_ROvweNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROwXgdzqEeaMeaEvRdRzBA" base_Element="_ROvweNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROwXgtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROwXhNzqEeaMeaEvRdRzBA" base_Element="_ROwXg9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROwXhdzqEeaMeaEvRdRzBA" base_Element="_ROwXg9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROwXhtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROwXiNzqEeaMeaEvRdRzBA" base_Element="_ROwXh9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROw-kNzqEeaMeaEvRdRzBA" base_Element="_ROwXh9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROw-kdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROw-k9zqEeaMeaEvRdRzBA" base_Element="_ROw-ktzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROw-lNzqEeaMeaEvRdRzBA" base_Element="_ROw-ktzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROw-ldzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROw-l9zqEeaMeaEvRdRzBA" base_Element="_ROw-ltzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROw-mNzqEeaMeaEvRdRzBA" base_Element="_ROw-ltzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROw-mdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROxlodzqEeaMeaEvRdRzBA" base_Element="_ROxloNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROxlotzqEeaMeaEvRdRzBA" base_Element="_ROxloNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROxlo9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROxlpdzqEeaMeaEvRdRzBA" base_Element="_ROxlpNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROxlptzqEeaMeaEvRdRzBA" base_Element="_ROxlpNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROxlp9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROyMsNzqEeaMeaEvRdRzBA" base_Element="_ROxlqNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROyMsdzqEeaMeaEvRdRzBA" base_Element="_ROxlqNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROyMstzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROyMtNzqEeaMeaEvRdRzBA" base_Element="_ROyMs9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROyMtdzqEeaMeaEvRdRzBA" base_Element="_ROyMs9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROyMttzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROyMuNzqEeaMeaEvRdRzBA" base_Element="_ROyMt9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROyMudzqEeaMeaEvRdRzBA" base_Element="_ROyMt9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROyMutzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROyzwdzqEeaMeaEvRdRzBA" base_Element="_ROyzwNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROyzwtzqEeaMeaEvRdRzBA" base_Element="_ROyzwNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROyzw9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROyzxdzqEeaMeaEvRdRzBA" base_Element="_ROyzxNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROyzxtzqEeaMeaEvRdRzBA" base_Element="_ROyzxNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROyzx9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROyzydzqEeaMeaEvRdRzBA" base_Element="_ROyzyNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROza0NzqEeaMeaEvRdRzBA" base_Element="_ROyzyNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROza0dzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROza09zqEeaMeaEvRdRzBA" base_Element="_ROza0tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROza1NzqEeaMeaEvRdRzBA" base_Element="_ROza0tzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROza1dzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ROza19zqEeaMeaEvRdRzBA" base_Element="_ROza1tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_ROza2NzqEeaMeaEvRdRzBA" base_Element="_ROza1tzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_ROza2dzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO0B4NzqEeaMeaEvRdRzBA" base_Element="_ROza2tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO0B4dzqEeaMeaEvRdRzBA" base_Element="_ROza2tzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO0B4tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO0B5NzqEeaMeaEvRdRzBA" base_Element="_RO0B49zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO0B5dzqEeaMeaEvRdRzBA" base_Element="_RO0B49zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO0B5tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO0o8NzqEeaMeaEvRdRzBA" base_Element="_RO0B59zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO0o8dzqEeaMeaEvRdRzBA" base_Element="_RO0B59zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO0o8tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO0o9NzqEeaMeaEvRdRzBA" base_Element="_RO0o89zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO0o9dzqEeaMeaEvRdRzBA" base_Element="_RO0o89zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO0o9tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO0o-NzqEeaMeaEvRdRzBA" base_Element="_RO0o99zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO1QANzqEeaMeaEvRdRzBA" base_Element="_RO0o99zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO1QAdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO1QA9zqEeaMeaEvRdRzBA" base_Element="_RO1QAtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO1QBNzqEeaMeaEvRdRzBA" base_Element="_RO1QAtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO1QBdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO1QB9zqEeaMeaEvRdRzBA" base_Element="_RO1QBtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO1QCNzqEeaMeaEvRdRzBA" base_Element="_RO1QBtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO1QCdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO13ENzqEeaMeaEvRdRzBA" base_Element="_RO1QCtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO13EdzqEeaMeaEvRdRzBA" base_Element="_RO1QCtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO13EtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO13FNzqEeaMeaEvRdRzBA" base_Element="_RO13E9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO13FdzqEeaMeaEvRdRzBA" base_Element="_RO13E9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO13FtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO13GNzqEeaMeaEvRdRzBA" base_Element="_RO13F9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO13GdzqEeaMeaEvRdRzBA" base_Element="_RO13F9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO2eINzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO2eItzqEeaMeaEvRdRzBA" base_Element="_RO2eIdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO2eI9zqEeaMeaEvRdRzBA" base_Element="_RO2eIdzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO2eJNzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO2eJtzqEeaMeaEvRdRzBA" base_Element="_RO2eJdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO2eJ9zqEeaMeaEvRdRzBA" base_Element="_RO2eJdzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO2eKNzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO46YdzqEeaMeaEvRdRzBA" base_Element="_RO46YNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO46YtzqEeaMeaEvRdRzBA" base_Element="_RO46YNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO46Y9zqEeaMeaEvRdRzBA" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO46ZdzqEeaMeaEvRdRzBA" base_Element="_RO46ZNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO5hcNzqEeaMeaEvRdRzBA" base_Element="_RO46ZNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO5hcdzqEeaMeaEvRdRzBA" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO5hc9zqEeaMeaEvRdRzBA" base_Element="_RO5hctzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO5hdNzqEeaMeaEvRdRzBA" base_Element="_RO5hctzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO5hddzqEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO6IgNzqEeaMeaEvRdRzBA" base_Element="_RO5hdtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO6IgdzqEeaMeaEvRdRzBA" base_Element="_RO5hdtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO6IgtzqEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO6IhNzqEeaMeaEvRdRzBA" base_Element="_RO6Ig9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO6IhdzqEeaMeaEvRdRzBA" base_Element="_RO6Ig9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO6IhtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO6vkNzqEeaMeaEvRdRzBA" base_Element="_RO6Ih9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO6vkdzqEeaMeaEvRdRzBA" base_Element="_RO6Ih9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO6vktzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO6vlNzqEeaMeaEvRdRzBA" base_Element="_RO6vk9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO6vldzqEeaMeaEvRdRzBA" base_Element="_RO6vk9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO6vltzqEeaMeaEvRdRzBA" name="Test">
      <annotationParameters xmi:id="_RO6vl9zqEeaMeaEvRdRzBA" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVnNcdzqEeaMeaEvRdRzBA" value="Exception.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO7WoNzqEeaMeaEvRdRzBA" base_Element="_RO6vmNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO7WodzqEeaMeaEvRdRzBA" base_Element="_RO6vmNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO7WotzqEeaMeaEvRdRzBA" name="Test">
      <annotationParameters xmi:id="_RO7Wo9zqEeaMeaEvRdRzBA" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVnNctzqEeaMeaEvRdRzBA" value="Exception.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO7WpdzqEeaMeaEvRdRzBA" base_Element="_RO7WpNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO7WptzqEeaMeaEvRdRzBA" base_Element="_RO7WpNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO7Wp9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO79sNzqEeaMeaEvRdRzBA" base_Element="_RO7WqNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO79sdzqEeaMeaEvRdRzBA" base_Element="_RO7WqNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO79stzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO79tNzqEeaMeaEvRdRzBA" base_Element="_RO79s9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO79tdzqEeaMeaEvRdRzBA" base_Element="_RO79s9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO79ttzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO79uNzqEeaMeaEvRdRzBA" base_Element="_RO79t9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO79udzqEeaMeaEvRdRzBA" base_Element="_RO79t9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO79utzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO8kwdzqEeaMeaEvRdRzBA" base_Element="_RO8kwNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO8kwtzqEeaMeaEvRdRzBA" base_Element="_RO8kwNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO8kw9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO8kxdzqEeaMeaEvRdRzBA" base_Element="_RO8kxNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO8kxtzqEeaMeaEvRdRzBA" base_Element="_RO8kxNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO8kx9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO8kydzqEeaMeaEvRdRzBA" base_Element="_RO8kyNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO9L0NzqEeaMeaEvRdRzBA" base_Element="_RO8kyNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO9L0dzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RO_oEdzqEeaMeaEvRdRzBA" base_Element="_RO_oENzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RO_oEtzqEeaMeaEvRdRzBA" base_Element="_RO_oENzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RO_oE9zqEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPAPIdzqEeaMeaEvRdRzBA" base_Element="_RPAPINzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPAPItzqEeaMeaEvRdRzBA" base_Element="_RPAPINzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPAPI9zqEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPAPJdzqEeaMeaEvRdRzBA" base_Element="_RPAPJNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPAPJtzqEeaMeaEvRdRzBA" base_Element="_RPAPJNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPAPJ9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPA2MdzqEeaMeaEvRdRzBA" base_Element="_RPA2MNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPA2MtzqEeaMeaEvRdRzBA" base_Element="_RPA2MNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPA2M9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPA2NdzqEeaMeaEvRdRzBA" base_Element="_RPA2NNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPA2NtzqEeaMeaEvRdRzBA" base_Element="_RPA2NNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPA2N9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPBdQNzqEeaMeaEvRdRzBA" base_Element="_RPA2ONzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPBdQdzqEeaMeaEvRdRzBA" base_Element="_RPA2ONzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPBdQtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPBdRNzqEeaMeaEvRdRzBA" base_Element="_RPBdQ9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPBdRdzqEeaMeaEvRdRzBA" base_Element="_RPBdQ9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPBdRtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPBdSNzqEeaMeaEvRdRzBA" base_Element="_RPBdR9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPBdSdzqEeaMeaEvRdRzBA" base_Element="_RPBdR9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPCEUNzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPCEUtzqEeaMeaEvRdRzBA" base_Element="_RPCEUdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPCEU9zqEeaMeaEvRdRzBA" base_Element="_RPCEUdzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPCEVNzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPCEVtzqEeaMeaEvRdRzBA" base_Element="_RPCEVdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPCEV9zqEeaMeaEvRdRzBA" base_Element="_RPCEVdzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPCEWNzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPD5gdzqEeaMeaEvRdRzBA" base_Element="_RPD5gNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPD5gtzqEeaMeaEvRdRzBA" base_Element="_RPD5gNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPD5g9zqEeaMeaEvRdRzBA" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPEgkNzqEeaMeaEvRdRzBA" base_Element="_RPD5hNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPEgkdzqEeaMeaEvRdRzBA" base_Element="_RPD5hNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPEgktzqEeaMeaEvRdRzBA" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPEglNzqEeaMeaEvRdRzBA" base_Element="_RPEgk9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPEgldzqEeaMeaEvRdRzBA" base_Element="_RPEgk9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPEgltzqEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPFHoNzqEeaMeaEvRdRzBA" base_Element="_RPEgl9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPFHodzqEeaMeaEvRdRzBA" base_Element="_RPEgl9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPFHotzqEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPFHpNzqEeaMeaEvRdRzBA" base_Element="_RPFHo9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPFHpdzqEeaMeaEvRdRzBA" base_Element="_RPFHo9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPFHptzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPFusNzqEeaMeaEvRdRzBA" base_Element="_RPFHp9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPFusdzqEeaMeaEvRdRzBA" base_Element="_RPFHp9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPFustzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPFutNzqEeaMeaEvRdRzBA" base_Element="_RPFus9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPFutdzqEeaMeaEvRdRzBA" base_Element="_RPFus9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPFuttzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPFuuNzqEeaMeaEvRdRzBA" base_Element="_RPFut9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPFuudzqEeaMeaEvRdRzBA" base_Element="_RPFut9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPFuutzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPGVwdzqEeaMeaEvRdRzBA" base_Element="_RPGVwNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPGVwtzqEeaMeaEvRdRzBA" base_Element="_RPGVwNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPGVw9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPSjAdzqEeaMeaEvRdRzBA" base_Element="_RPSjANzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPSjAtzqEeaMeaEvRdRzBA" base_Element="_RPSjANzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPSjA9zqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RPTxINzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RPTKFdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RPUYMdzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RPUYMNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RPVmUdzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RPVmUNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPc7ENzqEeaMeaEvRdRzBA" base_Element="_RPcUBNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPc7EdzqEeaMeaEvRdRzBA" base_Element="_RPcUBNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPc7EtzqEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPc7FNzqEeaMeaEvRdRzBA" base_Element="_RPc7E9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPc7FdzqEeaMeaEvRdRzBA" base_Element="_RPc7E9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPdiINzqEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPdiItzqEeaMeaEvRdRzBA" base_Element="_RPdiIdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPdiI9zqEeaMeaEvRdRzBA" base_Element="_RPdiIdzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPdiJNzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPdiJtzqEeaMeaEvRdRzBA" base_Element="_RPdiJdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPeJMNzqEeaMeaEvRdRzBA" base_Element="_RPdiJdzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPeJMdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPeJM9zqEeaMeaEvRdRzBA" base_Element="_RPeJMtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPeJNNzqEeaMeaEvRdRzBA" base_Element="_RPeJMtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPeJNdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPeJN9zqEeaMeaEvRdRzBA" base_Element="_RPeJNtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPewQNzqEeaMeaEvRdRzBA" base_Element="_RPeJNtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPewQdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPewQ9zqEeaMeaEvRdRzBA" base_Element="_RPewQtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPewRNzqEeaMeaEvRdRzBA" base_Element="_RPewQtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPewRdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPewR9zqEeaMeaEvRdRzBA" base_Element="_RPewRtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPewSNzqEeaMeaEvRdRzBA" base_Element="_RPewRtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPewSdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPfXUNzqEeaMeaEvRdRzBA" base_Element="_RPewStzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPfXUdzqEeaMeaEvRdRzBA" base_Element="_RPewStzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPfXUtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPfXVNzqEeaMeaEvRdRzBA" base_Element="_RPfXU9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPfXVdzqEeaMeaEvRdRzBA" base_Element="_RPfXU9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPfXVtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPf-YNzqEeaMeaEvRdRzBA" base_Element="_RPfXV9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPf-YdzqEeaMeaEvRdRzBA" base_Element="_RPfXV9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPf-YtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPf-ZNzqEeaMeaEvRdRzBA" base_Element="_RPf-Y9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPf-ZdzqEeaMeaEvRdRzBA" base_Element="_RPf-Y9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPf-ZtzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPf-aNzqEeaMeaEvRdRzBA" base_Element="_RPf-Z9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPf-adzqEeaMeaEvRdRzBA" base_Element="_RPf-Z9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPf-atzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPglcdzqEeaMeaEvRdRzBA" base_Element="_RPglcNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPglctzqEeaMeaEvRdRzBA" base_Element="_RPglcNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPglc9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPglddzqEeaMeaEvRdRzBA" base_Element="_RPgldNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPgldtzqEeaMeaEvRdRzBA" base_Element="_RPgldNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPgld9zqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPgledzqEeaMeaEvRdRzBA" base_Element="_RPgleNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPhMgNzqEeaMeaEvRdRzBA" base_Element="_RPgleNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPhMgdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPhMg9zqEeaMeaEvRdRzBA" base_Element="_RPhMgtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPhMhNzqEeaMeaEvRdRzBA" base_Element="_RPhMgtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPhMhdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPjBsdzqEeaMeaEvRdRzBA" base_Element="_RPjBsNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPjBstzqEeaMeaEvRdRzBA" base_Element="_RPjBsNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPjBs9zqEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPjBtdzqEeaMeaEvRdRzBA" base_Element="_RPjBtNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPjowNzqEeaMeaEvRdRzBA" base_Element="_RPjBtNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPjowdzqEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPjow9zqEeaMeaEvRdRzBA" base_Element="_RPjowtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPjoxNzqEeaMeaEvRdRzBA" base_Element="_RPjowtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPjoxdzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPjox9zqEeaMeaEvRdRzBA" base_Element="_RPjoxtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPjoyNzqEeaMeaEvRdRzBA" base_Element="_RPjoxtzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPkP0NzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPkP0tzqEeaMeaEvRdRzBA" base_Element="_RPkP0dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPkP09zqEeaMeaEvRdRzBA" base_Element="_RPkP0dzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPkP1NzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPkP1tzqEeaMeaEvRdRzBA" base_Element="_RPkP1dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPkP19zqEeaMeaEvRdRzBA" base_Element="_RPkP1dzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPkP2NzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPk24NzqEeaMeaEvRdRzBA" base_Element="_RPkP2dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPk24dzqEeaMeaEvRdRzBA" base_Element="_RPkP2dzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPk24tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPk25NzqEeaMeaEvRdRzBA" base_Element="_RPk249zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPk25dzqEeaMeaEvRdRzBA" base_Element="_RPk249zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPk25tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RPk26NzqEeaMeaEvRdRzBA" base_Element="_RPk259zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RPk26dzqEeaMeaEvRdRzBA" base_Element="_RPk259zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RPk26tzqEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_RSx74NzqEeaMeaEvRdRzBA" base_Element="_RSxU0NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RSyi8NzqEeaMeaEvRdRzBA" base_Element="_RSx74dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RSyi8tzqEeaMeaEvRdRzBA" base_Element="_RSyi8dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RSyi9NzqEeaMeaEvRdRzBA" base_Element="_RSyi89zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RSzKANzqEeaMeaEvRdRzBA" base_Element="_RSyi9dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RSzKAtzqEeaMeaEvRdRzBA" base_Element="_RSzKAdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RSzKBNzqEeaMeaEvRdRzBA" base_Element="_RSzKA9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RS0YI9zqEeaMeaEvRdRzBA" base_Element="_RS0YItzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RS0_MtzqEeaMeaEvRdRzBA" genericsValue="TestRun, Number" base_Element="_RS0YJNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RS20YdzqEeaMeaEvRdRzBA" base_Element="_RS20YNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RS3bcdzqEeaMeaEvRdRzBA" base_Element="_RS3bcNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RS3bc9zqEeaMeaEvRdRzBA" base_Element="_RS3bctzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RS4CgNzqEeaMeaEvRdRzBA" base_Element="_RS3bdNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RS4pkdzqEeaMeaEvRdRzBA" base_Element="_RS4pkNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RS5QoNzqEeaMeaEvRdRzBA" base_Element="_RS4pktzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RS87AdzqEeaMeaEvRdRzBA" base_Element="_RS8T8NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RS87AtzqEeaMeaEvRdRzBA" base_Element="_RS8T8NzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RS87A9zqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_RTE20dzqEeaMeaEvRdRzBA" base_Element="_RTE20NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTE209zqEeaMeaEvRdRzBA" base_Element="_RTE20tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTFd4NzqEeaMeaEvRdRzBA" base_Element="_RTE21NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTFd4tzqEeaMeaEvRdRzBA" base_Element="_RTFd4dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTFd5NzqEeaMeaEvRdRzBA" base_Element="_RTFd49zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTGE8dzqEeaMeaEvRdRzBA" base_Element="_RTGE8NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RTIhMNzqEeaMeaEvRdRzBA" base_Element="_RTH6I9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RTIhMdzqEeaMeaEvRdRzBA" base_Element="_RTH6I9zqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RTIhMtzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_RTJvUNzqEeaMeaEvRdRzBA" base_Element="_RTJIQNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTJvUtzqEeaMeaEvRdRzBA" base_Element="_RTJvUdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTKWYdzqEeaMeaEvRdRzBA" base_Element="_RTKWYNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTK9cNzqEeaMeaEvRdRzBA" base_Element="_RTKWYtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTK9ctzqEeaMeaEvRdRzBA" base_Element="_RTK9cdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTMLkNzqEeaMeaEvRdRzBA" base_Element="_RTLkgNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTMLktzqEeaMeaEvRdRzBA" base_Element="_RTMLkdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTMLlNzqEeaMeaEvRdRzBA" base_Element="_RTMLk9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTMyoNzqEeaMeaEvRdRzBA" base_Element="_RTMLldzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTMyotzqEeaMeaEvRdRzBA" base_Element="_RTMyodzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTMypNzqEeaMeaEvRdRzBA" base_Element="_RTMyo9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTNZsNzqEeaMeaEvRdRzBA" base_Element="_RTMypdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTNZstzqEeaMeaEvRdRzBA" base_Element="_RTNZsdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTNZtNzqEeaMeaEvRdRzBA" base_Element="_RTNZs9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTOAwNzqEeaMeaEvRdRzBA" base_Element="_RTNZtdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTOAwtzqEeaMeaEvRdRzBA" base_Element="_RTOAwdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTP18NzqEeaMeaEvRdRzBA" base_Element="_RTPO4NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTP18tzqEeaMeaEvRdRzBA" base_Element="_RTP18dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTP19NzqEeaMeaEvRdRzBA" base_Element="_RTP189zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTQdANzqEeaMeaEvRdRzBA" base_Element="_RTP19dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTQdAtzqEeaMeaEvRdRzBA" base_Element="_RTQdAdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTQdBNzqEeaMeaEvRdRzBA" base_Element="_RTQdA9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTREENzqEeaMeaEvRdRzBA" base_Element="_RTQdBdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTREEtzqEeaMeaEvRdRzBA" base_Element="_RTREEdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTRrINzqEeaMeaEvRdRzBA" base_Element="_RTREE9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTTgUdzqEeaMeaEvRdRzBA" base_Element="_RTTgUNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTTgU9zqEeaMeaEvRdRzBA" base_Element="_RTTgUtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTUHYdzqEeaMeaEvRdRzBA" base_Element="_RTUHYNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RTUuctzqEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_RTUucNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RTVVgtzqEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_RTVVgNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RTV8kNzqEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_RTVVg9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTWjodzqEeaMeaEvRdRzBA" base_Element="_RTWjoNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTWjo9zqEeaMeaEvRdRzBA" base_Element="_RTWjotzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTXKsNzqEeaMeaEvRdRzBA" base_Element="_RTWjpNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTXKstzqEeaMeaEvRdRzBA" base_Element="_RTXKsdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTXKtNzqEeaMeaEvRdRzBA" base_Element="_RTXKs9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTXxwNzqEeaMeaEvRdRzBA" base_Element="_RTXKtdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTXxwtzqEeaMeaEvRdRzBA" base_Element="_RTXxwdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTXxxNzqEeaMeaEvRdRzBA" base_Element="_RTXxw9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTY_4dzqEeaMeaEvRdRzBA" base_Element="_RTY_4NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTY_49zqEeaMeaEvRdRzBA" base_Element="_RTY_4tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RTZm99zqEeaMeaEvRdRzBA" base_Element="_RTZm9dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RTaOANzqEeaMeaEvRdRzBA" base_Element="_RTZm9dzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RTaOAdzqEeaMeaEvRdRzBA" name="SuppressWarnings">
      <annotationParameters xmi:id="_RTaOAtzqEeaMeaEvRdRzBA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_RVmmYNzqEeaMeaEvRdRzBA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_RTa1EdzqEeaMeaEvRdRzBA" base_Element="_RTa1ENzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTa1E9zqEeaMeaEvRdRzBA" base_Element="_RTa1EtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RTcDMNzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_RTbcItzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTd4YdzqEeaMeaEvRdRzBA" base_Element="_RTd4YNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTefcNzqEeaMeaEvRdRzBA" base_Element="_RTd4YtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTefctzqEeaMeaEvRdRzBA" base_Element="_RTefcdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTefdNzqEeaMeaEvRdRzBA" base_Element="_RTefc9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RTg7tNzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_RTg7sNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTj_AdzqEeaMeaEvRdRzBA" base_Element="_RTj_ANzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTkmENzqEeaMeaEvRdRzBA" base_Element="_RTj_AtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTkmEtzqEeaMeaEvRdRzBA" base_Element="_RTkmEdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RToQcdzqEeaMeaEvRdRzBA" base_Element="_RToQcNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTo3gNzqEeaMeaEvRdRzBA" base_Element="_RToQctzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTo3gtzqEeaMeaEvRdRzBA" base_Element="_RTo3gdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTo3hNzqEeaMeaEvRdRzBA" base_Element="_RTo3g9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTpekNzqEeaMeaEvRdRzBA" base_Element="_RTo3hdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTpektzqEeaMeaEvRdRzBA" base_Element="_RTpekdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTpelNzqEeaMeaEvRdRzBA" base_Element="_RTpek9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTqFoNzqEeaMeaEvRdRzBA" base_Element="_RTpeldzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTqFotzqEeaMeaEvRdRzBA" base_Element="_RTqFodzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTqFpNzqEeaMeaEvRdRzBA" base_Element="_RTqFo9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTqssdzqEeaMeaEvRdRzBA" base_Element="_RTqssNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTqss9zqEeaMeaEvRdRzBA" base_Element="_RTqsstzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTqstdzqEeaMeaEvRdRzBA" base_Element="_RTqstNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTrTwdzqEeaMeaEvRdRzBA" base_Element="_RTrTwNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RTsh4tzqEeaMeaEvRdRzBA" base_Element="_RTsh4NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RTu-IdzqEeaMeaEvRdRzBA" base_Element="_RTu-INzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RT9AktzqEeaMeaEvRdRzBA" base_Element="_RT9AkdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RT9noNzqEeaMeaEvRdRzBA" base_Element="_RT9Ak9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RUAD4dzqEeaMeaEvRdRzBA" base_Element="_RUAD4NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUAD5dzqEeaMeaEvRdRzBA" base_Element="_RUAD4tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RUAD5tzqEeaMeaEvRdRzBA" base_Element="_RUAD4tzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RUAD59zqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_RUAq8dzqEeaMeaEvRdRzBA" base_Element="_RUAq8NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUBSANzqEeaMeaEvRdRzBA" genericsValue="TestRunStartTime" base_Element="_RUAq8tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUB5E9zqEeaMeaEvRdRzBA" base_Element="_RUB5ENzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RUB5FNzqEeaMeaEvRdRzBA" base_Element="_RUB5ENzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RUB5FdzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RUDHMNzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_RUCgIdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUDHNdzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUDHMtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUDuQ9zqEeaMeaEvRdRzBA" base_Element="_RUDuQNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RUDuRNzqEeaMeaEvRdRzBA" base_Element="_RUDuQNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RUDuRdzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RUFjcNzqEeaMeaEvRdRzBA" genericsValue="StrongRule" base_Element="_RUE8YNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUGKgtzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUFjctzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUGKg9zqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUFjc9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUGxkdzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUGKhdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUHYotzqEeaMeaEvRdRzBA" base_Element="_RUHYoNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RUHYo9zqEeaMeaEvRdRzBA" base_Element="_RUHYoNzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RUHYpNzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RUJN0NzqEeaMeaEvRdRzBA" genericsValue="String, String" base_Element="_RUImwtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUJN0tzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUImw9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUJ04NzqEeaMeaEvRdRzBA" genericsValue="String, String" base_Element="_RUJN09zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUJ04tzqEeaMeaEvRdRzBA" genericsValue="StrongRule" base_Element="_RUJN1NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUKb8dzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUJ05NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RULDAtzqEeaMeaEvRdRzBA" base_Element="_RULDAdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUPUcNzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_RUOtYdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUVbENzqEeaMeaEvRdRzBA" base_Element="_RUU0AdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_RUVbEdzqEeaMeaEvRdRzBA" base_Element="_RUU0AdzqEeaMeaEvRdRzBA">
    <annotations xmi:id="_RUVbEtzqEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_RUYeYNzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUX3UtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUYeZtzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUYeYtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUZFcNzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUYeY9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUZFc9zqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUZFcdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUZsgNzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUZFctzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUaTkNzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUZsg9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUaTkdzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUZshNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUa6o9zqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUa6oNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUa6pdzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUa6odzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUbhsNzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUa6otzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUbhs9zqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUbhstzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUcIwdzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUbhtNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUcIw9zqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUbhtdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUcv0tzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUcIxdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUdW4NzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUcv09zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUdW4tzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUcv1NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUd989zqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUd98dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUd99NzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUd98tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUelAtzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUelANzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUfMENzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUelBNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUfMEdzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUelBdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUfzINzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUfME9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUfzJNzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RUfzIdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUgaMNzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUfzI9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUgaNtzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RUgaMtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUnH4NzqEeaMeaEvRdRzBA" base_Element="_RUmg0NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUnH4tzqEeaMeaEvRdRzBA" base_Element="_RUnH4dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUnu8tzqEeaMeaEvRdRzBA" base_Element="_RUnu8dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUnu9NzqEeaMeaEvRdRzBA" base_Element="_RUnu89zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUoWANzqEeaMeaEvRdRzBA" base_Element="_RUnu9dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUoWAtzqEeaMeaEvRdRzBA" base_Element="_RUoWAdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUoWBNzqEeaMeaEvRdRzBA" base_Element="_RUoWA9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUoWBtzqEeaMeaEvRdRzBA" base_Element="_RUoWBdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUo9EdzqEeaMeaEvRdRzBA" base_Element="_RUo9ENzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUo9E9zqEeaMeaEvRdRzBA" base_Element="_RUo9EtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUo9FdzqEeaMeaEvRdRzBA" base_Element="_RUo9FNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUpkINzqEeaMeaEvRdRzBA" base_Element="_RUo9FtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUpkItzqEeaMeaEvRdRzBA" base_Element="_RUpkIdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUpkJNzqEeaMeaEvRdRzBA" base_Element="_RUpkI9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUpkJtzqEeaMeaEvRdRzBA" base_Element="_RUpkJdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUqLMNzqEeaMeaEvRdRzBA" base_Element="_RUpkJ9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUqLMtzqEeaMeaEvRdRzBA" base_Element="_RUqLMdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUqLNNzqEeaMeaEvRdRzBA" base_Element="_RUqLM9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUqyQdzqEeaMeaEvRdRzBA" base_Element="_RUqyQNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUqyQ9zqEeaMeaEvRdRzBA" base_Element="_RUqyQtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUrZUNzqEeaMeaEvRdRzBA" genericsValue="TestRun" base_Element="_RUqyRNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUrZU9zqEeaMeaEvRdRzBA" genericsValue="UnitTest" base_Element="_RUrZUtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUsAYtzqEeaMeaEvRdRzBA" base_Element="_RUsAYdzqEeaMeaEvRdRzBA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_RUsAZNzqEeaMeaEvRdRzBA" name="getAnalyzer" method="_RVQoINzqEeaMeaEvRdRzBA">
      <ownedParameter xmi:id="_RUsAZdzqEeaMeaEvRdRzBA" type="_RPQt0NzqEeaMeaEvRdRzBA" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUsncdzqEeaMeaEvRdRzBA" base_Element="_RUsncNzqEeaMeaEvRdRzBA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_RUsnc9zqEeaMeaEvRdRzBA" name="getRunID" method="_RVRPO9zqEeaMeaEvRdRzBA">
      <ownedParameter xmi:id="_RUtOgNzqEeaMeaEvRdRzBA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_RUsnctzqEeaMeaEvRdRzBA" base_Property="_RUsncNzqEeaMeaEvRdRzBA" siblings="_RVkKItzqEeaMeaEvRdRzBA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUt1kdzqEeaMeaEvRdRzBA" base_Element="_RUt1kNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RUvDsdzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_RUvDsNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUvqwtzqEeaMeaEvRdRzBA" base_Element="_RUvqwdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUwR0NzqEeaMeaEvRdRzBA" base_Element="_RUvqw9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUwR1NzqEeaMeaEvRdRzBA" base_Element="_RUwR0dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUwR1tzqEeaMeaEvRdRzBA" base_Element="_RUwR1dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUxf8tzqEeaMeaEvRdRzBA" base_Element="_RUxf8dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUyHA9zqEeaMeaEvRdRzBA" base_Element="_RUyHAtzqEeaMeaEvRdRzBA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_RUyHBNzqEeaMeaEvRdRzBA" name="getFailurePercentage" method="_RVU5ltzqEeaMeaEvRdRzBA">
      <ownedParameter xmi:id="_RUyHB9zqEeaMeaEvRdRzBA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_RUyHBdzqEeaMeaEvRdRzBA" name="setFailurePercentage" method="_RVU5mNzqEeaMeaEvRdRzBA">
      <ownedParameter xmi:id="_RUyHBtzqEeaMeaEvRdRzBA" name="failurePercentage">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUyuEdzqEeaMeaEvRdRzBA" base_Element="_RUyuENzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUyuE9zqEeaMeaEvRdRzBA" base_Element="_RUyuEtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Array xmi:id="_RUzVINzqEeaMeaEvRdRzBA" base_Element="_RUyuFNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUzVItzqEeaMeaEvRdRzBA" base_Element="_RUyuFNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUzVJdzqEeaMeaEvRdRzBA" base_Element="_RUzVI9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUzVJ9zqEeaMeaEvRdRzBA" base_Element="_RUzVJtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RUz8MNzqEeaMeaEvRdRzBA" base_Element="_RUzVKNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU1xYdzqEeaMeaEvRdRzBA" genericsValue="Entry&lt;String, String>" base_Element="_RU1xYNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU1xYtzqEeaMeaEvRdRzBA" base_Element="_RU1xYNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU2YcNzqEeaMeaEvRdRzBA" genericsValue="Entry&lt;String, String>" base_Element="_RU1xY9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU2YcdzqEeaMeaEvRdRzBA" base_Element="_RU1xY9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU2Yc9zqEeaMeaEvRdRzBA" genericsValue="Entry&lt;String, String>, String" base_Element="_RU2YctzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU2YdNzqEeaMeaEvRdRzBA" base_Element="_RU2YctzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU2_gNzqEeaMeaEvRdRzBA" genericsValue="Entry&lt;String, String>, String" base_Element="_RU2YddzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU2_gdzqEeaMeaEvRdRzBA" base_Element="_RU2YddzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU3mkNzqEeaMeaEvRdRzBA" base_Element="_RU2_gtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU3mk9zqEeaMeaEvRdRzBA" base_Element="_RU3mkdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU3mldzqEeaMeaEvRdRzBA" genericsValue="String, Number" base_Element="_RU3mlNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU4NodzqEeaMeaEvRdRzBA" genericsValue="String, Number" base_Element="_RU4NoNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU4NotzqEeaMeaEvRdRzBA" base_Element="_RU4NoNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU4NpNzqEeaMeaEvRdRzBA" base_Element="_RU4No9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU40sdzqEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_RU40sNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU40stzqEeaMeaEvRdRzBA" base_Element="_RU40sNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU40tNzqEeaMeaEvRdRzBA" base_Element="_RU40s9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU5bwdzqEeaMeaEvRdRzBA" base_Element="_RU5bwNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU5bw9zqEeaMeaEvRdRzBA" base_Element="_RU5bwtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU5bxdzqEeaMeaEvRdRzBA" base_Element="_RU5bxNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU6C0dzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RU6C0NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU6C0tzqEeaMeaEvRdRzBA" base_Element="_RU6C0NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU6C1NzqEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_RU6C09zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU6p4dzqEeaMeaEvRdRzBA" base_Element="_RU6p4NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU6p49zqEeaMeaEvRdRzBA" base_Element="_RU6p4tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU6p5dzqEeaMeaEvRdRzBA" base_Element="_RU6p5NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU7Q8dzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_RU7Q8NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU7Q8tzqEeaMeaEvRdRzBA" base_Element="_RU7Q8NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU74ANzqEeaMeaEvRdRzBA" base_Element="_RU7Q89zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU74AtzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_RU74AdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU74BNzqEeaMeaEvRdRzBA" base_Element="_RU74A9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RU8fENzqEeaMeaEvRdRzBA" genericsValue="String" base_Element="_RU74BdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU8fEtzqEeaMeaEvRdRzBA" base_Element="_RU8fEdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU9GINzqEeaMeaEvRdRzBA" base_Element="_RU8fE9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU9GItzqEeaMeaEvRdRzBA" base_Element="_RU9GIdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU9GJNzqEeaMeaEvRdRzBA" base_Element="_RU9GI9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU9GJtzqEeaMeaEvRdRzBA" base_Element="_RU9GJdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU9tMNzqEeaMeaEvRdRzBA" base_Element="_RU9GJ9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU9tMtzqEeaMeaEvRdRzBA" base_Element="_RU9tMdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU9tNNzqEeaMeaEvRdRzBA" base_Element="_RU9tM9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU-7UNzqEeaMeaEvRdRzBA" base_Element="_RU-URNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU-7UtzqEeaMeaEvRdRzBA" base_Element="_RU-7UdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU-7VNzqEeaMeaEvRdRzBA" base_Element="_RU-7U9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU-7VtzqEeaMeaEvRdRzBA" base_Element="_RU-7VdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU_iYNzqEeaMeaEvRdRzBA" base_Element="_RU-7V9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU_iYtzqEeaMeaEvRdRzBA" base_Element="_RU_iYdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RU_iZNzqEeaMeaEvRdRzBA" base_Element="_RU_iY9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVAJcdzqEeaMeaEvRdRzBA" base_Element="_RVAJcNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVAJc9zqEeaMeaEvRdRzBA" base_Element="_RVAJctzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVAwgNzqEeaMeaEvRdRzBA" base_Element="_RVAJdNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Array xmi:id="_RVAwg9zqEeaMeaEvRdRzBA" dimensions="1" base_Element="_RVAwgdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVAwhdzqEeaMeaEvRdRzBA" base_Element="_RVAwgdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVAwh9zqEeaMeaEvRdRzBA" base_Element="_RVAwhtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVAwidzqEeaMeaEvRdRzBA" base_Element="_RVAwiNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVBXkdzqEeaMeaEvRdRzBA" base_Element="_RVBXkNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVBXk9zqEeaMeaEvRdRzBA" base_Element="_RVBXktzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVBXldzqEeaMeaEvRdRzBA" base_Element="_RVBXlNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVB-odzqEeaMeaEvRdRzBA" base_Element="_RVB-oNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVB-o9zqEeaMeaEvRdRzBA" base_Element="_RVB-otzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Array xmi:id="_RVB-ptzqEeaMeaEvRdRzBA" base_Element="_RVB-pNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVClsNzqEeaMeaEvRdRzBA" base_Element="_RVB-pNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVClstzqEeaMeaEvRdRzBA" base_Element="_RVClsdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVDMwNzqEeaMeaEvRdRzBA" base_Element="_RVCls9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVDMw9zqEeaMeaEvRdRzBA" base_Element="_RVDMwtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVDz0NzqEeaMeaEvRdRzBA" base_Element="_RVDMxtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVDz1dzqEeaMeaEvRdRzBA" base_Element="_RVDz1NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVDz19zqEeaMeaEvRdRzBA" base_Element="_RVDz1tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVEa49zqEeaMeaEvRdRzBA" base_Element="_RVEa4tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVEa5tzqEeaMeaEvRdRzBA" base_Element="_RVEa5NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVFB8NzqEeaMeaEvRdRzBA" base_Element="_RVEa59zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVFB8tzqEeaMeaEvRdRzBA" base_Element="_RVFB8dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVFB9NzqEeaMeaEvRdRzBA" base_Element="_RVFB89zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVFB9tzqEeaMeaEvRdRzBA" base_Element="_RVFB9dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVFpAdzqEeaMeaEvRdRzBA" base_Element="_RVFpANzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVFpA9zqEeaMeaEvRdRzBA" base_Element="_RVFpAtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVGQEtzqEeaMeaEvRdRzBA" base_Element="_RVFpBNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVG3INzqEeaMeaEvRdRzBA" base_Element="_RVGQE9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RVG3ItzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RVG3IdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVG3I9zqEeaMeaEvRdRzBA" base_Element="_RVG3IdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVHeMNzqEeaMeaEvRdRzBA" base_Element="_RVG3JNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_RVHeMtzqEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_RVHeMdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVHeNNzqEeaMeaEvRdRzBA" base_Element="_RVHeMdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVHeN9zqEeaMeaEvRdRzBA" base_Element="_RVHeNdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVIFQdzqEeaMeaEvRdRzBA" base_Element="_RVIFQNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVIFQ9zqEeaMeaEvRdRzBA" base_Element="_RVIFQtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVIsUdzqEeaMeaEvRdRzBA" base_Element="_RVIsUNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVIsU9zqEeaMeaEvRdRzBA" base_Element="_RVIsUtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVIsVdzqEeaMeaEvRdRzBA" base_Element="_RVIsVNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVJTYNzqEeaMeaEvRdRzBA" base_Element="_RVIsVtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVJTYtzqEeaMeaEvRdRzBA" base_Element="_RVJTYdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVJTZNzqEeaMeaEvRdRzBA" base_Element="_RVJTY9zqEeaMeaEvRdRzBA"/>
  <uml:OpaqueBehavior xmi:id="_RVQoINzqEeaMeaEvRdRzBA" name="getAnalyzer" specification="_RUsAZNzqEeaMeaEvRdRzBA">
    <ownedParameter xmi:id="_RVQoIdzqEeaMeaEvRdRzBA" type="_RPQt0NzqEeaMeaEvRdRzBA" direction="return"/>
    <language>java</language>
    <body>return (AprioriAnalyzer) analyzer;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_RVRPO9zqEeaMeaEvRdRzBA" name="getRunID" specification="_RUsnc9zqEeaMeaEvRdRzBA">
    <ownedParameter xmi:id="_RVRPPNzqEeaMeaEvRdRzBA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return runID;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_RVU5ltzqEeaMeaEvRdRzBA" name="getFailurePercentage" specification="_RUyHBNzqEeaMeaEvRdRzBA">
    <ownedParameter xmi:id="_RVU5l9zqEeaMeaEvRdRzBA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </ownedParameter>
    <language>java</language>
    <body>calculateFailurePercentage();
		return failurePercentage;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_RVU5mNzqEeaMeaEvRdRzBA" name="setFailurePercentage" specification="_RUyHBdzqEeaMeaEvRdRzBA">
    <ownedParameter xmi:id="_RVU5mdzqEeaMeaEvRdRzBA" name="failurePercentage">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>this.failurePercentage = failurePercentage;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_RVkxMNzqEeaMeaEvRdRzBA" base_Property="_RVkKItzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_RVkxMdzqEeaMeaEvRdRzBA" base_Element="_RVkKItzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RVyMktzqEeaMeaEvRdRzBA" base_Element="_RVyMkNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RVyMldzqEeaMeaEvRdRzBA" base_Element="_RVyMk9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RVyzotzqEeaMeaEvRdRzBA" base_Element="_RVyzoNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RVyzpdzqEeaMeaEvRdRzBA" base_Element="_RVyzo9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RVzasNzqEeaMeaEvRdRzBA" base_Element="_RVyzptzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RVzas9zqEeaMeaEvRdRzBA" base_Element="_RVzasdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RVzattzqEeaMeaEvRdRzBA" base_Element="_RVzatNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV0BwNzqEeaMeaEvRdRzBA" base_Element="_RVzat9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV0Bw9zqEeaMeaEvRdRzBA" base_Element="_RV0BwdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV0o0NzqEeaMeaEvRdRzBA" base_Element="_RV0BxNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV0o09zqEeaMeaEvRdRzBA" base_Element="_RV0o0dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV0o1tzqEeaMeaEvRdRzBA" base_Element="_RV0o1NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV1P4NzqEeaMeaEvRdRzBA" base_Element="_RV0o19zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV1P49zqEeaMeaEvRdRzBA" base_Element="_RV1P4dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV1P5tzqEeaMeaEvRdRzBA" base_Element="_RV1P5NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV128NzqEeaMeaEvRdRzBA" base_Element="_RV1P59zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV1289zqEeaMeaEvRdRzBA" base_Element="_RV128dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV129tzqEeaMeaEvRdRzBA" base_Element="_RV129NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV2eANzqEeaMeaEvRdRzBA" base_Element="_RV1299zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV2eA9zqEeaMeaEvRdRzBA" base_Element="_RV2eAdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV2eBtzqEeaMeaEvRdRzBA" base_Element="_RV2eBNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV3FENzqEeaMeaEvRdRzBA" base_Element="_RV2eB9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV3FE9zqEeaMeaEvRdRzBA" base_Element="_RV3FEdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV3FFtzqEeaMeaEvRdRzBA" base_Element="_RV3FFNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV3sINzqEeaMeaEvRdRzBA" base_Element="_RV3FF9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV3sI9zqEeaMeaEvRdRzBA" base_Element="_RV3sIdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV3sJtzqEeaMeaEvRdRzBA" base_Element="_RV3sJNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV4TMNzqEeaMeaEvRdRzBA" base_Element="_RV3sJ9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV4TM9zqEeaMeaEvRdRzBA" base_Element="_RV4TMdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV4TNtzqEeaMeaEvRdRzBA" base_Element="_RV4TNNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV46QNzqEeaMeaEvRdRzBA" base_Element="_RV4TN9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV46Q9zqEeaMeaEvRdRzBA" base_Element="_RV46QdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV46RtzqEeaMeaEvRdRzBA" base_Element="_RV46RNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV5hUNzqEeaMeaEvRdRzBA" base_Element="_RV46R9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV5hU9zqEeaMeaEvRdRzBA" base_Element="_RV5hUdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV5hVtzqEeaMeaEvRdRzBA" base_Element="_RV5hVNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV6IYtzqEeaMeaEvRdRzBA" base_Element="_RV6IYNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV6IZdzqEeaMeaEvRdRzBA" base_Element="_RV6IY9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV6IaNzqEeaMeaEvRdRzBA" base_Element="_RV6IZtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV6vctzqEeaMeaEvRdRzBA" base_Element="_RV6vcNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV6vddzqEeaMeaEvRdRzBA" base_Element="_RV6vc9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV6veNzqEeaMeaEvRdRzBA" base_Element="_RV6vdtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV7WgtzqEeaMeaEvRdRzBA" base_Element="_RV7WgNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV7WhdzqEeaMeaEvRdRzBA" base_Element="_RV7Wg9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV79kNzqEeaMeaEvRdRzBA" base_Element="_RV7WhtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV79k9zqEeaMeaEvRdRzBA" base_Element="_RV79kdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV79ltzqEeaMeaEvRdRzBA" base_Element="_RV79lNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV8koNzqEeaMeaEvRdRzBA" base_Element="_RV79l9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV8ko9zqEeaMeaEvRdRzBA" base_Element="_RV8kodzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV8kptzqEeaMeaEvRdRzBA" base_Element="_RV8kpNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV9LsNzqEeaMeaEvRdRzBA" base_Element="_RV8kp9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV9Ls9zqEeaMeaEvRdRzBA" base_Element="_RV9LsdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV9LttzqEeaMeaEvRdRzBA" base_Element="_RV9LtNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV9ywdzqEeaMeaEvRdRzBA" base_Element="_RV9Lt9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV9yxNzqEeaMeaEvRdRzBA" base_Element="_RV9ywtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV9yx9zqEeaMeaEvRdRzBA" base_Element="_RV9yxdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV-Z0tzqEeaMeaEvRdRzBA" base_Element="_RV-Z0NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV-Z1dzqEeaMeaEvRdRzBA" base_Element="_RV-Z09zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV_A4NzqEeaMeaEvRdRzBA" base_Element="_RV-Z1tzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV_A49zqEeaMeaEvRdRzBA" base_Element="_RV_A4dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV_A5tzqEeaMeaEvRdRzBA" base_Element="_RV_A5NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV_n8NzqEeaMeaEvRdRzBA" base_Element="_RV_A59zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV_n89zqEeaMeaEvRdRzBA" base_Element="_RV_n8dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RV_n9tzqEeaMeaEvRdRzBA" base_Element="_RV_n9NzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWAPANzqEeaMeaEvRdRzBA" base_Element="_RV_n99zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWAPA9zqEeaMeaEvRdRzBA" base_Element="_RWAPAdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWAPBtzqEeaMeaEvRdRzBA" base_Element="_RWAPBNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWA2ENzqEeaMeaEvRdRzBA" base_Element="_RWAPB9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWA2E9zqEeaMeaEvRdRzBA" base_Element="_RWA2EdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWA2FtzqEeaMeaEvRdRzBA" base_Element="_RWA2FNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWBdINzqEeaMeaEvRdRzBA" base_Element="_RWA2F9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWBdI9zqEeaMeaEvRdRzBA" base_Element="_RWBdIdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWBdJtzqEeaMeaEvRdRzBA" base_Element="_RWBdJNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWCEMNzqEeaMeaEvRdRzBA" base_Element="_RWBdJ9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWCEM9zqEeaMeaEvRdRzBA" base_Element="_RWCEMdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWCENtzqEeaMeaEvRdRzBA" base_Element="_RWCENNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWCrQNzqEeaMeaEvRdRzBA" base_Element="_RWCEN9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWCrQ9zqEeaMeaEvRdRzBA" base_Element="_RWCrQdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWCrRtzqEeaMeaEvRdRzBA" base_Element="_RWCrRNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWDSUNzqEeaMeaEvRdRzBA" base_Element="_RWCrR9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWDSU9zqEeaMeaEvRdRzBA" base_Element="_RWDSUdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWDSVtzqEeaMeaEvRdRzBA" base_Element="_RWDSVNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWD5YNzqEeaMeaEvRdRzBA" base_Element="_RWDSV9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWD5Y9zqEeaMeaEvRdRzBA" base_Element="_RWD5YdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWD5ZtzqEeaMeaEvRdRzBA" base_Element="_RWD5ZNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWEgcNzqEeaMeaEvRdRzBA" base_Element="_RWD5Z9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWEgc9zqEeaMeaEvRdRzBA" base_Element="_RWEgcdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWEgdtzqEeaMeaEvRdRzBA" base_Element="_RWEgdNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWFHgNzqEeaMeaEvRdRzBA" base_Element="_RWEgd9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWFHg9zqEeaMeaEvRdRzBA" base_Element="_RWFHgdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWFukNzqEeaMeaEvRdRzBA" base_Element="_RWFHhNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWFuk9zqEeaMeaEvRdRzBA" base_Element="_RWFukdzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWFultzqEeaMeaEvRdRzBA" base_Element="_RWFulNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWGVoNzqEeaMeaEvRdRzBA" base_Element="_RWFul9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWGVo9zqEeaMeaEvRdRzBA" base_Element="_RWGVodzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWGVptzqEeaMeaEvRdRzBA" base_Element="_RWGVpNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWGVqdzqEeaMeaEvRdRzBA" base_Element="_RWGVp9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWG8stzqEeaMeaEvRdRzBA" base_Element="_RWG8sNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWG8tdzqEeaMeaEvRdRzBA" base_Element="_RWG8s9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWG8uNzqEeaMeaEvRdRzBA" base_Element="_RWG8ttzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWHjwtzqEeaMeaEvRdRzBA" base_Element="_RWHjwNzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWHjxdzqEeaMeaEvRdRzBA" base_Element="_RWHjw9zqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWHjyNzqEeaMeaEvRdRzBA" base_Element="_RWHjxtzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWIK0NzqEeaMeaEvRdRzBA" base_Element="_RWHjydzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWIK09zqEeaMeaEvRdRzBA" base_Element="_RWIK0dzqEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_RWIK1tzqEeaMeaEvRdRzBA" base_Element="_RWIK1NzqEeaMeaEvRdRzBA"/>
</xmi:XMI>
