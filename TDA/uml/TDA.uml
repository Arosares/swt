<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_Bksu4NzpEeaMeaEvRdRzBA" name="TDA">
    <eAnnotations xmi:id="_BvMusNzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_BvMusdzpEeaMeaEvRdRzBA" source="codegen">
        <details xmi:id="_BvNVwNzpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/src"/>
        <details xmi:id="_CqEbgNzpEeaMeaEvRdRzBA" key="AssociatedSourceCode" value="/TDA/src/tda/src/controller/Controller.java;1626122004/1;/TDA/src/tda/src/exceptions/WrongXMLAttributeException.java;1433118805/1;/TDA/src/tda/src/logic/Analyzer.java;2559399528/1;/TDA/src/tda/src/logic/Counters.java;3915960564/1;/TDA/src/tda/src/logic/Parser.java;4177923594/1;/TDA/src/tda/src/logic/StAXParser.java;237321266/1;/TDA/src/tda/src/logic/TestData.java;1683700078/1;/TDA/src/tda/src/logic/TestRun.java;4249523222/1;/TDA/src/tda/src/logic/TestRunStartTime.java;1854388698/1;/TDA/src/tda/src/logic/TestedClass.java;3977272468/1;/TDA/src/tda/src/logic/TreeNode.java;2680124610/1;/TDA/src/tda/src/logic/UnitTest.java;4231604347/1;/TDA/src/tda/src/logic/UnitTestsToTestRunMapper.java;1797588963/1;/TDA/test/TreeNodeTests.java;3392551099/1;/TDA/src/tda/src/logic/apriori/StrongRule.java;889339369/1;/TDA/src/tda/src/main/TDA.java;840845466/1;/TDA/src/tda/src/model/Model.java;3579044467/1;/TDA/src/tda/src/view/TDAAnalyzerView.java;1414241471/1;/TDA/src/tda/src/view/TDAChart.java;3332187249/1;/TDA/src/tda/src/view/TDAClassView.java;3325743499/1;/TDA/src/tda/src/view/TDAMenuBar.java;2369207099/1;/TDA/src/tda/src/view/TDATableView.java;3953803821/1;/TDA/src/tda/src/view/TDATestRunTotals.java;184701548/1;/TDA/src/tda/src/view/TDATreeView.java;1085733899/1;/TDA/src/tda/src/view/TDAcomparison.java;2639424816/1;/TDA/test/TestedClassTests.java;1409432206/1;/TDA/test/AllTests.java;3034773757/1;/TDA/test/CountersTests.java;1669155871/1;/TDA/test/TestDataTests.java;899771175/1;/TDA/test/TestRunStartTimeTests.java;1254219449/1;/TDA/test/TestRunTests.java;3437634974/1;/TDA/src/tda/src/view/View.java;1047224965/1;/TDA/src/tda/src/logic/apriori/AprioriAnalyzer.java;1880078505/1;/TDA/test/UnitTestTests.java;1013219599/1;/TDA/test/UnitTestsToTestRunMapperTests.java;4120553653/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_CNl64NzpEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_CNl64dzpEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_CNl64tzpEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_CNl649zpEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_CNl65NzpEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_CNl65dzpEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_CNl65tzpEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_CNmh8NzpEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_CNmh8dzpEeaMeaEvRdRzBA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_CUYfYNzpEeaMeaEvRdRzBA" name="TreeNodeTests">
      <eAnnotations xmi:id="_CUZGcNzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CUZGcdzpEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_CUZGctzpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_Cc6JQNzpEeaMeaEvRdRzBA" name="testRun1" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CeuHJtzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_Cc6JQtzpEeaMeaEvRdRzBA" name="testRun2" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CeuuMdzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_Cc6JRNzpEeaMeaEvRdRzBA" name="unitTests" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CeuuNNzpEeaMeaEvRdRzBA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cc6wUNzpEeaMeaEvRdRzBA" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_Cc6wUtzpEeaMeaEvRdRzBA" value="new UnitTest[10]"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Cc6wVNzpEeaMeaEvRdRzBA" name="root" visibility="private" type="_CUFkcNzpEeaMeaEvRdRzBA" association="_CevVQdzpEeaMeaEvRdRzBA">
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_Cc6wVdzpEeaMeaEvRdRzBA" value="new TreeNode(&quot;/&quot;, null, null)"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Cc6wV9zpEeaMeaEvRdRzBA" name="testedClass1" visibility="private" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_CevVRNzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_Cc7XYdzpEeaMeaEvRdRzBA" name="testedClass2" visibility="private" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_Cev8UdzpEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdtag9zpEeaMeaEvRdRzBA" name="setUp" specification="_CUbisdzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun1 = new TestRun(&quot;Run1&quot;, &quot;run-name-1&quot;);
		testRun2 = new TestRun(&quot;Run2&quot;, &quot;run-name-2&quot;);

		int half = unitTests.length / 2;

		for (int i = 0; i &lt; half; i++) {
			unitTests[i] = new UnitTest(testRun1, &quot;test&quot; + i, &quot;fooTest&quot; + i, &quot;Run1fooTest&quot; + i, &quot;testFooBar&quot;);
		}

		for (int i = half; i &lt; unitTests.length; i++) {
			unitTests[i] = new UnitTest(testRun2, &quot;test&quot; + i, &quot;fooTest&quot; + i, &quot;Run2fooTest&quot; + i, &quot;testFooBar&quot;);
		}

		testedClass1 = new TestedClass(&quot;Foo.Bar.hui&quot;, unitTests[0]);
		testedClass2 = new TestedClass(&quot;Foo.Bor.Argh&quot;, unitTests[9]);
		Queue&lt;String> packageName1 = new LinkedList&lt;String>();
		Queue&lt;String> packageName2 = new LinkedList&lt;String>();
		packageName1.addAll(testedClass1.getPackageName());
		packageName2.addAll(testedClass2.getPackageName());
		
		root.insert(packageName1, testedClass1);
		root.insert(packageName2, testedClass2);
		System.out.println(root.printTree(2));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdtahNzpEeaMeaEvRdRzBA" name="testGetDistanceFOUR" specification="_CUcJxNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TreeNode node1 = root.searchNode(&quot;hui&quot;);
		TreeNode node2 = root.searchNode(&quot;Argh&quot;);
		System.out.println(node1.printTree(0));
		System.out.println(node2.printTree(0));
		int distance = node1.getDistance(node2);

		assertEquals(4, distance);
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CUaUkNzpEeaMeaEvRdRzBA" name="setUpBeforeClass" isStatic="true" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CUa7otzpEeaMeaEvRdRzBA" name="tearDownAfterClass" isStatic="true" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CUbisdzpEeaMeaEvRdRzBA" name="setUp" method="_Cdtag9zpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CUcJwNzpEeaMeaEvRdRzBA" name="tearDown" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CUcJxNzpEeaMeaEvRdRzBA" name="testGetDistanceFOUR" method="_CdtahNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CNgbUNzpEeaMeaEvRdRzBA" name="tda">
      <packagedElement xmi:type="uml:Package" xmi:id="_CNgbUdzpEeaMeaEvRdRzBA" name="src">
        <packagedElement xmi:type="uml:Package" xmi:id="_CNiQgtzpEeaMeaEvRdRzBA" name="logic">
          <packagedElement xmi:type="uml:Interface" xmi:id="_CTNasNzpEeaMeaEvRdRzBA" name="Analyzer">
            <ownedOperation xmi:id="_CTNasdzpEeaMeaEvRdRzBA" name="analyze"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_COAxoNzpEeaMeaEvRdRzBA" name="apriori">
            <packagedElement xmi:type="uml:Class" xmi:id="_CUfNENzpEeaMeaEvRdRzBA" name="StrongRule">
              <ownedAttribute xmi:id="_Cc7XY9zpEeaMeaEvRdRzBA" name="leftSide" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" isReadOnly="true" association="_Cev8VNzpEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cc7XZNzpEeaMeaEvRdRzBA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Cc7-cNzpEeaMeaEvRdRzBA" name="rightSide" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" isReadOnly="true" association="_CewjYdzpEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cc7-cdzpEeaMeaEvRdRzBA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Cc7-ctzpEeaMeaEvRdRzBA" name="confidence" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Cc7-c9zpEeaMeaEvRdRzBA" name="maxDistance" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Cb6DsNzpEeaMeaEvRdRzBA" client="_CUfNENzpEeaMeaEvRdRzBA" supplier="_Cbz9ENzpEeaMeaEvRdRzBA" contract="_Cbz9ENzpEeaMeaEvRdRzBA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CduBkNzpEeaMeaEvRdRzBA" name="StrongRule" specification="_Cb7R0NzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CduBkdzpEeaMeaEvRdRzBA" name="leftSide" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CduBktzpEeaMeaEvRdRzBA" name="rightSide" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CduBk9zpEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CduBlNzpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>this.leftSide = leftSide;
		this.rightSide = rightSide;
		setConfidence(confidence);
		maxDistance = computeMaxDistance();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CduBldzpEeaMeaEvRdRzBA" name="computeMaxDistance" specification="_CUgbMNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CduBltzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>int maxDistance = 0;
		
		// Distance between left and right side
		for (TestedClass leftClass : leftSide) {
			for (TestedClass rightClass : rightSide) {
				int distance = getDistance(leftClass, rightClass);
				if (distance > maxDistance) {
					maxDistance = distance;
				}
			}
		}
		
		// Distance for only the left side
		int distance = getMaxDistance(leftSide);
		if (distance > maxDistance) {
			maxDistance = distance;
		}
		
		// Distance for only the right side
		distance = getMaxDistance(rightSide);
		if (distance > maxDistance) {
			maxDistance = distance;
		}
	
		return maxDistance;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CduBl9zpEeaMeaEvRdRzBA" name="getMaxDistance" specification="_Cb8f8NzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CduBmNzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CduBmdzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (testedClasses.size() >= 2) return 0;
		
		int maxDistance = 0;
		
		for (int i = 0; i &lt; testedClasses.size() - 1; i++) {
			for (int j = i + 1; j &lt; testedClasses.size(); j++) {
				int distance = getDistance(testedClasses.get(i), testedClasses.get(j));
				if (distance > maxDistance) {
					maxDistance = distance;
				}
			}
		}
		return maxDistance;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CduBmtzpEeaMeaEvRdRzBA" name="getDistance" specification="_CalOANzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CduBm9zpEeaMeaEvRdRzBA" name="classLeft" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CduBnNzpEeaMeaEvRdRzBA" name="classRight" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CduBndzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>TreeNode root = TestData.getInstance().getRoot();
		TreeNode leftNode = root.searchNode(classLeft.getClassName());
		TreeNode rightNode = root.searchNode(classRight.getClassName());
		
		return leftNode.getDistance(rightNode);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CduooNzpEeaMeaEvRdRzBA" name="setConfidence" specification="_CUhCQNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CduoodzpEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>// limit double to two digits after comma
		int round = (int) Math.round(confidence * 100);
		this.confidence = round / 100.0;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CduootzpEeaMeaEvRdRzBA" name="print" specification="_CUhCQtzpEeaMeaEvRdRzBA">
                <language>java</language>
                <body>System.out.println(toString());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cduoo9zpEeaMeaEvRdRzBA" name="toString" specification="_CUhpUNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CduopNzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return leftSide + &quot; -> &quot; + rightSide + &quot; | &quot; + confidence * 100 + &quot;%&quot;;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CduopdzpEeaMeaEvRdRzBA" name="compareTo" specification="_CalOBNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CduoptzpEeaMeaEvRdRzBA" name="other" type="_CUfNENzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Cduop9zpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (other.confidence > this.confidence) {
			return 1;
		} else if (other.confidence &lt; this.confidence) {
			return -1;
		} else {
			return 0;
		}
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_CUgbMNzpEeaMeaEvRdRzBA" name="computeMaxDistance" visibility="private" method="_CduBldzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CUgbMdzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CUhCQNzpEeaMeaEvRdRzBA" name="setConfidence" visibility="private" method="_CduooNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CUhCQdzpEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CUhCQtzpEeaMeaEvRdRzBA" name="print" method="_CduootzpEeaMeaEvRdRzBA"/>
              <ownedOperation xmi:id="_CUhpUNzpEeaMeaEvRdRzBA" name="toString" method="_Cduoo9zpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CUhpUdzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CalOANzpEeaMeaEvRdRzBA" name="getDistance" visibility="private" method="_CduBmtzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CalOAdzpEeaMeaEvRdRzBA" name="classLeft" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CalOAtzpEeaMeaEvRdRzBA" name="classRight" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CalOA9zpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CalOBNzpEeaMeaEvRdRzBA" name="compareTo" method="_CduopdzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CalOBdzpEeaMeaEvRdRzBA" name="other" type="_CUfNENzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Cal1ENzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Cb7R0NzpEeaMeaEvRdRzBA" name="StrongRule" method="_CduBkNzpEeaMeaEvRdRzBA">
                <eAnnotations xmi:id="_Cb7R1NzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Cb7R1dzpEeaMeaEvRdRzBA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Cb7R0dzpEeaMeaEvRdRzBA" name="leftSide" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Cb7R0tzpEeaMeaEvRdRzBA" name="rightSide" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Cb7R09zpEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Cb7R1tzpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Cb8f8NzpEeaMeaEvRdRzBA" name="getMaxDistance" visibility="private" method="_CduBl9zpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_Cb8f8dzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Cb8f8tzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_CWO5gNzpEeaMeaEvRdRzBA" name="AprioriAnalyzer">
              <ownedComment xmi:id="_CeUegtzpEeaMeaEvRdRzBA">
                <body>@author Tobias Schwartz
@version 2017-01-17
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_CdTx4NzpEeaMeaEvRdRzBA" name="minSupport" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CdTx4tzpEeaMeaEvRdRzBA" name="minConfidence" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CdUY8dzpEeaMeaEvRdRzBA" name="items" visibility="package" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" association="_Cfcf5NzpEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdUY8tzpEeaMeaEvRdRzBA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdUY89zpEeaMeaEvRdRzBA" value="new LinkedList&lt;TestedClass>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CdUY9dzpEeaMeaEvRdRzBA" name="transactions" visibility="package" type="_CTwNQNzpEeaMeaEvRdRzBA" isOrdered="true" association="_CfdG8NzpEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdUY9tzpEeaMeaEvRdRzBA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdUY99zpEeaMeaEvRdRzBA" value="new LinkedList&lt;TestRun>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CdVAAdzpEeaMeaEvRdRzBA" name="itemSet" visibility="package" type="_CaqGgNzpEeaMeaEvRdRzBA" association="_CfdG89zpEeaMeaEvRdRzBA"/>
              <ownedAttribute xmi:id="_CdVnENzpEeaMeaEvRdRzBA" name="cachedStrongRules" visibility="package" type="_CUfNENzpEeaMeaEvRdRzBA" isOrdered="true" association="_CfdG9tzpEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdVnEdzpEeaMeaEvRdRzBA" value="*"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdVnEtzpEeaMeaEvRdRzBA" value="new LinkedList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CdVnFNzpEeaMeaEvRdRzBA" name="cachedFrequentItemSets" visibility="package" type="_CaqGgNzpEeaMeaEvRdRzBA" association="_CfduAdzpEeaMeaEvRdRzBA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdWOINzpEeaMeaEvRdRzBA" value="new HashMap&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CdWOItzpEeaMeaEvRdRzBA" name="failedPercentage" visibility="private" isLeaf="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdWOI9zpEeaMeaEvRdRzBA" value="15"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_CbaUcdzpEeaMeaEvRdRzBA" client="_CWO5gNzpEeaMeaEvRdRzBA" supplier="_CTNasNzpEeaMeaEvRdRzBA" contract="_CTNasNzpEeaMeaEvRdRzBA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeA8gNzpEeaMeaEvRdRzBA" name="AprioriAnalyzer" specification="_CWQHoNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeA8gdzpEeaMeaEvRdRzBA" type="_CWO5gNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>newAprioriAnalyzer(0.8);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeA8gtzpEeaMeaEvRdRzBA" name="AprioriAnalyzer" specification="_CWQusNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeA8g9zpEeaMeaEvRdRzBA" name="minConfidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CeA8hNzpEeaMeaEvRdRzBA" type="_CWO5gNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>newAprioriAnalyzer(minConfidence);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeA8hdzpEeaMeaEvRdRzBA" name="newAprioriAnalyzer" specification="_CWRVwNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeA8htzpEeaMeaEvRdRzBA" name="minConfidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <language>java</language>
                <body>itemSet = new HashMap&lt;List&lt;TestedClass>, Integer>();

		this.minConfidence = minConfidence;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeA8h9zpEeaMeaEvRdRzBA" name="analyze" specification="_CWR80NzpEeaMeaEvRdRzBA">
                <language>java</language>
                <body>items = TestData.getInstance().getTestedClasses();
		transactions = TestData.getInstance().getTestRunList();
		
		minSupport = transactions.size() / 2;
		
		System.out.println(&quot;Starting Apriori with minimum support of &quot; + this.minSupport);

		// 1. Generate frequent item sets
		System.out.println(&quot;\nMaximal Frequent Item Sets:&quot;);
		HashMap&lt;List&lt;TestedClass>, Integer> frequentItemSet = getMaxFrequentItemSet();
		printItemSet(frequentItemSet);

		// 2. Generate strong rules from frequent item sets
		System.out.println(&quot;\nStrong Rules&quot;);
		List&lt;StrongRule> strongRules = generateStrongRules(frequentItemSet);
		
		// 3. Update Cache
		cachedFrequentItemSets = frequentItemSet;
		cachedStrongRules = strongRules;
		
		strongRules = getStrongRules(minConfidence); 
		for (StrongRule strongRule : strongRules) {
			strongRule.print();
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeA8iNzpEeaMeaEvRdRzBA" name="getStrongRules" specification="_CWSj4NzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeA8idzpEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CeA8itzpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CeA8i9zpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (cachedStrongRules.isEmpty()) {
			analyze();
		}
		return cachedStrongRules
				.stream()
				.parallel()
				.filter(rule -> rule.getConfidence() >= confidence)
				.sorted()
				.collect(Collectors.toList());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeBjkNzpEeaMeaEvRdRzBA" name="getStrongRules" specification="_CWTK8NzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeBjkdzpEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CeBjktzpEeaMeaEvRdRzBA" name="distance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CeBjk9zpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CeBjlNzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (cachedStrongRules.isEmpty()) {
			analyze();
		}
		
		return cachedStrongRules
				.stream()
				.parallel()
				.filter(rule -> rule.getConfidence() >= confidence)
				.filter(rule -> rule.getMaxDistance() &lt;= distance)
				.sorted()
				.collect(Collectors.toList());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeBjldzpEeaMeaEvRdRzBA" name="getFrequentItemSets" specification="_CWTK9dzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeBjltzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>if (cachedFrequentItemSets.isEmpty()) {
			analyze();
		}
		return cachedFrequentItemSets;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeBjl9zpEeaMeaEvRdRzBA" name="generateStrongRules" specification="_CcVhgdzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeBjmNzpEeaMeaEvRdRzBA" name="frequentItemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeBjmdzpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CeBjmtzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;StrongRule> strongRules = new LinkedList&lt;>();

		for (Entry&lt;List&lt;TestedClass>, Integer> entry : frequentItemSet.entrySet()) {
			List&lt;TestedClass> entryKey = entry.getKey();

			HashMap&lt;List&lt;TestedClass>, Integer> powerItemSet = getPowerSet(entryKey);
			updateItemSet(powerItemSet);

			strongRules.addAll(generateStrongRulesForEntry(powerItemSet, entryKey));
		}

		return strongRules;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeBjm9zpEeaMeaEvRdRzBA" name="generateStrongRulesForEntry" specification="_CcWvoNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeBjnNzpEeaMeaEvRdRzBA" name="powerItemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeBjndzpEeaMeaEvRdRzBA" name="fullKey" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeBjntzpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CeBjn9zpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;StrongRule> strongRules = new LinkedList&lt;>();

		// S -> (I - S)
		for (Entry&lt;List&lt;TestedClass>, Integer> entry : powerItemSet.entrySet()) {
			List&lt;TestedClass> entryKey = entry.getKey();
			if (entryKey.size() >= 1 &amp;&amp; entryKey.size() &lt; fullKey.size()) {
				List&lt;TestedClass> leftSide = entryKey;
				List&lt;TestedClass> rightSide = new LinkedList&lt;>();
				rightSide.addAll(fullKey);
				rightSide.removeAll(leftSide);

				// conf = support (I) / support (S)
				double confidence = (double) powerItemSet.get(fullKey) / entry.getValue();
				StrongRule strongRule = new StrongRule(leftSide, rightSide, confidence);
				strongRules.add(strongRule);
			}
		}
		return strongRules;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeBjoNzpEeaMeaEvRdRzBA" name="getPowerSet" specification="_CcXWsdzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeBjodzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeBjotzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;List&lt;TestedClass>, Integer> powerItemSet = new HashMap&lt;>();
		for (int i = 1; i &lt;= testedClasses.size(); i++) {
			powerItemSet.putAll(generateFixedSubset(i, testedClasses));
		}
		return powerItemSet;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeCKoNzpEeaMeaEvRdRzBA" name="getMaxFrequentItemSet" specification="_CWUZENzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeCKodzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>// Generate first item set as basis for the algorithm
		HashMap&lt;List&lt;TestedClass>, Integer> itemSet = getFirstItemSet();
		HashMap&lt;List&lt;TestedClass>, Integer> frqItemSet = pruneItemSet(itemSet, minSupport);

		// Helper to keep track of the last non empty frequent item set
		HashMap&lt;List&lt;TestedClass>, Integer> oldFrqItemSet = new HashMap&lt;List&lt;TestedClass>, Integer>();

		// Max frequent item set - to be returned
		HashMap&lt;List&lt;TestedClass>, Integer> maxFrequentItemSet = new HashMap&lt;List&lt;TestedClass>, Integer>();

		// length of item set
		int k = 1;

		while (!frqItemSet.isEmpty()) {
			oldFrqItemSet = frqItemSet;
			
			itemSet = initializeNewItemSet(frqItemSet, k + 1);
			updateItemSet(itemSet);

			itemSet = pruneItemSet(itemSet, minSupport);
			frqItemSet = eliminateInsignificantItems(itemSet, oldFrqItemSet);
			
			/*
			* if an entry of the old item set is not a subset of any new frq item set
			* (i.e. possible rule but no further correlations)
			* and its key size is greater than 2 (i.e. a rule can be obtained)
			* then add this entry to the max frequent item set
			*/
			for (Entry&lt;List&lt;TestedClass>, Integer> entry : oldFrqItemSet.entrySet()) {
				if (entry.getKey().size() >= 2 &amp;&amp; !isSubset(entry, frqItemSet)) {
					maxFrequentItemSet.putIfAbsent(entry.getKey(), entry.getValue());
				}
			}
			
			k++;
		}

		return maxFrequentItemSet;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeCKotzpEeaMeaEvRdRzBA" name="isSubset" specification="_CcYk0dzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeCKo9zpEeaMeaEvRdRzBA" name="entry" type="_CaqGgtzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeCKpNzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeCKpdzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return itemSet.keySet().stream().anyMatch(key -> key.containsAll(entry.getKey()));
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeCKptzpEeaMeaEvRdRzBA" name="eliminateInsignificantItems" specification="_CcZy8NzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeCKp9zpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeCKqNzpEeaMeaEvRdRzBA" name="oldItemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeCKqdzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;List&lt;TestedClass>, Integer> result = new HashMap&lt;>();

		for (Entry&lt;List&lt;TestedClass>, Integer> entry : itemSet.entrySet()) {
			HashMap&lt;List&lt;TestedClass>, Integer> subset = generateFixedSubset(entry.getKey().size() - 1, entry.getKey());
			if (subset.entrySet().stream().allMatch(e -> oldItemSet.containsKey(e.getKey()))) {
				result.put(entry.getKey(), entry.getValue());
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeCKqtzpEeaMeaEvRdRzBA" name="updateItemSet" specification="_CcbBEdzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeCKq9zpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>itemSet.values().parallelStream().map(v -> v = 0);
		
		for (TestRun testRun : transactions) {
			for (Entry&lt;List&lt;TestedClass>, Integer> entry : itemSet.entrySet()) {
				if (getFailedClasses(testRun).containsAll(entry.getKey())) {
					incrementItemSetValue(itemSet, entry.getKey());
				}
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeCKrNzpEeaMeaEvRdRzBA" name="initializeNewItemSet" specification="_CcboIdzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeCKrdzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeCKrtzpEeaMeaEvRdRzBA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CeCKr9zpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>List&lt;TestedClass> allTestedClasses = extractTestedClasses(itemSet);

		return generateFixedSubset(length, allTestedClasses);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeCxsNzpEeaMeaEvRdRzBA" name="extractTestedClasses" specification="_Ccc2QNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeCxsdzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeCxstzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CeCxs9zpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;TestedClass> result = new LinkedList&lt;TestedClass>();
		for (List&lt;TestedClass> testedClasses : itemSet.keySet()) {
			for (TestedClass testedClass : testedClasses) {
				if (!result.contains(testedClass)) {
					result.add(testedClass);
				}
			}
		}
		return result;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeCxtNzpEeaMeaEvRdRzBA" name="pruneItemSet" specification="_CcddUdzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeCxtdzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeCxttzpEeaMeaEvRdRzBA" name="minSupport">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CeCxt9zpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;List&lt;TestedClass>, Integer> frqItemSet = new HashMap&lt;>();
		for (Entry&lt;List&lt;TestedClass>, Integer> entry : itemSet.entrySet()) {
			if (entry.getValue() >= Integer.valueOf(minSupport)) {
				frqItemSet.put(entry.getKey(), entry.getValue());
			}
		}
		return frqItemSet;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeCxuNzpEeaMeaEvRdRzBA" name="getFirstItemSet" specification="_CWWOQNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeCxudzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>return transactions.stream().map(testRun -> getFailedClasses(testRun)).collect(HashMap::new,
				(itemSet, testedClass) -> addTestedClassesToFirstItemSet(itemSet, testedClass), HashMap::putAll);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeCxutzpEeaMeaEvRdRzBA" name="addTestedClassesToFirstItemSet" specification="_CcercNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeCxu9zpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeCxvNzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>for (TestedClass testedClass : testedClasses) {
			addTestedClassToItemSet(itemSet, testedClass);
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeDYwNzpEeaMeaEvRdRzBA" name="addTestedClassToItemSet" specification="_CcfSgtzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeDYwdzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeDYwtzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>List&lt;TestedClass> testedClassList = new LinkedList&lt;TestedClass>();
		testedClassList.add(testedClass);
		incrementItemSetValue(itemSet, testedClassList);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeDYw9zpEeaMeaEvRdRzBA" name="incrementItemSetValue" specification="_CcggoNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeDYxNzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeDYxdzpEeaMeaEvRdRzBA" name="key" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>Integer value = itemSet.getOrDefault(key, 0);
		itemSet.put(key, value + 1);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeDYxtzpEeaMeaEvRdRzBA" name="printItemSet" specification="_CchHsdzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeDYx9zpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <language>java</language>
                <body>Set&lt;List&lt;TestedClass>> keySet = itemSet.keySet();
		for (List&lt;TestedClass> key : keySet) {
			int counter = 0;
			System.out.print(&quot;[&quot;);
			for (TestedClass testedClass : key) {
				System.out.print(testedClass.getClassName());
				if (counter &lt; key.size() - 1) {
					System.out.print(&quot;, &quot;);
					counter ++;
				}
			}
			System.out.print(&quot;] = &quot; + itemSet.get(key) + &quot;\n&quot;);
		}
		System.out.println();
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeDYyNzpEeaMeaEvRdRzBA" name="getFailedClasses" specification="_CbcJoNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeDYydzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeDYytzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CeDYy9zpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return getFailedClasses(failedPercentage, testRun);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeD_0NzpEeaMeaEvRdRzBA" name="getFailedClasses" specification="_CbcJpNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeD_0dzpEeaMeaEvRdRzBA" name="failurePercentage">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CeD_0tzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeD_09zpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CeD_1NzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return items.stream().parallel()
				.filter(testedClass -> testedClass.getFailurePercentageByTestrun(testRun) > failurePercentage)
				.collect(Collectors.toList());
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeD_1dzpEeaMeaEvRdRzBA" name="generateFixedSubset" specification="_CchuwNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeD_1tzpEeaMeaEvRdRzBA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CeD_19zpEeaMeaEvRdRzBA" name="allTestedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeD_2NzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>// generating all possible combinations with length k
		// based on: http://stackoverflow.com/questions/29910312/algorithm-to-get-all-the-combinations-of-size-n-from-an-array-java

		HashMap&lt;List&lt;TestedClass>, Integer> newItemSet = new HashMap&lt;>();

		int[] indices = new int[length];

		if (length &lt;= allTestedClasses.size()) {
			// first index sequence: 0, 1, 2, ...
			for (int i = 0; (indices[i] = i) &lt; length - 1; i++)
				;
			newItemSet.put(getSubset(allTestedClasses, indices), 0);
			for (;;) {
				int i;
				// find position of item that can be incremented
				for (i = length - 1; i >= 0 &amp;&amp; indices[i] == allTestedClasses.size() - length + i; i--)
					;
				if (i &lt; 0) {
					break;
				} else {
					indices[i]++; // increment this item
					for (++i; i &lt; length; i++) { // fill up remaining items
						indices[i] = indices[i - 1] + 1;
					}
					newItemSet.put(getSubset(allTestedClasses, indices), 0);
				}
			}
		}
		return newItemSet;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeD_2dzpEeaMeaEvRdRzBA" name="getSubset" specification="_CciV0dzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CeD_2tzpEeaMeaEvRdRzBA" name="allTestedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CeD_29zpEeaMeaEvRdRzBA" name="subset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CeD_3NzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CeD_3dzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CeD_3tzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;TestedClass> result = new ArrayList&lt;>(subset.length);

		for (int i = 0; i &lt; subset.length; i++) {
			result.add(i, allTestedClasses.get(subset[i]));
		}

		return result;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_CWQHoNzpEeaMeaEvRdRzBA" name="AprioriAnalyzer" method="_CeA8gNzpEeaMeaEvRdRzBA">
                <eAnnotations xmi:id="_CWQHodzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_CWQHotzpEeaMeaEvRdRzBA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_CeVFkNzpEeaMeaEvRdRzBA">
                  <body>Creates a new {@link AprioriAnalyzer} with 
	 * support = number of transactions / 2
	 * confidence = 80 %</body>
                </ownedComment>
                <ownedParameter xmi:id="_CWQHo9zpEeaMeaEvRdRzBA" type="_CWO5gNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CWQusNzpEeaMeaEvRdRzBA" name="AprioriAnalyzer" method="_CeA8gtzpEeaMeaEvRdRzBA">
                <eAnnotations xmi:id="_CWQustzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_CWQus9zpEeaMeaEvRdRzBA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_CWQusdzpEeaMeaEvRdRzBA" name="minConfidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CWQutNzpEeaMeaEvRdRzBA" type="_CWO5gNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CWRVwNzpEeaMeaEvRdRzBA" name="newAprioriAnalyzer" visibility="private" method="_CeA8hdzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CWRVwdzpEeaMeaEvRdRzBA" name="minConfidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CWR80NzpEeaMeaEvRdRzBA" name="analyze" method="_CeA8h9zpEeaMeaEvRdRzBA"/>
              <ownedOperation xmi:id="_CWSj4NzpEeaMeaEvRdRzBA" name="getStrongRules" method="_CeA8iNzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFkdzpEeaMeaEvRdRzBA">
                  <body>Retrieves all strong rules above the given confidence.
	 * Uses cached results, if possible.
	 * 
	 * @param confidence
	 * 		confidence value between 0 and 1
	 * @return
	 * 		{@link List} of {@link StrongRule}s</body>
                </ownedComment>
                <ownedParameter xmi:id="_CWSj4dzpEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CWSj4tzpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CWSj49zpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CWTK8NzpEeaMeaEvRdRzBA" name="getStrongRules" method="_CeBjkNzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFktzpEeaMeaEvRdRzBA">
                  <body>Retrieves all strong rules above the given confidence,
	 * but with a class distance smaller or equal than the given distance.
	 * Uses cached results, if possible.
	 * 
	 * @param confidence
	 * 		confidence value between 0 and 1
	 * @param distance
	 * 		maximum distance between the classes of the {@link StrongRule}
	 * @return
	 * 		{@link List} of {@link StrongRule}s</body>
                </ownedComment>
                <ownedParameter xmi:id="_CWTK8dzpEeaMeaEvRdRzBA" name="confidence">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CWTK8tzpEeaMeaEvRdRzBA" name="distance">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CWTK89zpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CWTK9NzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CWTK9dzpEeaMeaEvRdRzBA" name="getFrequentItemSets" method="_CeBjldzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFk9zpEeaMeaEvRdRzBA">
                  <body>Retrieves the maximal frequent item sets generated by the Apriori algorithm.
	 * Uses cached results, if possible.
	 * 
	 * @return
	 * 		The maximal frequent item set using a {@link HashMap}</body>
                </ownedComment>
                <ownedParameter xmi:id="_CcVhgNzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CWUZENzpEeaMeaEvRdRzBA" name="getMaxFrequentItemSet" visibility="private" method="_CeCKoNzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFltzpEeaMeaEvRdRzBA">
                  <body>Generates the maximal frequent item set by steadily increasing length k. Item
	 * sets below the minimum support are pruned and therefore not used in
	 * further computations.
	 * 
	 * @return The maximal frequent item set</body>
                </ownedComment>
                <ownedParameter xmi:id="_CcYk0NzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CWWOQNzpEeaMeaEvRdRzBA" name="getFirstItemSet" visibility="private" method="_CeCxuNzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVsoNzpEeaMeaEvRdRzBA">
                  <body>Maps every TestRun to its TestedClasses with a FP higher then a certain
	 * bound (field: failurePercentage)
	 * 
	 * @return HasMap, containing one List for each TestRun containing the
	 *         selected TestedClasses</body>
                </ownedComment>
                <ownedParameter xmi:id="_CceEYtzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CbcJoNzpEeaMeaEvRdRzBA" name="getFailedClasses" visibility="private" method="_CeDYyNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CbcJodzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CbcJotzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CbcJo9zpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CbcJpNzpEeaMeaEvRdRzBA" name="getFailedClasses" visibility="private" method="_CeD_0NzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVsotzpEeaMeaEvRdRzBA">
                  <body>@param failurePercentage
	 *            the min FP a class should have in the List
	 * @param testRun
	 *            The TestRun which will be searched for classes
	 * @return List of TestedClasses containing only classes with higher FP as
	 *         the param failurePercentage</body>
                </ownedComment>
                <ownedParameter xmi:id="_CbcJpdzpEeaMeaEvRdRzBA" name="failurePercentage">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CbcJptzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CbcwsNzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CbcwsdzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CcVhgdzpEeaMeaEvRdRzBA" name="generateStrongRules" visibility="private" method="_CeBjl9zpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFlNzpEeaMeaEvRdRzBA">
                  <body>Generates the strong rules from a given frequent item set
	 * 
	 * @param frequentItemSet
	 *            The frequent item set used for generation of strong rules
	 * @return A {@link list} of all possible {@link StrongRule}s</body>
                </ownedComment>
                <ownedParameter xmi:id="_CcVhgtzpEeaMeaEvRdRzBA" name="frequentItemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcVhg9zpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CcVhhNzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CcWvoNzpEeaMeaEvRdRzBA" name="generateStrongRulesForEntry" visibility="private" method="_CeBjm9zpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFldzpEeaMeaEvRdRzBA">
                  <body>Generates the strong rules for the powerset of one item set entry
	 * 
	 * @param powerItemSet
	 * 			The powerset of the given key 
	 * @param fullKey
	 * 			The key itself
	 * @return
	 * 			A List of this entry's {@link StrongRule}s</body>
                </ownedComment>
                <ownedParameter xmi:id="_CcWvodzpEeaMeaEvRdRzBA" name="powerItemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcWvotzpEeaMeaEvRdRzBA" name="fullKey" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcWvo9zpEeaMeaEvRdRzBA" type="_CUfNENzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CcWvpNzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CcXWsdzpEeaMeaEvRdRzBA" name="getPowerSet" visibility="private" method="_CeBjoNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CcXWstzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcX9wdzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CcYk0dzpEeaMeaEvRdRzBA" name="isSubset" visibility="private" method="_CeCKotzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFl9zpEeaMeaEvRdRzBA">
                  <body>An entry e is the subset of another item set I, 
	 * if there exists at least one entry e' in I
	 * so that e' contains all elements of e.
	 *    
	 * @return
	 * 		true if e is subset of I</body>
                </ownedComment>
                <ownedParameter xmi:id="_CcYk0tzpEeaMeaEvRdRzBA" name="entry" type="_CaqGgtzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcYk09zpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcYk1NzpEeaMeaEvRdRzBA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CcZy8NzpEeaMeaEvRdRzBA" name="eliminateInsignificantItems" visibility="private" method="_CeCKptzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFmNzpEeaMeaEvRdRzBA">
                  <body>Eliminates the insignificant items from the given item set by creating a new item set with only the significant items.
	 * An item is significant, if all possible items with key length - 1 were included in the previous iteration
	 * (i.e. are part of the previous item set)
	 *  
	 * @param itemSet
	 * 		item set to be filtered
	 * @param oldItemSet
	 * 		item set of the previous iteration
	 * @return
	 * 		item set containing only significant items</body>
                </ownedComment>
                <ownedParameter xmi:id="_CcZy8dzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcZy8tzpEeaMeaEvRdRzBA" name="oldItemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcaaANzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CcbBEdzpEeaMeaEvRdRzBA" name="updateItemSet" visibility="private" method="_CeCKqtzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFmdzpEeaMeaEvRdRzBA">
                  <body>Analyzes the support count of the given item set.
	 * Important notice: The algorithm works directly on the given item set.
	 * Hence, the item set is overwritten by this algorithm.
	 * This allows for usage without any return value.
	 *  
	 * @param itemSet
	 * 		The item set to be (re)analyzed</body>
                </ownedComment>
                <ownedParameter xmi:id="_CcbBEtzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CcboIdzpEeaMeaEvRdRzBA" name="initializeNewItemSet" visibility="private" method="_CeCKrNzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFmtzpEeaMeaEvRdRzBA">
                  <body>Uses the given item set to generate a new item set with all possible key combinations with length k.   
	 * Entry value is 0
	 * 
	 * @param itemSet
	 * 		the item set the algorithm is based on
	 * @param length
	 * 		the required key length k 
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_CcboItzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcboI9zpEeaMeaEvRdRzBA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CccPMdzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ccc2QNzpEeaMeaEvRdRzBA" name="extractTestedClasses" visibility="private" method="_CeCxsNzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFm9zpEeaMeaEvRdRzBA">
                  <body>Extracts a {@link List} of all {@link TestedClass}es contained in the given item set
	 * @param itemSet
	 * 		Item set used for extraction
	 * @return
	 * 		A {@link List} of all {@link TestedClass}es contained in the item set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ccc2QdzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Ccc2QtzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ccc2Q9zpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CcddUdzpEeaMeaEvRdRzBA" name="pruneItemSet" visibility="private" method="_CeCxtNzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVFnNzpEeaMeaEvRdRzBA">
                  <body>Removes all items not satisfying the given minimum support.
	 * 
	 * @param itemSet
	 * @param minSupport
	 * @return
	 * 		Item set with all items with value >= minimum support</body>
                </ownedComment>
                <ownedParameter xmi:id="_CcddUtzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcddU9zpEeaMeaEvRdRzBA" name="minSupport">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CceEYNzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CcercNzpEeaMeaEvRdRzBA" name="addTestedClassesToFirstItemSet" visibility="private" method="_CeCxutzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CcercdzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcerctzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CcfSgtzpEeaMeaEvRdRzBA" name="addTestedClassToItemSet" visibility="private" method="_CeDYwNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_Ccf5kNzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Ccf5kdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CcggoNzpEeaMeaEvRdRzBA" name="incrementItemSetValue" visibility="private" method="_CeDYw9zpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CcggodzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcggotzpEeaMeaEvRdRzBA" name="key" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CchHsdzpEeaMeaEvRdRzBA" name="printItemSet" visibility="private" method="_CeDYxtzpEeaMeaEvRdRzBA">
                <ownedComment xmi:id="_CeVsodzpEeaMeaEvRdRzBA">
                  <body>Helper function to output an item set on the console
	 * @param itemSet
	 * 		item set to be printed</body>
                </ownedComment>
                <ownedParameter xmi:id="_CchHstzpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CchuwNzpEeaMeaEvRdRzBA" name="generateFixedSubset" visibility="private" method="_CeD_1dzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CchuwdzpEeaMeaEvRdRzBA" name="length">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CchuwtzpEeaMeaEvRdRzBA" name="allTestedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CchuxNzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CciV0dzpEeaMeaEvRdRzBA" name="getSubset" visibility="package" method="_CeD_2dzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CciV0tzpEeaMeaEvRdRzBA" name="allTestedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CciV09zpEeaMeaEvRdRzBA" name="subset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cci84dzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CciV1NzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CciV1dzpEeaMeaEvRdRzBA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Cev8VNzpEeaMeaEvRdRzBA" name="" memberEnd="_Cev8VdzpEeaMeaEvRdRzBA _Cc7XY9zpEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_Cev8VdzpEeaMeaEvRdRzBA" name="" type="_CUfNENzpEeaMeaEvRdRzBA" association="_Cev8VNzpEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_CewjYdzpEeaMeaEvRdRzBA" name="" memberEnd="_CewjYtzpEeaMeaEvRdRzBA _Cc7-cNzpEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_CewjYtzpEeaMeaEvRdRzBA" name="" type="_CUfNENzpEeaMeaEvRdRzBA" association="_CewjYdzpEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_Cfcf5NzpEeaMeaEvRdRzBA" name="" memberEnd="_Cfcf5dzpEeaMeaEvRdRzBA _CdUY8dzpEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_Cfcf5dzpEeaMeaEvRdRzBA" name="" type="_CWO5gNzpEeaMeaEvRdRzBA" association="_Cfcf5NzpEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_CfdG8NzpEeaMeaEvRdRzBA" name="" memberEnd="_CfdG8dzpEeaMeaEvRdRzBA _CdUY9dzpEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_CfdG8dzpEeaMeaEvRdRzBA" name="" type="_CWO5gNzpEeaMeaEvRdRzBA" association="_CfdG8NzpEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_CfdG89zpEeaMeaEvRdRzBA" name="" memberEnd="_CfdG9NzpEeaMeaEvRdRzBA _CdVAAdzpEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_CfdG9NzpEeaMeaEvRdRzBA" name="" type="_CWO5gNzpEeaMeaEvRdRzBA" association="_CfdG89zpEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_CfdG9tzpEeaMeaEvRdRzBA" name="" memberEnd="_CfdG99zpEeaMeaEvRdRzBA _CdVnENzpEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_CfdG99zpEeaMeaEvRdRzBA" name="" type="_CWO5gNzpEeaMeaEvRdRzBA" association="_CfdG9tzpEeaMeaEvRdRzBA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_CfduAdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfduAtzpEeaMeaEvRdRzBA _CdVnFNzpEeaMeaEvRdRzBA">
              <ownedEnd xmi:id="_CfduAtzpEeaMeaEvRdRzBA" name="" type="_CWO5gNzpEeaMeaEvRdRzBA" association="_CfduAdzpEeaMeaEvRdRzBA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CTOBwNzpEeaMeaEvRdRzBA" name="Counters">
            <ownedAttribute xmi:id="_Ccst4NzpEeaMeaEvRdRzBA" name="sumAborted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Ccst4tzpEeaMeaEvRdRzBA" name="sumCompleted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Ccst5NzpEeaMeaEvRdRzBA" name="sumDisconnected" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CctU8dzpEeaMeaEvRdRzBA" name="sumError" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CctU89zpEeaMeaEvRdRzBA" name="sumExecuted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CctU9dzpEeaMeaEvRdRzBA" name="sumFailed" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cct8AdzpEeaMeaEvRdRzBA" name="sumInProgress" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cct8A9zpEeaMeaEvRdRzBA" name="sumInconclusive" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cct8BdzpEeaMeaEvRdRzBA" name="sumNotExecuted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CcujEdzpEeaMeaEvRdRzBA" name="sumNotRunnable" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CcujE9zpEeaMeaEvRdRzBA" name="sumPassed" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CcujFdzpEeaMeaEvRdRzBA" name="sumPassedButRunAborted" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CcvKIdzpEeaMeaEvRdRzBA" name="sumPending" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CcvKI9zpEeaMeaEvRdRzBA" name="sumTimeOut" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CcvKJdzpEeaMeaEvRdRzBA" name="sumTotal" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CcvxMdzpEeaMeaEvRdRzBA" name="sumWarning" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdfYENzpEeaMeaEvRdRzBA" name="Counters" specification="_CTP28NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdfYEdzpEeaMeaEvRdRzBA" name="sumAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYEtzpEeaMeaEvRdRzBA" name="sumCompleted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYE9zpEeaMeaEvRdRzBA" name="sumDisconnected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYFNzpEeaMeaEvRdRzBA" name="sumError">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYFdzpEeaMeaEvRdRzBA" name="sumExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYFtzpEeaMeaEvRdRzBA" name="sumFailed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYF9zpEeaMeaEvRdRzBA" name="sumInProgress">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYGNzpEeaMeaEvRdRzBA" name="sumInconclusive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYGdzpEeaMeaEvRdRzBA" name="sumNotExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYGtzpEeaMeaEvRdRzBA" name="sumNotRunnable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYG9zpEeaMeaEvRdRzBA" name="sumPassed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYHNzpEeaMeaEvRdRzBA" name="sumPassedButRunAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYHdzpEeaMeaEvRdRzBA" name="sumPending">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYHtzpEeaMeaEvRdRzBA" name="sumTimeOut">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYH9zpEeaMeaEvRdRzBA" name="sumTotal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYINzpEeaMeaEvRdRzBA" name="sumWarning">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdfYIdzpEeaMeaEvRdRzBA" type="_CTOBwNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.sumAborted = sumAborted;
		this.sumCompleted = sumCompleted;
		this.sumDisconnected = sumDisconnected;
		this.sumError = sumError;
		this.sumExecuted = sumExecuted;
		this.sumFailed = sumFailed;
		this.sumInProgress = sumInProgress;
		this.sumInconclusive = sumInconclusive;
		this.sumNotExecuted = sumNotExecuted;
		this.sumNotRunnable = sumNotRunnable;
		this.sumPassed = sumPassed;
		this.sumPassedButRunAborted = sumPassedButRunAborted;
		this.sumPending = sumPending;
		this.sumTimeOut = sumTimeOut;
		this.sumTotal = sumTotal;
		this.sumWarning = sumWarning;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdfYItzpEeaMeaEvRdRzBA" name="getSumAborted" specification="_CTRsINzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdfYI9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumAborted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdfYJNzpEeaMeaEvRdRzBA" name="setSumAborted" specification="_CTRsItzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdfYJdzpEeaMeaEvRdRzBA" name="sumAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumAborted = sumAborted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdf_INzpEeaMeaEvRdRzBA" name="getSumCompleted" specification="_CTSTMNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdf_IdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumCompleted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdf_ItzpEeaMeaEvRdRzBA" name="setSumCompleted" specification="_CTSTMtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdf_I9zpEeaMeaEvRdRzBA" name="sumCompleted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumCompleted = sumCompleted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdf_JNzpEeaMeaEvRdRzBA" name="getSumDisconnected" specification="_CTSTNNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdf_JdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumDisconnected;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdf_JtzpEeaMeaEvRdRzBA" name="setSumDisconnected" specification="_CTS6QNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdf_J9zpEeaMeaEvRdRzBA" name="sumDisconnected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumDisconnected = sumDisconnected;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdf_KNzpEeaMeaEvRdRzBA" name="getSumError" specification="_CTS6QtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdf_KdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumError;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdgmMNzpEeaMeaEvRdRzBA" name="setSumError" specification="_CTThUNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdgmMdzpEeaMeaEvRdRzBA" name="sumError">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumError = sumError;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdgmMtzpEeaMeaEvRdRzBA" name="getSumExecuted" specification="_CTThUtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdgmM9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumExecuted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdgmNNzpEeaMeaEvRdRzBA" name="setSumExecuted" specification="_CTUIYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdgmNdzpEeaMeaEvRdRzBA" name="sumExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumExecuted = sumExecuted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdgmNtzpEeaMeaEvRdRzBA" name="getSumFailed" specification="_CTUIYtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdgmN9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumFailed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdgmONzpEeaMeaEvRdRzBA" name="setSumFailed" specification="_CTUIZNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdgmOdzpEeaMeaEvRdRzBA" name="sumFailed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumFailed = sumFailed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdgmOtzpEeaMeaEvRdRzBA" name="getSumInProgress" specification="_CTUvcNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdgmO9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumInProgress;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdhNQNzpEeaMeaEvRdRzBA" name="setSumInProgress" specification="_CTUvctzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdhNQdzpEeaMeaEvRdRzBA" name="sumInProgress">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumInProgress = sumInProgress;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdhNQtzpEeaMeaEvRdRzBA" name="getSumInconclusive" specification="_CTUvdNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdhNQ9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumInconclusive;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdhNRNzpEeaMeaEvRdRzBA" name="setSumInconclusive" specification="_CTVWgNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdhNRdzpEeaMeaEvRdRzBA" name="sumInconclusive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumInconclusive = sumInconclusive;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdhNRtzpEeaMeaEvRdRzBA" name="getSumNotExecuted" specification="_CTVWgtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdhNR9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumNotExecuted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdhNSNzpEeaMeaEvRdRzBA" name="setSumNotExecuted" specification="_CTVWhNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdhNSdzpEeaMeaEvRdRzBA" name="sumNotExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumNotExecuted = sumNotExecuted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdhNStzpEeaMeaEvRdRzBA" name="getSumNotRunnable" specification="_CTV9kNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdhNS9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumNotRunnable;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdh0UNzpEeaMeaEvRdRzBA" name="setSumNotRunnable" specification="_CTV9ktzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdh0UdzpEeaMeaEvRdRzBA" name="sumNotRunnable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumNotRunnable = sumNotRunnable;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdh0UtzpEeaMeaEvRdRzBA" name="getSumPassed" specification="_CTWkoNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdh0U9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumPassed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdh0VNzpEeaMeaEvRdRzBA" name="setSumPassed" specification="_CTWkotzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdh0VdzpEeaMeaEvRdRzBA" name="sumPassed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumPassed = sumPassed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdh0VtzpEeaMeaEvRdRzBA" name="getSumPassedButRunAborted" specification="_CTWkpNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdh0V9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumPassedButRunAborted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdh0WNzpEeaMeaEvRdRzBA" name="setSumPassedButRunAborted" specification="_CTXLsNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdh0WdzpEeaMeaEvRdRzBA" name="sumPassedButRunAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumPassedButRunAborted = sumPassedButRunAborted;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdh0WtzpEeaMeaEvRdRzBA" name="getSumPending" specification="_CTXLstzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdh0W9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumPending;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdibYNzpEeaMeaEvRdRzBA" name="setSumPending" specification="_CTXLtNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdibYdzpEeaMeaEvRdRzBA" name="sumPending">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumPending = sumPending;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdibYtzpEeaMeaEvRdRzBA" name="getSumTimeOut" specification="_CTXywNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdibY9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumTimeOut;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdibZNzpEeaMeaEvRdRzBA" name="setSumTimeOut" specification="_CTXywtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdibZdzpEeaMeaEvRdRzBA" name="sumTimeOut">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumTimeOut = sumTimeOut;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdibZtzpEeaMeaEvRdRzBA" name="getSumTotal" specification="_CTXyxNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdibZ9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumTotal;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdibaNzpEeaMeaEvRdRzBA" name="setSumTotal" specification="_CTYZ0NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdibadzpEeaMeaEvRdRzBA" name="sumTotal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumTotal = sumTotal;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdibatzpEeaMeaEvRdRzBA" name="getSumWarning" specification="_CTYZ0tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdiba9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return sumWarning;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdjCcNzpEeaMeaEvRdRzBA" name="setSumWarning" specification="_CTYZ1NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdjCcdzpEeaMeaEvRdRzBA" name="sumWarning">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.sumWarning = sumWarning;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CTP28NzpEeaMeaEvRdRzBA" name="Counters" method="_CdfYENzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CTRFEdzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CTRFEtzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CTQeANzpEeaMeaEvRdRzBA" name="sumAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeAdzpEeaMeaEvRdRzBA" name="sumCompleted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeAtzpEeaMeaEvRdRzBA" name="sumDisconnected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeA9zpEeaMeaEvRdRzBA" name="sumError">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeBNzpEeaMeaEvRdRzBA" name="sumExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeBdzpEeaMeaEvRdRzBA" name="sumFailed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeBtzpEeaMeaEvRdRzBA" name="sumInProgress">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeB9zpEeaMeaEvRdRzBA" name="sumInconclusive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeCNzpEeaMeaEvRdRzBA" name="sumNotExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeCdzpEeaMeaEvRdRzBA" name="sumNotRunnable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeCtzpEeaMeaEvRdRzBA" name="sumPassed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeC9zpEeaMeaEvRdRzBA" name="sumPassedButRunAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeDNzpEeaMeaEvRdRzBA" name="sumPending">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeDdzpEeaMeaEvRdRzBA" name="sumTimeOut">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTQeDtzpEeaMeaEvRdRzBA" name="sumTotal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTRFENzpEeaMeaEvRdRzBA" name="sumWarning">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTRFE9zpEeaMeaEvRdRzBA" type="_CTOBwNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTRsINzpEeaMeaEvRdRzBA" name="getSumAborted" method="_CdfYItzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTRsIdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTRsItzpEeaMeaEvRdRzBA" name="setSumAborted" method="_CdfYJNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTRsI9zpEeaMeaEvRdRzBA" name="sumAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTSTMNzpEeaMeaEvRdRzBA" name="getSumCompleted" method="_Cdf_INzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTSTMdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTSTMtzpEeaMeaEvRdRzBA" name="setSumCompleted" method="_Cdf_ItzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTSTM9zpEeaMeaEvRdRzBA" name="sumCompleted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTSTNNzpEeaMeaEvRdRzBA" name="getSumDisconnected" method="_Cdf_JNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTSTNdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTS6QNzpEeaMeaEvRdRzBA" name="setSumDisconnected" method="_Cdf_JtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTS6QdzpEeaMeaEvRdRzBA" name="sumDisconnected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTS6QtzpEeaMeaEvRdRzBA" name="getSumError" method="_Cdf_KNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTS6Q9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTThUNzpEeaMeaEvRdRzBA" name="setSumError" method="_CdgmMNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTThUdzpEeaMeaEvRdRzBA" name="sumError">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTThUtzpEeaMeaEvRdRzBA" name="getSumExecuted" method="_CdgmMtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTThU9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTUIYNzpEeaMeaEvRdRzBA" name="setSumExecuted" method="_CdgmNNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTUIYdzpEeaMeaEvRdRzBA" name="sumExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTUIYtzpEeaMeaEvRdRzBA" name="getSumFailed" method="_CdgmNtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTUIY9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTUIZNzpEeaMeaEvRdRzBA" name="setSumFailed" method="_CdgmONzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTUIZdzpEeaMeaEvRdRzBA" name="sumFailed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTUvcNzpEeaMeaEvRdRzBA" name="getSumInProgress" method="_CdgmOtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTUvcdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTUvctzpEeaMeaEvRdRzBA" name="setSumInProgress" method="_CdhNQNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTUvc9zpEeaMeaEvRdRzBA" name="sumInProgress">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTUvdNzpEeaMeaEvRdRzBA" name="getSumInconclusive" method="_CdhNQtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTUvddzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTVWgNzpEeaMeaEvRdRzBA" name="setSumInconclusive" method="_CdhNRNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTVWgdzpEeaMeaEvRdRzBA" name="sumInconclusive">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTVWgtzpEeaMeaEvRdRzBA" name="getSumNotExecuted" method="_CdhNRtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTVWg9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTVWhNzpEeaMeaEvRdRzBA" name="setSumNotExecuted" method="_CdhNSNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTVWhdzpEeaMeaEvRdRzBA" name="sumNotExecuted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTV9kNzpEeaMeaEvRdRzBA" name="getSumNotRunnable" method="_CdhNStzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTV9kdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTV9ktzpEeaMeaEvRdRzBA" name="setSumNotRunnable" method="_Cdh0UNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTV9k9zpEeaMeaEvRdRzBA" name="sumNotRunnable">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTWkoNzpEeaMeaEvRdRzBA" name="getSumPassed" method="_Cdh0UtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTWkodzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTWkotzpEeaMeaEvRdRzBA" name="setSumPassed" method="_Cdh0VNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTWko9zpEeaMeaEvRdRzBA" name="sumPassed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTWkpNzpEeaMeaEvRdRzBA" name="getSumPassedButRunAborted" method="_Cdh0VtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTWkpdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTXLsNzpEeaMeaEvRdRzBA" name="setSumPassedButRunAborted" method="_Cdh0WNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTXLsdzpEeaMeaEvRdRzBA" name="sumPassedButRunAborted">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTXLstzpEeaMeaEvRdRzBA" name="getSumPending" method="_Cdh0WtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTXLs9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTXLtNzpEeaMeaEvRdRzBA" name="setSumPending" method="_CdibYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTXLtdzpEeaMeaEvRdRzBA" name="sumPending">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTXywNzpEeaMeaEvRdRzBA" name="getSumTimeOut" method="_CdibYtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTXywdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTXywtzpEeaMeaEvRdRzBA" name="setSumTimeOut" method="_CdibZNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTXyw9zpEeaMeaEvRdRzBA" name="sumTimeOut">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTXyxNzpEeaMeaEvRdRzBA" name="getSumTotal" method="_CdibZtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTXyxdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTYZ0NzpEeaMeaEvRdRzBA" name="setSumTotal" method="_CdibaNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTYZ0dzpEeaMeaEvRdRzBA" name="sumTotal">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTYZ0tzpEeaMeaEvRdRzBA" name="getSumWarning" method="_CdibatzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTYZ09zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTYZ1NzpEeaMeaEvRdRzBA" name="setSumWarning" method="_CdjCcNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTYZ1dzpEeaMeaEvRdRzBA" name="sumWarning">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CTcEMNzpEeaMeaEvRdRzBA" name="Parser">
            <ownedOperation xmi:id="_CTgVoNzpEeaMeaEvRdRzBA" name="parse" raisedException="_CTJwUNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTg8sNzpEeaMeaEvRdRzBA" name="path">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CThjwNzpEeaMeaEvRdRzBA" name="StAXParser">
            <ownedAttribute xmi:id="_CcwYQNzpEeaMeaEvRdRzBA" name="testData" visibility="private" isLeaf="true" type="_CTlOINzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CeqcxNzpEeaMeaEvRdRzBA"/>
            <interfaceRealization xmi:id="_CaS6I9zpEeaMeaEvRdRzBA" client="_CThjwNzpEeaMeaEvRdRzBA" supplier="_CTcEMNzpEeaMeaEvRdRzBA" contract="_CTcEMNzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdjpgNzpEeaMeaEvRdRzBA" name="StAXParser" specification="_CTix4NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdjpgdzpEeaMeaEvRdRzBA" type="_CThjwNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>testData = TestData.getInstance();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdjpgtzpEeaMeaEvRdRzBA" name="parse" specification="_CTjY8NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdjpg9zpEeaMeaEvRdRzBA" name="path">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>// System.out.println(&quot;Starting to parse&quot;);
		List&lt;UnitTest> unitTestsOfOneRun = new LinkedList&lt;>();
		boolean waitForStdOut = false;
		boolean readingStdOut = false;

		TestRun testRun = null;
		// UnitTest Data
		String unitTestID = &quot;&quot;, unitTestName = &quot;&quot;, unitTestExecutionID = &quot;&quot;, testMethodName = &quot;&quot;;
		// UnitTestResult Data
		String resultUnitTestID;
		String unitTestOutcome;
		// Tested Class Data
		String testedClassName = &quot;&quot;;
		// TestRun Data
		String runID, runName;
		// TestRunTimeD
		String creationTime, finishTime, queuingTime, startTime;
		String outcome;

		// Counters
		String sumAborted;
		String sumCompleted;
		String sumDisconnected;
		String sumError;
		String sumExecuted;
		String sumFailed;
		String sumInProgress;
		String sumInconclusive;
		String sumNotExecuted;
		String sumNotRunnable;
		String sumPassed;
		String sumPassedButRunAborted;
		String sumPending;
		String sumTimeOut;
		String sumTotal;
		String sumWarning;

		// StandardOuts
		String stdOutContent;

		UnitTestsToTestRunMapper mapper = null;

		try {
			// creating inputFactory
			XMLInputFactory inputFactory = XMLInputFactory.newInstance();
			// create InputStream
			XMLStreamReader reader = inputFactory.createXMLStreamReader(new FileInputStream(path));

			while (reader.hasNext()) {
				int event = reader.next();
				switch (event) {
				case XMLStreamConstants.START_ELEMENT:
					if (&quot;UnitTest&quot;.equals(reader.getLocalName())) {
						if (reader.getAttributeLocalName(0).equals(&quot;id&quot;)
								&amp;&amp; reader.getAttributeLocalName(1).equals(&quot;name&quot;)) {
							unitTestID = reader.getAttributeValue(0);
							unitTestName = reader.getAttributeValue(1);
						} else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}

					}
					if (&quot;UnitTestResult&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(8).equals(&quot;testId&quot;) 
								&amp;&amp; reader.getAttributeLocalName(5).equals(&quot;outcome&quot;)){
							resultUnitTestID = reader.getAttributeValue(8);
							unitTestOutcome = reader.getAttributeValue(5);

							for (UnitTest unitTest : unitTestsOfOneRun) {
								if (unitTest.getUnitTestID().equals(resultUnitTestID)) {
									unitTest.setOutcome(unitTestOutcome);
								}
							}
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
						
					}

					if (&quot;Execution&quot;.equals(reader.getLocalName()) 
							&amp;&amp; reader.getAttributeCount() == 1) {
						if (reader.getAttributeLocalName(0).equals(&quot;id&quot;)) {
							// To avoid wrong 'execution' start element
							unitTestExecutionID = reader.getAttributeValue(0);
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;TestMethod&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(1).equals(&quot;className&quot;) 
								&amp;&amp; reader.getAttributeLocalName(3).equals(&quot;name&quot;)){
							testedClassName = reader.getAttributeValue(1);
							testMethodName = reader.getAttributeValue(3);
							// TODO: Create UnitTest Object
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;TestRun&quot;.equals(reader.getLocalName())) { 
						if(reader.getAttributeLocalName(0).equals(&quot;id&quot;) 
								&amp;&amp; reader.getAttributeLocalName(1).equals(&quot;name&quot;)){

							runID = reader.getAttributeValue(0);
							runName = reader.getAttributeValue(1);

							testRun = new TestRun(runID, runName);
							testRun.setPath(path);

						} else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;Times&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(0).equals(&quot;creation&quot;) 
								&amp;&amp; reader.getAttributeLocalName(1).equals(&quot;finish&quot;) 
								&amp;&amp; reader.getAttributeLocalName(2).equals(&quot;queuing&quot;) 
								&amp;&amp; reader.getAttributeLocalName(3).equals(&quot;start&quot;)){ 
							creationTime = reader.getAttributeValue(0);
							finishTime = reader.getAttributeValue(1);
							queuingTime = reader.getAttributeValue(2);
							startTime = reader.getAttributeValue(3);
							
							testRun.setStartTime(startTime);
							testData.addNewTestRun(testRun);
						} else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;ResultSummary&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(0).equals(&quot;outcome&quot;)){
							outcome = reader.getAttributeValue(0);
							waitForStdOut = true;
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;Counters&quot;.equals(reader.getLocalName())) {
						if(reader.getAttributeLocalName(0).equals(&quot;aborted&quot;) 
								&amp;&amp; reader.getAttributeLocalName(1).equals(&quot;completed&quot;) 
								&amp;&amp; reader.getAttributeLocalName(2).equals(&quot;disconnected&quot;)
								&amp;&amp; reader.getAttributeLocalName(3).equals(&quot;error&quot;)
								&amp;&amp; reader.getAttributeLocalName(4).equals(&quot;executed&quot;)
								&amp;&amp; reader.getAttributeLocalName(5).equals(&quot;failed&quot;)
								&amp;&amp; reader.getAttributeLocalName(6).equals(&quot;inProgress&quot;)
								&amp;&amp; reader.getAttributeLocalName(7).equals(&quot;inconclusive&quot;)
								&amp;&amp; reader.getAttributeLocalName(8).equals(&quot;notExecuted&quot;)
								&amp;&amp; reader.getAttributeLocalName(9).equals(&quot;notRunnable&quot;) 
								&amp;&amp; reader.getAttributeLocalName(10).equals(&quot;passed&quot;)
								&amp;&amp; reader.getAttributeLocalName(11).equals(&quot;passedButRunAborted&quot;)
								&amp;&amp; reader.getAttributeLocalName(12).equals(&quot;pending&quot;)
								&amp;&amp; reader.getAttributeLocalName(13).equals(&quot;timeout&quot;)
								&amp;&amp; reader.getAttributeLocalName(14).equals(&quot;total&quot;)
								&amp;&amp; reader.getAttributeLocalName(15).equals(&quot;warning&quot;)) {
							sumAborted = reader.getAttributeValue(0);
							sumCompleted = reader.getAttributeValue(1);
							sumDisconnected = reader.getAttributeValue(2);
							sumError = reader.getAttributeValue(3);
							sumExecuted = reader.getAttributeValue(4);
							sumFailed = reader.getAttributeValue(5);
							sumInProgress = reader.getAttributeValue(6);
							sumInconclusive = reader.getAttributeValue(7);
							sumNotExecuted = reader.getAttributeValue(8);
							sumNotRunnable = reader.getAttributeValue(9);
							sumPassed = reader.getAttributeValue(10);
							sumPassedButRunAborted = reader.getAttributeValue(11);
							sumPending = reader.getAttributeValue(12);
							sumTimeOut = reader.getAttributeValue(13);
							sumTotal = reader.getAttributeValue(14);
							sumWarning = reader.getAttributeValue(15);

							// Create Counters Class
							Counters counter = new Counters(sumAborted, sumCompleted, sumDisconnected, sumError,
									sumExecuted, sumFailed, sumInProgress, sumInconclusive, sumNotExecuted, sumNotRunnable,
									sumPassed, sumPassedButRunAborted, sumPending, sumTimeOut, sumTotal, sumWarning);
							testRun.setResultSummary(counter);
						}else {
							throw new WrongXMLAttributeException(&quot;Expected another attribute in tag &quot; 
						+ reader.getLocalName());
						}
					}
					if (&quot;StdOut&quot;.equals(reader.getLocalName()) &amp;&amp; waitForStdOut) {
						readingStdOut = true;
					}
					break;

				case XMLStreamConstants.CHARACTERS:
					if (readingStdOut) {
						stdOutContent = reader.getText().trim();
					}
					break;

				case XMLStreamConstants.END_ELEMENT:
					if (&quot;UnitTest&quot;.equals(reader.getLocalName())) {

						UnitTest unitTest = new UnitTest(testRun, unitTestID, unitTestName, unitTestExecutionID,
								testMethodName);

						TestedClass testedClass = new TestedClass(testedClassName, unitTest);

						testData.addNewTestedClassToTree(testedClass);
						testData.addNewUnitTest(unitTest);
						unitTestsOfOneRun.add(unitTest);

						testRun.addTestedClassToTestRun(testData.getClass(testedClass));
					}
					if (&quot;TestRun&quot;.equals(reader.getLocalName())) {
//						System.out.println(&quot;Finished TestRun: &quot; + testRun.getRunID());
					}
					break;

				default:
					break;
				}
			}
		} catch (Exception e) {
			// TODO: handle exception
			System.err.println(e.getMessage());
		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CTix4NzpEeaMeaEvRdRzBA" name="StAXParser" method="_CdjpgNzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CTix4dzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CTix4tzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CTix49zpEeaMeaEvRdRzBA" type="_CThjwNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTjY8NzpEeaMeaEvRdRzBA" name="parse" method="_CdjpgtzpEeaMeaEvRdRzBA" raisedException="_CTJwUNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTjY8dzpEeaMeaEvRdRzBA" name="path">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CTlOINzpEeaMeaEvRdRzBA" name="TestData">
            <ownedAttribute xmi:id="_CcwYQtzpEeaMeaEvRdRzBA" name="testDataInstance" visibility="private" isStatic="true" type="_CTlOINzpEeaMeaEvRdRzBA" association="_CerD0dzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Ccw_UdzpEeaMeaEvRdRzBA" name="testRunList" type="_CaUIQNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CerD1NzpEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ccw_U9zpEeaMeaEvRdRzBA" value="new ArrayList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Ccw_VNzpEeaMeaEvRdRzBA" name="unitTestList" type="_CaUIQNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_Cerq4dzpEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CcxmYdzpEeaMeaEvRdRzBA" value="new ArrayList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CcxmYtzpEeaMeaEvRdRzBA" name="root" type="_CUFkcNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_Cerq5NzpEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CcxmY9zpEeaMeaEvRdRzBA" value="new TreeNode(&quot;/&quot;, null, null)"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CcxmZNzpEeaMeaEvRdRzBA" name="analyzer" type="_CTNasNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CesR8dzpEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CcyNcdzpEeaMeaEvRdRzBA" value="new AprioriAnalyzer()"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdkQkdzpEeaMeaEvRdRzBA" name="getInstance" specification="_CTnDUtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdkQktzpEeaMeaEvRdRzBA" type="_CTlOINzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>if (TestData.testDataInstance == null) {
			TestData.testDataInstance = new TestData();
		}
		return TestData.testDataInstance;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdkQk9zpEeaMeaEvRdRzBA" name="getTestedClasses" specification="_CTnqYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdkQlNzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdkQldzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return root.getTestedClasses();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdkQltzpEeaMeaEvRdRzBA" name="addNewTestRun" specification="_CaUvUtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdkQl9zpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>boolean existing = false;
		// add class to list if not already there

		for (TestRun existingRun : testRunList) {
			if (testRun.getRunID().equals(existingRun.getRunID())) {

				testRun = existingRun;
				existing = true;
				// TODO: change to correct Exception
				throw new Exception(&quot;\nTestRun: &quot; + testRun.getRunID() + &quot; already loaded\n&quot;);
			}
		}
		if (!existing) {
			int index = 0;

			// Only for first TestRun
			if (testRunList.isEmpty()) {
				testRunList.add(testRun);
			} else {
				// Insert new TestRuns sorted by their StartTime
				for (TestRun existingRun : testRunList) {
					//If new TestRun is older than existing, increment Index-Counter
					if (testRun.getRunDate().compareTo(existingRun.getRunDate()) > 0) {
						index++;
						if (index == testRunList.size()) {
							testRunList.add(testRun);
							break;
						}
					} else {
						//If Index == List-Size, then just add new Run as last element
						if (index == testRunList.size()) {
							testRunList.add(testRun);
							break;
						} else {
						// Add new Run at the proper index in List
							testRunList.add(index, testRun);
							break;
						}
					}
				}
			}
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdk3oNzpEeaMeaEvRdRzBA" name="printTree" specification="_CTo4gNzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>System.out.println(root.printTree(0));
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdk3odzpEeaMeaEvRdRzBA" name="addNewTestedClassToTree" specification="_CaVWYdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdk3otzpEeaMeaEvRdRzBA" name="newlyCreatedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>// Save copy for not working on the classes reference
		Queue&lt;String> packageName = new LinkedList&lt;String>();
		TestedClass existingClass = getClass(newlyCreatedClass);

		if (existingClass != null) {
			// classLog of new created Classes always have only one item
			UnitTestsToTestRunMapper newMapping = newlyCreatedClass.getClassLog().get(0);
			UnitTest unitTestOfNewClass = newMapping.getUnitTestList().get(0);
			existingClass.addUnitTestToClassLog(unitTestOfNewClass);
			

		} else {
			packageName.addAll(newlyCreatedClass.getPackageName());
			root.insert(packageName, newlyCreatedClass);
			
		}	
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdk3o9zpEeaMeaEvRdRzBA" name="addNewUnitTest" specification="_CaVWY9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdk3pNzpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>unitTestList.add(unitTest);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdk3pdzpEeaMeaEvRdRzBA" name="getTestRunByID" specification="_CTo4gdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdk3ptzpEeaMeaEvRdRzBA" name="runID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cdk3p9zpEeaMeaEvRdRzBA" type="_CTwNQNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>for (TestRun testRun : testRunList) {
			if (testRun.getRunID().equals(runID)) {
				return testRun;
			}
		}
		// System.err.println(runID + &quot; is not a valid test run id.&quot;);
		// TODO: Throw Exception
		return null;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdk3qNzpEeaMeaEvRdRzBA" name="getClassByName" specification="_CTqGoNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdk3qdzpEeaMeaEvRdRzBA" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cdk3qtzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return root.searchByName(name);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdlesNzpEeaMeaEvRdRzBA" name="getClass" specification="_CaV9ctzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdlesdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdlestzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return root.search(testedClass);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdles9zpEeaMeaEvRdRzBA" name="getTreeHeight" specification="_CTqGotzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdletNzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>return root.getDepth(root)-2;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CTmcQNzpEeaMeaEvRdRzBA" name="TestData" visibility="private">
              <eAnnotations xmi:id="_CTmcQdzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CTmcQtzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CTnDUdzpEeaMeaEvRdRzBA" type="_CTlOINzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTnDUtzpEeaMeaEvRdRzBA" name="getInstance" isStatic="true" method="_CdkQkdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaUvUdzpEeaMeaEvRdRzBA" type="_CTlOINzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTnqYNzpEeaMeaEvRdRzBA" name="getTestedClasses" method="_CdkQk9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTnqYdzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CTnqYtzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTo4gNzpEeaMeaEvRdRzBA" name="printTree" method="_Cdk3oNzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CTo4gdzpEeaMeaEvRdRzBA" name="getTestRunByID" method="_Cdk3pdzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeNJwNzpEeaMeaEvRdRzBA">
                <body>@param runID
	 * @return the TestRun according to the runID; returns null if TestRun
	 *         doesn't exist</body>
              </ownedComment>
              <ownedParameter xmi:id="_CTpfkNzpEeaMeaEvRdRzBA" name="runID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CaV9cNzpEeaMeaEvRdRzBA" type="_CTwNQNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTqGoNzpEeaMeaEvRdRzBA" name="getClassByName" method="_Cdk3qNzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeNJwdzpEeaMeaEvRdRzBA">
                <body>@param name
	 * @return the TestedClass according to the class name; returns null if
	 *         TestedClass doesn't exist</body>
              </ownedComment>
              <ownedParameter xmi:id="_CTqGodzpEeaMeaEvRdRzBA" name="name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CaV9cdzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTqGotzpEeaMeaEvRdRzBA" name="getTreeHeight" method="_Cdles9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTqtsNzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CaUvUtzpEeaMeaEvRdRzBA" name="addNewTestRun" method="_CdkQltzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaVWYNzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CaVWYdzpEeaMeaEvRdRzBA" name="addNewTestedClassToTree" method="_Cdk3odzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaVWYtzpEeaMeaEvRdRzBA" name="newlyCreatedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CaVWY9zpEeaMeaEvRdRzBA" name="addNewUnitTest" method="_Cdk3o9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaVWZNzpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CaV9ctzpEeaMeaEvRdRzBA" name="getClass" method="_CdlesNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaV9c9zpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CaV9dNzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CTwNQNzpEeaMeaEvRdRzBA" name="TestRun">
            <ownedAttribute xmi:id="_Ccy0gNzpEeaMeaEvRdRzBA" name="runID" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cczbk9zpEeaMeaEvRdRzBA" name="resultSummary" type="_CTOBwNzpEeaMeaEvRdRzBA" association="_CeOX4NzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc0CoNzpEeaMeaEvRdRzBA" name="testedClasses" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" association="_CesR9NzpEeaMeaEvRdRzBA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cc0CodzpEeaMeaEvRdRzBA" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Cc0CotzpEeaMeaEvRdRzBA" value="new LinkedList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc0Co9zpEeaMeaEvRdRzBA" name="path">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc0CpNzpEeaMeaEvRdRzBA" name="startTime" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc0psNzpEeaMeaEvRdRzBA" name="runDate" type="_CT3iANzpEeaMeaEvRdRzBA" association="_CeOX4tzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CeNw0NzpEeaMeaEvRdRzBA" name="runName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdmFwNzpEeaMeaEvRdRzBA" name="TestRun" specification="_CTxbYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdmFwdzpEeaMeaEvRdRzBA" name="runID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdmFwtzpEeaMeaEvRdRzBA" name="runName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdmFw9zpEeaMeaEvRdRzBA" type="_CTwNQNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.runID = runID;
		this.runName = runName;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdmFxNzpEeaMeaEvRdRzBA" name="addTestedClassToTestRun" specification="_CaXLkNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdmFxdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>boolean existing = false;
		for (TestedClass existingClass : testedClasses) {
			if (existingClass.getClassName().equals(testedClass.getClassName())) {
				existing = true;
			}
		}
		if (!existing) {
			testedClasses.add(testedClass);
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdmFxtzpEeaMeaEvRdRzBA" name="setStartTime" specification="_CTyCc9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdmFx9zpEeaMeaEvRdRzBA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.startTime = startTime;
		setRunDate();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdmFyNzpEeaMeaEvRdRzBA" name="setRunDate" specification="_CTypgdzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>String[] startT = startTime.split(&quot;T&quot;);
		String[] date = startT[0].split(&quot;-&quot;);
		String[] timeWithJunk = startT[1].split(&quot;\\.&quot;);
		String[] time = timeWithJunk[0].split(&quot;:&quot;);

		int year = Integer.parseInt(date[0]);
		int month = Integer.parseInt(date[1]);
		int day = Integer.parseInt(date[2]);
		
		int hrs = Integer.parseInt(time[0]);
		int min = Integer.parseInt(time[1]);
		int sec = Integer.parseInt(time[2]);
		
		runDate = new TestRunStartTime(year, month, day, hrs, min, sec);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdms0NzpEeaMeaEvRdRzBA" name="getRunName" specification="_CTypgtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdms0dzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return runName;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdms0tzpEeaMeaEvRdRzBA" name="hashCode" specification="_CTzQkNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdms09zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>final int prime = 31;
		int result = 1;
		result = prime * result + ((runID == null) ? 0 : runID.hashCode());
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdms1NzpEeaMeaEvRdRzBA" name="equals" specification="_Cbyu8dzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdms1dzpEeaMeaEvRdRzBA" name="obj" type="_CbyH4NzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdms1tzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TestRun other = (TestRun) obj;
		if (runID == null) {
			if (other.runID != null)
				return false;
		} else if (!runID.equals(other.runID))
			return false;
		return true;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CTxbYNzpEeaMeaEvRdRzBA" name="TestRun" method="_CdmFwNzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CTyCcNzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CTyCcdzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CTxbYdzpEeaMeaEvRdRzBA" name="runID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTxbYtzpEeaMeaEvRdRzBA" name="runName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTyCctzpEeaMeaEvRdRzBA" type="_CTwNQNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTyCc9zpEeaMeaEvRdRzBA" name="setStartTime" method="_CdmFxtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTypgNzpEeaMeaEvRdRzBA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTypgdzpEeaMeaEvRdRzBA" name="setRunDate" visibility="private" method="_CdmFyNzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeOX5NzpEeaMeaEvRdRzBA">
                <body>Extracts the Time the Test was Run from the startTime String</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_CTypgtzpEeaMeaEvRdRzBA" name="getRunName" method="_Cdms0NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTypg9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTzQkNzpEeaMeaEvRdRzBA" name="hashCode" method="_Cdms0tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTzQkdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CaXLkNzpEeaMeaEvRdRzBA" name="addTestedClassToTestRun" method="_CdmFxNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaXLkdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Cbyu8dzpEeaMeaEvRdRzBA" name="equals" method="_Cdms1NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cbyu8tzpEeaMeaEvRdRzBA" name="obj" type="_CbyH4NzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cbyu89zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CT3iANzpEeaMeaEvRdRzBA" name="TestRunStartTime">
            <ownedAttribute xmi:id="_Cc0psdzpEeaMeaEvRdRzBA" name="year" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc0pstzpEeaMeaEvRdRzBA" name="month" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc0ps9zpEeaMeaEvRdRzBA" name="day" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc1QwNzpEeaMeaEvRdRzBA" name="hour" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc1QwdzpEeaMeaEvRdRzBA" name="min" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc1QwtzpEeaMeaEvRdRzBA" name="sec" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_Cb0kINzpEeaMeaEvRdRzBA" client="_CT3iANzpEeaMeaEvRdRzBA" supplier="_Cbz9ENzpEeaMeaEvRdRzBA" contract="_Cbz9ENzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdnT4NzpEeaMeaEvRdRzBA" name="TestRunStartTime" specification="_CT4wINzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdnT4dzpEeaMeaEvRdRzBA" name="year">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdnT4tzpEeaMeaEvRdRzBA" name="month">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdnT49zpEeaMeaEvRdRzBA" name="day">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdnT5NzpEeaMeaEvRdRzBA" name="hour">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdnT5dzpEeaMeaEvRdRzBA" name="min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdnT5tzpEeaMeaEvRdRzBA" name="sec">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdnT59zpEeaMeaEvRdRzBA" type="_CT3iANzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.year = year;
		this.month = month;
		this.day = day;
		this.hour = hour;
		this.min = min;
		this.sec = sec;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdnT6NzpEeaMeaEvRdRzBA" name="toString" specification="_CT5-QNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdnT6dzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;TestRunStartTime [&quot; + year + &quot;-&quot; + month + &quot;-&quot; + day + &quot; &quot; + hour + &quot;:&quot; + min + &quot;:&quot; + sec + &quot;]&quot;;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdnT6tzpEeaMeaEvRdRzBA" name="compareTo" specification="_CaYZsNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdnT69zpEeaMeaEvRdRzBA" name="o" type="_CT3iANzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdnT7NzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int sizeComparison = Integer.compare(year, o.getYear());

		if (sizeComparison == 0) {
			sizeComparison = Integer.compare(month, o.getMonth());
			if (sizeComparison == 0) {
				sizeComparison = Integer.compare(day, o.getDay());
				if (sizeComparison == 0) {
					sizeComparison = Integer.compare(hour, o.getHour());
					if (sizeComparison == 0) {
						sizeComparison = Integer.compare(min, o.getMonth());
						if (sizeComparison == 0) {
							sizeComparison = Integer.compare(sec, o.getSec());
						}
					}
				}
			}
		}
		return sizeComparison;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CT4wINzpEeaMeaEvRdRzBA" name="TestRunStartTime" method="_CdnT4NzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CT5XMtzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CT5XM9zpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CT4wIdzpEeaMeaEvRdRzBA" name="year">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CT4wItzpEeaMeaEvRdRzBA" name="month">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CT4wI9zpEeaMeaEvRdRzBA" name="day">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CT4wJNzpEeaMeaEvRdRzBA" name="hour">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CT5XMNzpEeaMeaEvRdRzBA" name="min">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CT5XMdzpEeaMeaEvRdRzBA" name="sec">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CT5XNNzpEeaMeaEvRdRzBA" type="_CT3iANzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CT5-QNzpEeaMeaEvRdRzBA" name="toString" method="_CdnT6NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CT6lUNzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CaYZsNzpEeaMeaEvRdRzBA" name="compareTo" method="_CdnT6tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaYZsdzpEeaMeaEvRdRzBA" name="o" type="_CT3iANzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CaYZstzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CT9ooNzpEeaMeaEvRdRzBA" name="TestedClass">
            <ownedAttribute xmi:id="_Cc1Qw9zpEeaMeaEvRdRzBA" name="className">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc130NzpEeaMeaEvRdRzBA" name="packageName" type="_CaUIQtzpEeaMeaEvRdRzBA" isReadOnly="true" association="_Ces5AdzpEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Cc130tzpEeaMeaEvRdRzBA" value="new LinkedList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc1309zpEeaMeaEvRdRzBA" name="currentFailurePercentage" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Cc131NzpEeaMeaEvRdRzBA" value="-1.00"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc2e4NzpEeaMeaEvRdRzBA" name="classLog" type="_CUVcENzpEeaMeaEvRdRzBA" isOrdered="true" isReadOnly="true" association="_Ces5BNzpEeaMeaEvRdRzBA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cc2e4dzpEeaMeaEvRdRzBA" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Cc2e4tzpEeaMeaEvRdRzBA" value="new LinkedList&lt;>()"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdn68NzpEeaMeaEvRdRzBA" name="TestedClass" specification="_CaZn0NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdn68dzpEeaMeaEvRdRzBA" name="className">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cdn68tzpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdn689zpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>String[] packagePlusClassName = className.split(&quot;\\.&quot;);
		
		this.className = packagePlusClassName[packagePlusClassName.length - 1];
		
		for (int i = 0; i &lt; packagePlusClassName.length - 1; i++) {
			packageName.add(packagePlusClassName[i]);
		}
		
		classLog.add(new UnitTestsToTestRunMapper(unitTest));

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdn69NzpEeaMeaEvRdRzBA" name="addUnitTestToClassLog" specification="_CaaO4tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdn69dzpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>String runID = unitTest.getTestRun().getRunID();

		// Assume newTestRun
		boolean newTestRun = true;

		// Look for existing TestRuns
		for (UnitTestsToTestRunMapper runMapper : classLog) {
			if (runMapper.getTestRun().getRunID().equals(runID)) {
				newTestRun = false;
				// add UnitTest to existing TestRun
				runMapper.addUnitTestToTestRun(unitTest);
			}
		}
		// Create a new Mapping for a new TestRun
		if (newTestRun) {
			classLog.add(new UnitTestsToTestRunMapper(unitTest));
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdn69tzpEeaMeaEvRdRzBA" name="getFailurePercentageByTestrun" specification="_CaaO5NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdn699zpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdn6-NzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>for (UnitTestsToTestRunMapper unitTestsToTestRunMapper : classLog) {
			if (unitTestsToTestRunMapper.getTestRun().getRunID().equals(testRun.getRunID())) {
				return unitTestsToTestRunMapper.getFailurePercentage();
			}
		}
		return -1.0;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdn6-dzpEeaMeaEvRdRzBA" name="getUnitTestsByTestRun" specification="_Caa18NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdn6-tzpEeaMeaEvRdRzBA" name="testrun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdn6-9zpEeaMeaEvRdRzBA" type="_CURKoNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cdn6_NzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>for (UnitTestsToTestRunMapper unitTestsToTestRunMapper : classLog) {
			if (unitTestsToTestRunMapper.getTestRun().getRunID().equals(testrun.getRunID())) {
				return unitTestsToTestRunMapper.getUnitTestList();
			}
		}
		throw new IllegalArgumentException(testrun.getRunID() + &quot; can't be found in the class log&quot;);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdoiANzpEeaMeaEvRdRzBA" name="getUnitTestsByTestRun" specification="_Caa19NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdoiAdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdoiAtzpEeaMeaEvRdRzBA" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdoiA9zpEeaMeaEvRdRzBA" type="_CURKoNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdoiBNzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;UnitTest> unitTests = getUnitTestsByTestRun(testRun);
		List&lt;UnitTest> returnList = new LinkedList&lt;>();
		for (UnitTest unitTest : unitTests) {
			if (unitTest.hasPassed() == passed) {
				returnList.add(unitTest);
			}
		}
		return returnList;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdoiBdzpEeaMeaEvRdRzBA" name="getUnitTestsNamesByTestRun" specification="_CabdANzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdoiBtzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdoiB9zpEeaMeaEvRdRzBA" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdoiCNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdoiCdzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;UnitTest> unitTests = getUnitTestsByTestRun(testRun);
		List&lt;String> returnList = new LinkedList&lt;>();
		for (UnitTest unitTest : unitTests) {
			if (unitTest.hasPassed() == passed) {
				returnList.add(unitTest.getUnitTestName());
			}
		}
		return returnList;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdoiCtzpEeaMeaEvRdRzBA" name="setCurrentFailurePercentage" specification="_CabdBdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdoiC9zpEeaMeaEvRdRzBA" name="testrun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>currentFailurePercentage = getFailurePercentageByTestrun(testrun);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdoiDNzpEeaMeaEvRdRzBA" name="toString" specification="_CUAE4NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdoiDdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;Name: &quot; + className;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdoiDtzpEeaMeaEvRdRzBA" name="hashCode" specification="_CUAr89zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdoiD9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>final int prime = 31;
		int result = 1;
		result = prime * result + ((className == null) ? 0 : className.hashCode());
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdpJENzpEeaMeaEvRdRzBA" name="equals" specification="_Cb1yQNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdpJEdzpEeaMeaEvRdRzBA" name="obj" type="_CbyH4NzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdpJEtzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TestedClass other = (TestedClass) obj;
		if (className == null) {
			if (other.className != null)
				return false;
		} else if (!className.equals(other.className))
			return false;
		return true;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CUAE4NzpEeaMeaEvRdRzBA" name="toString" method="_CdoiDNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUAE4dzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CUAr89zpEeaMeaEvRdRzBA" name="hashCode" method="_CdoiDtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUBTANzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CaZn0NzpEeaMeaEvRdRzBA" name="TestedClass" method="_Cdn68NzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CaZn09zpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CaaO4NzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CaZn0dzpEeaMeaEvRdRzBA" name="className">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CaZn0tzpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CaaO4dzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CaaO4tzpEeaMeaEvRdRzBA" name="addUnitTestToClassLog" method="_Cdn69NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaaO49zpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CaaO5NzpEeaMeaEvRdRzBA" name="getFailurePercentageByTestrun" method="_Cdn69tzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeO-8NzpEeaMeaEvRdRzBA">
                <body>
	 * @param testRun
	 * @return the FP or -1 if the testRun didn't test a class</body>
              </ownedComment>
              <ownedParameter xmi:id="_CaaO5dzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CaaO5tzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Caa18NzpEeaMeaEvRdRzBA" name="getUnitTestsByTestRun" method="_Cdn6-dzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Caa18dzpEeaMeaEvRdRzBA" name="testrun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Caa18tzpEeaMeaEvRdRzBA" type="_CURKoNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Caa189zpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Caa19NzpEeaMeaEvRdRzBA" name="getUnitTestsByTestRun" method="_CdoiANzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Caa19dzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Caa19tzpEeaMeaEvRdRzBA" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Caa199zpEeaMeaEvRdRzBA" type="_CURKoNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Caa1-NzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CabdANzpEeaMeaEvRdRzBA" name="getUnitTestsNamesByTestRun" method="_CdoiBdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CabdAdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CabdAtzpEeaMeaEvRdRzBA" name="passed">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CabdA9zpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CabdBNzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CabdBdzpEeaMeaEvRdRzBA" name="setCurrentFailurePercentage" method="_CdoiCtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CabdBtzpEeaMeaEvRdRzBA" name="testrun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Cb1yQNzpEeaMeaEvRdRzBA" name="equals" method="_CdpJENzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cb1yQdzpEeaMeaEvRdRzBA" name="obj" type="_CbyH4NzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cb1yQtzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CUFkcNzpEeaMeaEvRdRzBA" name="TreeNode">
            <ownedAttribute xmi:id="_Cc2e49zpEeaMeaEvRdRzBA" name="key" visibility="package">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc3F8NzpEeaMeaEvRdRzBA" name="testedClass" visibility="package" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_CetgEdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc3F8tzpEeaMeaEvRdRzBA" name="children" visibility="package" type="_CUFkcNzpEeaMeaEvRdRzBA" isOrdered="true" association="_CetgFNzpEeaMeaEvRdRzBA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cc3F89zpEeaMeaEvRdRzBA" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Cc3F9NzpEeaMeaEvRdRzBA" value="new LinkedList&lt;TreeNode>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc3F9tzpEeaMeaEvRdRzBA" name="parent" visibility="package" type="_CUFkcNzpEeaMeaEvRdRzBA" association="_CeuHINzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdpJE9zpEeaMeaEvRdRzBA" name="TreeNode" specification="_CacrINzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdpJFNzpEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdpJFdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdpJFtzpEeaMeaEvRdRzBA" name="parent" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdpJF9zpEeaMeaEvRdRzBA" type="_CUFkcNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.key = key;
		this.testedClass = testedClass;
		this.parent = parent;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdpwINzpEeaMeaEvRdRzBA" name="insert" specification="_Cb3AYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdpwIdzpEeaMeaEvRdRzBA" name="packageName" type="_CaUIQtzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdpwItzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>if (packageName.isEmpty()) {
			TreeNode classNode = new TreeNode(testedClass.getClassName(), testedClass, this);
			if (!children.contains(classNode)) {
				children.add(classNode);
			}
		} else {
			TreeNode packageNode = new TreeNode(packageName.poll(), null, this);
			if (!children.contains(packageNode)) {
				children.add(packageNode);
			} else {
				packageNode = children.get(children.indexOf(packageNode));
			}
			packageNode.insert(packageName, testedClass);
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdpwI9zpEeaMeaEvRdRzBA" name="getDistance" specification="_CadSMdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdpwJNzpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdpwJdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int dist = 0;
		if (this.key.equals(node.getKey())) {
			return dist;
		}
		if (this.getParent().searchNode(node.getKey()) == null) {
			return 1 + this.getParent().getDistance(node);
		} else {
			return 1 + node.getDistance(this.getParent());
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdpwJtzpEeaMeaEvRdRzBA" name="getDepth" specification="_CadSNNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdpwJ9zpEeaMeaEvRdRzBA" name="currentNode" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdpwKNzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int maxDepth = 0;
		
			if(currentNode.getChildren().isEmpty()){
				return maxDepth;
			}
			for(TreeNode child : currentNode.getChildren()){
				maxDepth = Math.max(maxDepth, 1+getDepth(child));
			}
//			maxDist = Math.max(maxDist, getDistance(node)+1);
//		
		return maxDepth;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdpwKdzpEeaMeaEvRdRzBA" name="searchByName" specification="_CUHZoNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdpwKtzpEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdpwK9zpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>if (this.key.equals(key)) {
			return testedClass;
		} else {
			for (TreeNode treeNode : children) {
				TestedClass toBeFound = treeNode.searchByName(key);
				if (toBeFound != null) {
					return toBeFound;
				}
			}
		}

		return null;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdpwLNzpEeaMeaEvRdRzBA" name="searchNode" specification="_CUIAsNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdpwLdzpEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdpwLtzpEeaMeaEvRdRzBA" type="_CUFkcNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>if (this.key.equals(key)) {
			return this;
		} else {
			for (TreeNode treeNode : children) {
				TreeNode toBeFound = treeNode.searchNode(key);
				if (toBeFound != null) {
					return toBeFound;
				}
			}
		}

		return null;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdqXMNzpEeaMeaEvRdRzBA" name="getTestedClasses" specification="_Cb3ncdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdqXMdzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdqXMtzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdqXM9zpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>if (testedClass != null) {
			testedClasses.add(testedClass);
		}
		for (TreeNode node : children) {
			node.getTestedClasses(testedClasses);
		}
		return testedClasses;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdqXNNzpEeaMeaEvRdRzBA" name="getTestedClasses" specification="_CUInwNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdqXNdzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdqXNtzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return getTestedClasses(new LinkedList&lt;TestedClass>());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdqXN9zpEeaMeaEvRdRzBA" name="search" specification="_Cad5QtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdqXONzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdqXOdzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return searchByName(testedClass.getClassName());
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdqXOtzpEeaMeaEvRdRzBA" name="getKey" specification="_CUJO0NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdqXO9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return key;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdqXPNzpEeaMeaEvRdRzBA" name="setKey" specification="_CUJO0tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdqXPdzpEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>this.key = key;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdqXPtzpEeaMeaEvRdRzBA" name="getTestedClass" specification="_CUJO1NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdqXP9zpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return testedClass;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdq-QNzpEeaMeaEvRdRzBA" name="setTestedClass" specification="_CaegUNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdq-QdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>this.testedClass = testedClass;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdq-QtzpEeaMeaEvRdRzBA" name="getChildren" specification="_CUJ14NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdq-Q9zpEeaMeaEvRdRzBA" type="_CUFkcNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cdq-RNzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return children;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdq-RdzpEeaMeaEvRdRzBA" name="getParent" specification="_CUKc8NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdq-RtzpEeaMeaEvRdRzBA" type="_CUFkcNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>return parent;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdq-R9zpEeaMeaEvRdRzBA" name="printTree" specification="_CUKc8dzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdq-SNzpEeaMeaEvRdRzBA" name="increment">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cdq-SdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String s = &quot;&quot;;
		String inc = &quot;&quot;;
		for (int i = 0; i &lt; increment; ++i) {
			inc = inc + &quot; &quot;;
		}
		s = inc + key;
		for (TreeNode child : children) {
			s += &quot;\n&quot; + child.printTree(increment + 2);
		}
		return s;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdq-StzpEeaMeaEvRdRzBA" name="toString" specification="_CUKc9NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdq-S9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return key;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdq-TNzpEeaMeaEvRdRzBA" name="hashCode" specification="_CULEBNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdq-TdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>final int prime = 31;
		int result = 1;
		result = prime * result + ((key == null) ? 0 : key.hashCode());
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdrlUNzpEeaMeaEvRdRzBA" name="equals" specification="_Cb4OgdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdrlUdzpEeaMeaEvRdRzBA" name="obj" type="_CbyH4NzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdrlUtzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TreeNode other = (TreeNode) obj;
		if (key == null) {
			if (other.key != null)
				return false;
		} else if (!key.equals(other.key))
			return false;
		return true;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CUHZoNzpEeaMeaEvRdRzBA" name="searchByName" method="_CdpwKdzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeO-89zpEeaMeaEvRdRzBA">
                <body>Searches in the DataTree for the Class with className as key
	 * 
	 * @param key
	 * @return the testedClass</body>
              </ownedComment>
              <ownedParameter xmi:id="_CUHZodzpEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cad5QNzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CUIAsNzpEeaMeaEvRdRzBA" name="searchNode" method="_CdpwLNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUIAsdzpEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cad5QdzpEeaMeaEvRdRzBA" type="_CUFkcNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CUInwNzpEeaMeaEvRdRzBA" name="getTestedClasses" method="_CdqXNNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUInwdzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CUInwtzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CUJO0NzpEeaMeaEvRdRzBA" name="getKey" method="_CdqXOtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUJO0dzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CUJO0tzpEeaMeaEvRdRzBA" name="setKey" method="_CdqXPNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUJO09zpEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CUJO1NzpEeaMeaEvRdRzBA" name="getTestedClass" method="_CdqXPtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cad5RdzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CUJ14NzpEeaMeaEvRdRzBA" name="getChildren" method="_Cdq-QtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUJ14dzpEeaMeaEvRdRzBA" type="_CUFkcNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CUJ14tzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CUKc8NzpEeaMeaEvRdRzBA" name="getParent" method="_Cdq-RdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaegUtzpEeaMeaEvRdRzBA" type="_CUFkcNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CUKc8dzpEeaMeaEvRdRzBA" name="printTree" method="_Cdq-R9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUKc8tzpEeaMeaEvRdRzBA" name="increment">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CUKc89zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CUKc9NzpEeaMeaEvRdRzBA" name="toString" method="_Cdq-StzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CULEANzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CULEBNzpEeaMeaEvRdRzBA" name="hashCode" method="_Cdq-TNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CULrENzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CacrINzpEeaMeaEvRdRzBA" name="TreeNode" method="_CdpJE9zpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CacrJNzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CacrJdzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CacrIdzpEeaMeaEvRdRzBA" name="key">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CacrItzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CacrI9zpEeaMeaEvRdRzBA" name="parent" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CadSMNzpEeaMeaEvRdRzBA" type="_CUFkcNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CadSMdzpEeaMeaEvRdRzBA" name="getDistance" method="_CdpwI9zpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeO-8dzpEeaMeaEvRdRzBA">
                <body>Called by AprioriAnalyzer
	 * @param node
	 * @return</body>
              </ownedComment>
              <ownedParameter xmi:id="_CadSMtzpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CadSM9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CadSNNzpEeaMeaEvRdRzBA" name="getDepth" method="_CdpwJtzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeO-8tzpEeaMeaEvRdRzBA">
                <body>Called by TestData (max depth)
	 * @param node
	 * @return</body>
              </ownedComment>
              <ownedParameter xmi:id="_CadSNdzpEeaMeaEvRdRzBA" name="currentNode" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CadSNtzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Cad5QtzpEeaMeaEvRdRzBA" name="search" method="_CdqXN9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cad5Q9zpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cad5RNzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CaegUNzpEeaMeaEvRdRzBA" name="setTestedClass" method="_Cdq-QNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaegUdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Cb3AYNzpEeaMeaEvRdRzBA" name="insert" method="_CdpwINzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cb3AYdzpEeaMeaEvRdRzBA" name="packageName" type="_CaUIQtzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cb3AYtzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Cb3ncdzpEeaMeaEvRdRzBA" name="getTestedClasses" method="_CdqXMNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cb3nctzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cb3nc9zpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cb3ndNzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Cb4OgdzpEeaMeaEvRdRzBA" name="equals" method="_CdrlUNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cb4OgtzpEeaMeaEvRdRzBA" name="obj" type="_CbyH4NzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cb4Og9zpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CURKoNzpEeaMeaEvRdRzBA" name="UnitTest">
            <ownedAttribute xmi:id="_Cc3tAdzpEeaMeaEvRdRzBA" name="unitTestID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc3tAtzpEeaMeaEvRdRzBA" name="unitTestName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc4UENzpEeaMeaEvRdRzBA" name="unitTestExecutionID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc4UEdzpEeaMeaEvRdRzBA" name="testMethodName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc4UEtzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CePmANzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc4UE9zpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_CePmAtzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc4UFNzpEeaMeaEvRdRzBA" name="passed" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdsMYNzpEeaMeaEvRdRzBA" name="UnitTest" specification="_CafucNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdsMYdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdsMYtzpEeaMeaEvRdRzBA" name="unitTestID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdsMY9zpEeaMeaEvRdRzBA" name="unitTestName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdsMZNzpEeaMeaEvRdRzBA" name="unitTestExecutionID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdsMZdzpEeaMeaEvRdRzBA" name="testMethodName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdsMZtzpEeaMeaEvRdRzBA" type="_CURKoNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// TODO Auto-generated constructor stub
		this.testRun = testRun;
		this.unitTestID = unitTestID;
		this.unitTestName = unitTestName;
		this.unitTestExecutionID = unitTestExecutionID;
		this.testMethodName = testMethodName;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdsMZ9zpEeaMeaEvRdRzBA" name="hasPassed" specification="_CUSYwNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdsMaNzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return passed;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdsMadzpEeaMeaEvRdRzBA" name="setOutcome" specification="_CUSYwtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdsMatzpEeaMeaEvRdRzBA" name="outcome">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (outcome.equals(&quot;Passed&quot;)) {
			this.passed = true;
		} else {
			this.passed = false;
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdsMa9zpEeaMeaEvRdRzBA" name="toString" specification="_CUS_0dzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdsMbNzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;UnitTest [unitTestID=&quot; + unitTestID + &quot;, unitTestName=&quot; + unitTestName + &quot;, outcome=&quot; + passed + &quot;]&quot;;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CUSYwNzpEeaMeaEvRdRzBA" name="hasPassed" method="_CdsMZ9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUSYwdzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CUSYwtzpEeaMeaEvRdRzBA" name="setOutcome" method="_CdsMadzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUS_0NzpEeaMeaEvRdRzBA" name="outcome">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CUS_0dzpEeaMeaEvRdRzBA" name="toString" method="_CdsMa9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUS_0tzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CafucNzpEeaMeaEvRdRzBA" name="UnitTest" method="_CdsMYNzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CafudtzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Cafud9zpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CafucdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CafuctzpEeaMeaEvRdRzBA" name="unitTestID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cafuc9zpEeaMeaEvRdRzBA" name="unitTestName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CafudNzpEeaMeaEvRdRzBA" name="unitTestExecutionID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CafuddzpEeaMeaEvRdRzBA" name="testMethodName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CafueNzpEeaMeaEvRdRzBA" type="_CURKoNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CUVcENzpEeaMeaEvRdRzBA" name="UnitTestsToTestRunMapper">
            <ownedComment xmi:id="_CePmBNzpEeaMeaEvRdRzBA">
              <body>Maps one TestedClass to One TestRun and multiple UnitTests
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_Cc47IdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CeQNENzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc47ItzpEeaMeaEvRdRzBA" name="unitTestList" type="_CURKoNzpEeaMeaEvRdRzBA" isOrdered="true" association="_CeuHI9zpEeaMeaEvRdRzBA">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cc47I9zpEeaMeaEvRdRzBA" value="*"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_Cc47JNzpEeaMeaEvRdRzBA" value="new ArrayList&lt;>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_Cc47JdzpEeaMeaEvRdRzBA" name="failurePercentage">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdszdNzpEeaMeaEvRdRzBA" name="UnitTestsToTestRunMapper" specification="_Cag8kNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdszddzpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdszdtzpEeaMeaEvRdRzBA" type="_CUVcENzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.testRun = unitTest.getTestRun();
		unitTestList.add(unitTest);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdszd9zpEeaMeaEvRdRzBA" name="addUnitTestToTestRun" specification="_Cag8ldzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdszeNzpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>unitTestList.add(unitTest);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdtagNzpEeaMeaEvRdRzBA" name="calculateFailurePercentage" specification="_CUWqMNzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>double numberOfUnitTests = unitTestList.size();
		double numberOfFailedTests = 0;
		for (UnitTest unitTest : unitTestList) {
			if (!unitTest.hasPassed()) {
				numberOfFailedTests++;
			}
		}
		failurePercentage = (numberOfFailedTests * 100 / numberOfUnitTests);
		int round = (int) Math.round(failurePercentage * 100);
		// limit double to two digits after comma
		failurePercentage = round / 100.0;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdtagdzpEeaMeaEvRdRzBA" name="toString" specification="_CUWqMdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdtagtzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;Mapper [testRun=&quot; + testRun.getRunID() + &quot;, unitTestList=&quot; + unitTestList + &quot;, failurePercentage=&quot;
				+ getFailurePercentage() + &quot;]&quot;;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CUWqMNzpEeaMeaEvRdRzBA" name="calculateFailurePercentage" visibility="private" method="_CdtagNzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CUWqMdzpEeaMeaEvRdRzBA" name="toString" method="_CdtagdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUWqMtzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Cag8kNzpEeaMeaEvRdRzBA" name="UnitTestsToTestRunMapper" method="_CdszdNzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_Cag8ktzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Cag8k9zpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Cag8kdzpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cag8lNzpEeaMeaEvRdRzBA" type="_CUVcENzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Cag8ldzpEeaMeaEvRdRzBA" name="addUnitTestToTestRun" method="_Cdszd9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cag8ltzpEeaMeaEvRdRzBA" name="unitTest" type="_CURKoNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CeOX4NzpEeaMeaEvRdRzBA" name="" memberEnd="_Cczbk9zpEeaMeaEvRdRzBA _CeOX4dzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CeOX4dzpEeaMeaEvRdRzBA" name="" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CeOX4NzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CeOX4tzpEeaMeaEvRdRzBA" name="" memberEnd="_Cc0psNzpEeaMeaEvRdRzBA _CeOX49zpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CeOX49zpEeaMeaEvRdRzBA" name="" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CeOX4tzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CePmANzpEeaMeaEvRdRzBA" name="" memberEnd="_Cc4UEtzpEeaMeaEvRdRzBA _CePmAdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CePmAdzpEeaMeaEvRdRzBA" name="" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CePmANzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CePmAtzpEeaMeaEvRdRzBA" name="" memberEnd="_Cc4UE9zpEeaMeaEvRdRzBA _CePmA9zpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CePmA9zpEeaMeaEvRdRzBA" name="" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CePmAtzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CeQNENzpEeaMeaEvRdRzBA" name="" memberEnd="_Cc47IdzpEeaMeaEvRdRzBA _CeQNEdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CeQNEdzpEeaMeaEvRdRzBA" name="" type="_CUVcENzpEeaMeaEvRdRzBA" association="_CeQNENzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CeqcxNzpEeaMeaEvRdRzBA" name="" memberEnd="_CeqcxdzpEeaMeaEvRdRzBA _CcwYQNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CeqcxdzpEeaMeaEvRdRzBA" name="" type="_CThjwNzpEeaMeaEvRdRzBA" association="_CeqcxNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CerD0dzpEeaMeaEvRdRzBA" name="" memberEnd="_CerD0tzpEeaMeaEvRdRzBA _CcwYQtzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CerD0tzpEeaMeaEvRdRzBA" name="" type="_CTlOINzpEeaMeaEvRdRzBA" association="_CerD0dzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CerD1NzpEeaMeaEvRdRzBA" name="" memberEnd="_CerD1dzpEeaMeaEvRdRzBA _Ccw_UdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CerD1dzpEeaMeaEvRdRzBA" name="" type="_CTlOINzpEeaMeaEvRdRzBA" association="_CerD1NzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cerq4dzpEeaMeaEvRdRzBA" name="" memberEnd="_Cerq4tzpEeaMeaEvRdRzBA _Ccw_VNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cerq4tzpEeaMeaEvRdRzBA" name="" type="_CTlOINzpEeaMeaEvRdRzBA" association="_Cerq4dzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cerq5NzpEeaMeaEvRdRzBA" name="" memberEnd="_Cerq5dzpEeaMeaEvRdRzBA _CcxmYtzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cerq5dzpEeaMeaEvRdRzBA" name="" type="_CTlOINzpEeaMeaEvRdRzBA" association="_Cerq5NzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CesR8dzpEeaMeaEvRdRzBA" name="" memberEnd="_CesR8tzpEeaMeaEvRdRzBA _CcxmZNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CesR8tzpEeaMeaEvRdRzBA" name="" type="_CTlOINzpEeaMeaEvRdRzBA" association="_CesR8dzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CesR9NzpEeaMeaEvRdRzBA" name="" memberEnd="_CesR9dzpEeaMeaEvRdRzBA _Cc0CoNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CesR9dzpEeaMeaEvRdRzBA" name="" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CesR9NzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ces5AdzpEeaMeaEvRdRzBA" name="" memberEnd="_Ces5AtzpEeaMeaEvRdRzBA _Cc130NzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ces5AtzpEeaMeaEvRdRzBA" name="" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_Ces5AdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ces5BNzpEeaMeaEvRdRzBA" name="" memberEnd="_Ces5BdzpEeaMeaEvRdRzBA _Cc2e4NzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ces5BdzpEeaMeaEvRdRzBA" name="" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_Ces5BNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CetgEdzpEeaMeaEvRdRzBA" name="" memberEnd="_CetgEtzpEeaMeaEvRdRzBA _Cc3F8NzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CetgEtzpEeaMeaEvRdRzBA" name="" type="_CUFkcNzpEeaMeaEvRdRzBA" association="_CetgEdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CetgFNzpEeaMeaEvRdRzBA" name="" memberEnd="_CetgFdzpEeaMeaEvRdRzBA _Cc3F8tzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CetgFdzpEeaMeaEvRdRzBA" name="" type="_CUFkcNzpEeaMeaEvRdRzBA" association="_CetgFNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CeuHINzpEeaMeaEvRdRzBA" name="" memberEnd="_CeuHIdzpEeaMeaEvRdRzBA _Cc3F9tzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CeuHIdzpEeaMeaEvRdRzBA" name="" type="_CUFkcNzpEeaMeaEvRdRzBA" association="_CeuHINzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CeuHI9zpEeaMeaEvRdRzBA" name="" memberEnd="_CeuHJNzpEeaMeaEvRdRzBA _Cc47ItzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CeuHJNzpEeaMeaEvRdRzBA" name="" type="_CUVcENzpEeaMeaEvRdRzBA" association="_CeuHI9zpEeaMeaEvRdRzBA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CNi3kNzpEeaMeaEvRdRzBA" name="model">
          <packagedElement xmi:type="uml:Class" xmi:id="_CUl6wNzpEeaMeaEvRdRzBA" name="Model">
            <generalization xmi:id="_Cb-VINzpEeaMeaEvRdRzBA" general="_CaoRUtzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc8lgNzpEeaMeaEvRdRzBA" name="parser" type="_CTcEMNzpEeaMeaEvRdRzBA" association="_Cc8lgtzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc9MkNzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_Cc9zodzpEeaMeaEvRdRzBA">
              <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Cc9MkdzpEeaMeaEvRdRzBA"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cc9MktzpEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdvPtdzpEeaMeaEvRdRzBA" name="Model" specification="_CUmh0NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdvPttzpEeaMeaEvRdRzBA" type="_CUl6wNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		// initialize program:
		parser = new StAXParser();

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdv2wNzpEeaMeaEvRdRzBA" name="parseFile" specification="_CUmh1NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdv2wdzpEeaMeaEvRdRzBA" name="xmlPath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {
			parser.parse(xmlPath);
		} catch (WrongXMLAttributeException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdv2wtzpEeaMeaEvRdRzBA" name="getTestedClassesFromTestRun" specification="_CapfcNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdv2w9zpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdv2xNzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cdv2xdzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;TestedClass> classesOfOneRun = testRun.getTestedClasses();

		for (TestedClass testedClass : classesOfOneRun) {
			testedClass.setCurrentFailurePercentage(testRun);
		}

		return classesOfOneRun;

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CUmh0NzpEeaMeaEvRdRzBA" name="Model" method="_CdvPtdzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CUmh0dzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CUmh0tzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CUmh09zpEeaMeaEvRdRzBA" type="_CUl6wNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CUmh1NzpEeaMeaEvRdRzBA" name="parseFile" method="_Cdv2wNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUmh1dzpEeaMeaEvRdRzBA" name="xmlPath">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CapfcNzpEeaMeaEvRdRzBA" name="getTestedClassesFromTestRun" method="_Cdv2wtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CapfcdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CapfctzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Capfc9zpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cc8lgtzpEeaMeaEvRdRzBA" name="" memberEnd="_Cc8lgdzpEeaMeaEvRdRzBA _Cc8lgNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cc8lgdzpEeaMeaEvRdRzBA" name="model" type="_CUl6wNzpEeaMeaEvRdRzBA" association="_Cc8lgtzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cc9zodzpEeaMeaEvRdRzBA" name="" memberEnd="_Cc9zoNzpEeaMeaEvRdRzBA _Cc9MkNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cc9zoNzpEeaMeaEvRdRzBA" name="model" type="_CUl6wNzpEeaMeaEvRdRzBA" association="_Cc9zodzpEeaMeaEvRdRzBA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CNi3kdzpEeaMeaEvRdRzBA" name="view">
          <packagedElement xmi:type="uml:Class" xmi:id="_CUoXANzpEeaMeaEvRdRzBA" name="TDAAnalyzerView">
            <ownedAttribute xmi:id="_Cc9zotzpEeaMeaEvRdRzBA" name="frequentItemsTable" visibility="private" type="_Casiw9zpEeaMeaEvRdRzBA" association="_CewjZNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc-astzpEeaMeaEvRdRzBA" name="strongRulesTable" visibility="private" type="_Casiw9zpEeaMeaEvRdRzBA" association="_CexKcNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc_BwtzpEeaMeaEvRdRzBA" name="confidenceCol" visibility="private" type="_CasiwdzpEeaMeaEvRdRzBA" association="_CexKc9zpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_Cc_o0tzpEeaMeaEvRdRzBA" name="supportCountCol" visibility="private" type="_CasiwdzpEeaMeaEvRdRzBA" association="_CexxgdzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdv2xtzpEeaMeaEvRdRzBA" name="createFrequentItemTable" specification="_CUo-ENzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdv2x9zpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>TableColumn&lt;Entry&lt;String, String>, String> itemSetCol = new TableColumn&lt;>(&quot;Frequent Items&quot;);
		itemSetCol.setCellValueFactory(
				new Callback&lt;TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String>, ObservableValue&lt;String>>() {

					@Override
					public ObservableValue&lt;String> call(
							TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String> entry) {
						return new SimpleStringProperty(entry.getValue().getKey());
					}
				});

		supportCountCol = new TableColumn&lt;>(&quot;Support Count&quot;);
		supportCountCol.setCellValueFactory(
				new Callback&lt;TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String>, ObservableValue&lt;String>>() {

					@Override
					public ObservableValue&lt;String> call(
							TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String> entry) {
						// for second column we use value
						return new SimpleStringProperty(entry.getValue().getValue());
					}
				});
		
		itemSetCol.setMinWidth(500);
		supportCountCol.setSortType(TableColumn.SortType.DESCENDING);
		frequentItemsTable = new TableView&lt;>();
		frequentItemsTable.getColumns().setAll(itemSetCol, supportCountCol);
		frequentItemsTable.getSortOrder().add(supportCountCol);
		frequentItemsTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);
		frequentItemsTable.setPrefWidth(800);
		frequentItemsTable.setPrefHeight(300);

		ScrollPane scrollPane = new ScrollPane(frequentItemsTable);

		return scrollPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdv2yNzpEeaMeaEvRdRzBA" name="createStrongRulesTable" specification="_CUqMMdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdv2ydzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>TableColumn&lt;Entry&lt;String, String>, String> strongRuleCol = new TableColumn&lt;>(&quot;Strong Rule&quot;);
		strongRuleCol.setCellValueFactory(
				new Callback&lt;TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String>, ObservableValue&lt;String>>() {

					@Override
					public ObservableValue&lt;String> call(
							TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String> entry) {
						return new SimpleStringProperty(entry.getValue().getKey());
					}
				});

		confidenceCol = new TableColumn&lt;>(&quot;Confidence&quot;);
		confidenceCol.setCellValueFactory(
				new Callback&lt;TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String>, ObservableValue&lt;String>>() {

					@Override
					public ObservableValue&lt;String> call(
							TableColumn.CellDataFeatures&lt;Entry&lt;String, String>, String> entry) {
						// for second column we use value
						return new SimpleStringProperty(entry.getValue().getValue());
					}
				});
		
		strongRuleCol.setMinWidth(500);
		confidenceCol.setSortType(TableColumn.SortType.DESCENDING);
		strongRulesTable = new TableView&lt;>();
		strongRulesTable.getColumns().setAll(strongRuleCol, confidenceCol);
		strongRulesTable.getSortOrder().add(confidenceCol);
		strongRulesTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);
		strongRulesTable.setPrefWidth(800);
		strongRulesTable.setPrefHeight(300);
		

		ScrollPane scrollPane = new ScrollPane(strongRulesTable);

		return scrollPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdv2ytzpEeaMeaEvRdRzBA" name="fillFrequentItemTable" specification="_CUqzQ9zpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>HashMap&lt;List&lt;TestedClass>, Integer> itemSet = TestData.getInstance().getAnalyzer().getFrequentItemSets();
		HashMap&lt;String, String> stringItemSet = hashMapToString(itemSet);

		ObservableList&lt;Entry&lt;String, String>> items = FXCollections.observableArrayList(stringItemSet.entrySet());
		
		// Sort
		supportCountCol.setSortType(TableColumn.SortType.DESCENDING);
		strongRulesTable.getSortOrder().add(supportCountCol);
		
		frequentItemsTable.setItems(items);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdwd0NzpEeaMeaEvRdRzBA" name="fillStrongRulesTable" specification="_CUraUNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdwd0dzpEeaMeaEvRdRzBA" name="confidence">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;StrongRule> strongRules = TestData.getInstance().getAnalyzer().getStrongRules(confidence);
		HashMap&lt;String, String> stringItemSet = strongRulesToStringHashMap(strongRules);
		
		ObservableList&lt;Entry&lt;String, String>> items = FXCollections.observableArrayList(stringItemSet.entrySet());
		
		// Sort
		confidenceCol.setSortType(TableColumn.SortType.DESCENDING);
		strongRulesTable.getSortOrder().add(confidenceCol);
		strongRulesTable.setItems(items);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdwd0tzpEeaMeaEvRdRzBA" name="hashMapToString" specification="_Cb_jQtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdwd09zpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdwd1NzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>HashMap&lt;String, String> result = new HashMap&lt;String, String>();

		for (Entry&lt;List&lt;TestedClass>, Integer> entry : itemSet.entrySet()) {
			String key = testedClassListToString(entry.getKey());
			String value = entry.getValue().toString();
			result.put(key, value);
		}
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdwd1dzpEeaMeaEvRdRzBA" name="strongRulesToStringHashMap" specification="_CcAxYdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdwd1tzpEeaMeaEvRdRzBA" name="strongRules" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdwd19zpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>HashMap&lt;String, String> result = new HashMap&lt;String, String>();

		for (StrongRule strongRule : strongRules) {
			String key = testedClassListToString(strongRule.getLeftSide()) + &quot; -> &quot;
					+ testedClassListToString(strongRule.getRightSide());
			int conf = (int) (strongRule.getConfidence() * 100);
			String value = conf + &quot;%&quot;;
			result.put(key, value);
		}
		return result;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdwd2NzpEeaMeaEvRdRzBA" name="testedClassListToString" specification="_CcB_gNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdwd2dzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdwd2tzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String result = &quot;&quot;;
		for (int i = 0; i &lt; testedClasses.size(); i++) {
			result += testedClasses.get(i).getClassName();
			if (i &lt; testedClasses.size() - 1) {
				result += &quot;, &quot;;
			}
		}
		return result;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CUo-ENzpEeaMeaEvRdRzBA" name="createFrequentItemTable" method="_Cdv2xtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cb_jQNzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CUqMMdzpEeaMeaEvRdRzBA" name="createStrongRulesTable" method="_Cdv2yNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cb_jQdzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CUqzQ9zpEeaMeaEvRdRzBA" name="fillFrequentItemTable" method="_Cdv2ytzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CUraUNzpEeaMeaEvRdRzBA" name="fillStrongRulesTable" method="_Cdwd0NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUraUdzpEeaMeaEvRdRzBA" name="confidence">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Cb_jQtzpEeaMeaEvRdRzBA" name="hashMapToString" visibility="private" method="_Cdwd0tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cb_jQ9zpEeaMeaEvRdRzBA" name="itemSet" type="_CaqGgNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcAKUdzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CcAxYdzpEeaMeaEvRdRzBA" name="strongRulesToStringHashMap" visibility="private" method="_Cdwd1dzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcAxYtzpEeaMeaEvRdRzBA" name="strongRules" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcBYcdzpEeaMeaEvRdRzBA" type="_CaqGgNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CcB_gNzpEeaMeaEvRdRzBA" name="testedClassListToString" visibility="private" method="_Cdwd2NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcB_gdzpEeaMeaEvRdRzBA" name="testedClasses" type="_CaMzg9zpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcB_gtzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CUudoNzpEeaMeaEvRdRzBA" name="TDAChart">
            <ownedAttribute xmi:id="_CdAP4dzpEeaMeaEvRdRzBA" name="xAxis" visibility="private" isLeaf="true" type="_CavmEdzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CexxhNzpEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdAP4tzpEeaMeaEvRdRzBA" value="new CategoryAxis()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CdA28dzpEeaMeaEvRdRzBA" name="yAxis" visibility="private" isLeaf="true" type="_CawNIdzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CeyYkdzpEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdA28tzpEeaMeaEvRdRzBA" value="new NumberAxis()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CdA29NzpEeaMeaEvRdRzBA" name="lineChart" type="_CavmE9zpEeaMeaEvRdRzBA" isReadOnly="true" association="_CeyYlNzpEeaMeaEvRdRzBA">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdBeAdzpEeaMeaEvRdRzBA" value="new LineChart&lt;>(xAxis, yAxis)"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CdBeAtzpEeaMeaEvRdRzBA" name="series" visibility="private" type="_CaxbQdzpEeaMeaEvRdRzBA" association="_Cey_odzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdCFENzpEeaMeaEvRdRzBA" name="controller" visibility="private" type="_CTCbkNzpEeaMeaEvRdRzBA" association="_Cey_pNzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdxE4NzpEeaMeaEvRdRzBA" name="TDAChart" specification="_CayCUdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdxE4dzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdxE4tzpEeaMeaEvRdRzBA" type="_CUudoNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.controller = controller;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdxE49zpEeaMeaEvRdRzBA" name="generateLineChart" specification="_CUvrwNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdxE5NzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>xAxis.setLabel(&quot;TestRun&quot;);
		yAxis.setLabel(&quot;Failure Percentage&quot;);

		lineChart.setTitle(&quot;Failure Percentage over all TestRuns&quot;);

		return lineChart;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdxE5dzpEeaMeaEvRdRzBA" name="setChartData" specification="_CaypYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdxE5tzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>// a series equals a line in the graph; so here there will be line for
		// every class you click
		series = new XYChart.Series&lt;>();

		List&lt;XYChart.Data&lt;TestRun, Number>> datas = controller.calculateChartData(testedClass);
		int cnt = 1;
		for (XYChart.Data&lt;TestRun, Number> data : datas) {
			
			String xAxisLabel = Integer.toString(cnt);
			XYChart.Data&lt;String, Number> dataPoint = new XYChart.Data&lt;String, Number>(xAxisLabel, data.getYValue());
			//set the HoverNode for a dataPoint
			dataPoint.setNode(new HoveredThresholdNode(data.getXValue(), data.getYValue(), testedClass));
			
			series.getData().add(dataPoint);
			cnt++;
		} 
			
		series.setName(testedClass.getClassName());
		lineChart.getData().add(series);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CUvrwNzpEeaMeaEvRdRzBA" name="generateLineChart" method="_CdxE49zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcCmkNzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CayCUdzpEeaMeaEvRdRzBA" name="TDAChart" method="_CdxE4NzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CayCU9zpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CayCVNzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CayCUtzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CayCVdzpEeaMeaEvRdRzBA" type="_CUudoNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CaypYNzpEeaMeaEvRdRzBA" name="setChartData" method="_CdxE5dzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaypYdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_CUwS0NzpEeaMeaEvRdRzBA" name="HoveredThresholdNode" visibility="package">
              <ownedComment xmi:id="_CeRbMdzpEeaMeaEvRdRzBA">
                <body>a node which displays a value on hover, but is otherwise empty 
	 *  inspired by https://gist.github.com/jewelsea/4681797</body>
              </ownedComment>
              <generalization xmi:id="_CcEbxdzpEeaMeaEvRdRzBA" general="_Caw0M9zpEeaMeaEvRdRzBA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdxE59zpEeaMeaEvRdRzBA" name="HoveredThresholdNode" specification="_CcD0sNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CdxE6NzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CdxE6dzpEeaMeaEvRdRzBA" name="value" type="_CcDNoNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CdxE6tzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CdxE69zpEeaMeaEvRdRzBA" type="_CUwS0NzpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>setPrefSize(10, 10);
			final Label label = createDataThresholdLabel(testRun, value, testedClass);
			setOnMouseClicked(new EventHandler&lt;MouseEvent>() {
				@Override
				public void handle(MouseEvent event) {
					controller.handleChartNodeClick(testRun, testedClass);
				}
				
			});
			
			setOnMouseEntered(new EventHandler&lt;MouseEvent>() {
				@Override
				public void handle(MouseEvent mouseEvent) {
					getChildren().setAll(label);
					toFront();
				}
			});
			setOnMouseExited(new EventHandler&lt;MouseEvent>() {
				@Override
				public void handle(MouseEvent mouseEvent) {
					getChildren().clear();
					setCursor(Cursor.CROSSHAIR);
				}
			});

		</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdxr8NzpEeaMeaEvRdRzBA" name="createDataThresholdLabel" specification="_CcEbwNzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_Cdxr8dzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Cdxr8tzpEeaMeaEvRdRzBA" name="value" type="_CcDNoNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Cdxr89zpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_Cdxr9NzpEeaMeaEvRdRzBA" type="_CawNI9zpEeaMeaEvRdRzBA" direction="return"/>
                <language>java</language>
                <body>String labelString = testRun.getRunDate().toString();
			labelString += &quot;\nPassed: &quot; + testedClass.getUnitTestsByTestRun(testRun, true).size();
			labelString += &quot;\nFailed: &quot; + testedClass.getUnitTestsByTestRun(testRun, false).size();
			final Label label = new Label(labelString);
			label.getStyleClass().addAll(&quot;default-color0&quot;, &quot;chart-line-symbol&quot;, &quot;chart-series-line&quot;);
			label.setStyle(&quot;-fx-font-size: 10;&quot;);
			label.setMinSize(Label.USE_PREF_SIZE, Label.USE_PREF_SIZE);
			return label;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_CcD0sNzpEeaMeaEvRdRzBA" name="HoveredThresholdNode" visibility="package" method="_CdxE59zpEeaMeaEvRdRzBA">
                <eAnnotations xmi:id="_CcD0tNzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_CcD0tdzpEeaMeaEvRdRzBA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_CcD0sdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcD0stzpEeaMeaEvRdRzBA" name="value" type="_CcDNoNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcD0s9zpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcD0ttzpEeaMeaEvRdRzBA" type="_CUwS0NzpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CcEbwNzpEeaMeaEvRdRzBA" name="createDataThresholdLabel" visibility="private" method="_Cdxr8NzpEeaMeaEvRdRzBA">
                <ownedParameter xmi:id="_CcEbwdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcEbwtzpEeaMeaEvRdRzBA" name="value" type="_CcDNoNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcEbw9zpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
                <ownedParameter xmi:id="_CcEbxNzpEeaMeaEvRdRzBA" type="_CawNI9zpEeaMeaEvRdRzBA" direction="return"/>
              </ownedOperation>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CU0kQNzpEeaMeaEvRdRzBA" name="TDAClassView">
            <ownedAttribute xmi:id="_CdCFEtzpEeaMeaEvRdRzBA" name="classView" visibility="private" type="_Ca0ektzpEeaMeaEvRdRzBA" association="_CezmsdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdCsItzpEeaMeaEvRdRzBA" name="view" visibility="private" isLeaf="true" type="_CWCsQNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CezmtNzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdxr9dzpEeaMeaEvRdRzBA" name="TDAClassView" specification="_Ca1ssNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdxr9tzpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdxr99zpEeaMeaEvRdRzBA" type="_CU0kQNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.view = view;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdxr-NzpEeaMeaEvRdRzBA" name="generateEmptyClassView" specification="_CU1yYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdxr-dzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Create a TreeView that has the selectedDirectory as rootItem
		TreeView&lt;TreeNode> treeView = new TreeView&lt;TreeNode>();
		this.classView = treeView;
		return treeView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdxr-tzpEeaMeaEvRdRzBA" name="createClassView" specification="_Ca1stdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdxr-9zpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdxr_NzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>EventHandler&lt;MouseEvent> mouseEventHandle = (MouseEvent event) -> {
			handleMouseClicked(event);
		};

		classView.addEventHandler(MouseEvent.MOUSE_CLICKED, mouseEventHandle);

		TreeItem&lt;TreeNode> rootItem = createClassItems(node);
		classView.setRoot(rootItem);
		return classView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdyTANzpEeaMeaEvRdRzBA" name="createClassItems" specification="_Ca2TwdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdyTAdzpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdyTAtzpEeaMeaEvRdRzBA" type="_CaNak9zpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>TreeItem&lt;TreeNode> rootItem = new TreeItem&lt;TreeNode>(node);

		// All Leafs
		if (node.getChildren().size() == 0) {
			return rootItem;
		}

		for (TreeNode child : node.getChildren()) {
			// Create new TreeItem as root with children
			TreeItem&lt;TreeNode> subRoot = createClassItems(child);
			rootItem.getChildren().add(subRoot);
		}
		return rootItem;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdyTA9zpEeaMeaEvRdRzBA" name="fillClassView" specification="_Ca260NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdyTBNzpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdyTBdzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Create a TreeView that has the selectedDirectory as rootItem
		classView = createClassView(node);

		// Below works, but is deprecated
		// view.showTreeView(treeView);
		view.updateClassView(classView);

		return classView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdyTBtzpEeaMeaEvRdRzBA" name="handleMouseClicked" specification="_CcFp4tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdyTB9zpEeaMeaEvRdRzBA" name="event" type="_Caw0MdzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>Node node = event.getPickResult().getIntersectedNode();
		// Accept clicks only on node cells, and not on empty spaces of the
		// TreeView
		if (node instanceof Text || (node instanceof TreeCell &amp;&amp; ((TreeCell) node).getText() != null)) {
			TreeNode clickedNode = (TreeNode) ((TreeItem) classView.getSelectionModel().getSelectedItem()).getValue();
				view.getController().handleClassTreeClick(clickedNode);
		}
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CU1yYNzpEeaMeaEvRdRzBA" name="generateEmptyClassView" method="_Cdxr-NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcFC0NzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Ca1ssNzpEeaMeaEvRdRzBA" name="TDAClassView" method="_Cdxr9dzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_Ca1sstzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Ca1ss9zpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Ca1ssdzpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Ca1stNzpEeaMeaEvRdRzBA" type="_CU0kQNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Ca1stdzpEeaMeaEvRdRzBA" name="createClassView" method="_Cdxr-tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Ca1sttzpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcFC0dzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Ca2TwdzpEeaMeaEvRdRzBA" name="createClassItems" method="_CdyTANzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Ca2TwtzpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcFp4NzpEeaMeaEvRdRzBA" type="_CaNak9zpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Ca260NzpEeaMeaEvRdRzBA" name="fillClassView" method="_CdyTA9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Ca260dzpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcFp4dzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CcFp4tzpEeaMeaEvRdRzBA" name="handleMouseClicked" visibility="private" method="_CdyTBtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcFp49zpEeaMeaEvRdRzBA" name="event" type="_Caw0MdzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CU4OoNzpEeaMeaEvRdRzBA" name="TDAMenuBar">
            <ownedAttribute xmi:id="_CdCsJNzpEeaMeaEvRdRzBA" name="controller" visibility="private" type="_CTCbkNzpEeaMeaEvRdRzBA" association="_Cezmt9zpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdDTMdzpEeaMeaEvRdRzBA" name="view" visibility="private" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_Ce0NwdzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdyTCNzpEeaMeaEvRdRzBA" name="TDAMenuBar" specification="_Ca6lMdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdyTCdzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdyTCtzpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdyTC9zpEeaMeaEvRdRzBA" type="_CU4OoNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.controller = controller;
		this.view = view;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdy6ENzpEeaMeaEvRdRzBA" name="createMenuBar" specification="_CU5cwNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdy6EdzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>MenuBar menuBar = new MenuBar();
		Menu file = new Menu(&quot;File&quot;);

		// Open the File Browser, capable of selecting multiple files
		MenuItem openFile = new MenuItem(&quot;Open File&quot;);
		openFile.setOnAction(new EventHandler&lt;ActionEvent>() {

			@Override
			public void handle(ActionEvent event) {

				controller.openFile();

			}
		});
		// Open the Folder Browser, capable of selecting multiple files
		MenuItem openFolder = new MenuItem(&quot;Open Folder&quot;);
		openFolder.setOnAction(new EventHandler&lt;ActionEvent>() {

			@Override
			public void handle(ActionEvent event) {
				controller.openFolder();
			}
		});
		/*
		 * MenuItem recentItem = new MenuItem(&quot;Recent&quot;);
		 * recentItem.setOnAction(new EventHandler&lt;ActionEvent>() {
		 * 
		 * @Override public void handle(ActionEvent event) { // TODO } });
		 */
		MenuItem clearData = new MenuItem(&quot;Clear All Data&quot;);
		clearData.setOnAction(new EventHandler&lt;ActionEvent>() {
			@Override
			public void handle(ActionEvent event) {
				controller.handleClearDataButton();
				event.consume();
			}
		});
		MenuItem exitItem = new MenuItem(&quot;Exit&quot;);
		exitItem.setOnAction(new EventHandler&lt;ActionEvent>() {
			@Override
			public void handle(ActionEvent event) {
				controller.exitMain();
				event.consume();
			}
		});
		file.getItems().addAll(openFile, openFolder, clearData, exitItem);
		menuBar.getMenus().add(file);

		return menuBar;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdy6EtzpEeaMeaEvRdRzBA" name="clearDataAlert" specification="_CU5cwdzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>Alert clearDataAlert = new Alert(AlertType.CONFIRMATION,
				&quot;Do you really want to clear all Data?\n All loaded TestRuns will be lost.&quot;);
		clearDataAlert.setTitle(&quot;Clear Data?&quot;);

		Optional&lt;ButtonType> result = clearDataAlert.showAndWait();
		if (result.isPresent() &amp;&amp; result.get() == ButtonType.OK) {
			controller.clearData();
		}
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CU5cwNzpEeaMeaEvRdRzBA" name="createMenuBar" method="_Cdy6ENzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcGQ8NzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CU5cwdzpEeaMeaEvRdRzBA" name="clearDataAlert" method="_Cdy6EtzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_Ca6lMdzpEeaMeaEvRdRzBA" name="TDAMenuBar" method="_CdyTCNzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_Ca6lNNzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Ca6lNdzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Ca6lMtzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Ca6lM9zpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Ca6lNtzpEeaMeaEvRdRzBA" type="_CU4OoNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CU6q4NzpEeaMeaEvRdRzBA" name="TDATableView">
            <ownedAttribute xmi:id="_CdDTM9zpEeaMeaEvRdRzBA" name="controller" visibility="private" type="_CTCbkNzpEeaMeaEvRdRzBA" association="_Ce0NxNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdDTNdzpEeaMeaEvRdRzBA" name="testedClassesTable" visibility="private" type="_Casiw9zpEeaMeaEvRdRzBA" association="_Ce000dzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdD6QtzpEeaMeaEvRdRzBA" name="data" type="_CarUo9zpEeaMeaEvRdRzBA" isReadOnly="true" association="_Ce001NzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdEhUdzpEeaMeaEvRdRzBA" name="classNameCol" visibility="private" type="_CasiwdzpEeaMeaEvRdRzBA" association="_Ce1b4dzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdEhU9zpEeaMeaEvRdRzBA" name="failurePercentageCol" visibility="private" type="_CasiwdzpEeaMeaEvRdRzBA" association="_Ce1b5NzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdy6E9zpEeaMeaEvRdRzBA" name="TDATableView" specification="_Ca8aYdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdy6FNzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdy6FdzpEeaMeaEvRdRzBA" type="_CU6q4NzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.controller = controller;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdy6FtzpEeaMeaEvRdRzBA" name="createTestedClassesTable" specification="_CU75ANzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdy6F9zpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>testedClassesTable = new TableView&lt;TestedClass>();
		testedClassesTable.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);

		testedClassesTable.setPrefWidth(800);
		testedClassesTable.setPrefHeight(300);

		classNameCol = new TableColumn(&quot;Tested Class&quot;);
		failurePercentageCol = new TableColumn(&quot;Failure Percentage&quot;);

		classNameCol.setCellValueFactory(new PropertyValueFactory&lt;TestedClass, String>(&quot;className&quot;));
		failurePercentageCol
				.setCellValueFactory(new PropertyValueFactory&lt;TestedClass, Double>(&quot;currentFailurePercentage&quot;));

		failurePercentageCol.setSortType(TableColumn.SortType.DESCENDING);

		testedClassesTable.getColumns().addAll(classNameCol, failurePercentageCol);
		testedClassesTable.getSortOrder().add(failurePercentageCol);

		testedClassesTable.setRowFactory(tv -> {
			TableRow&lt;TestedClass> row = new TableRow&lt;TestedClass>() {

				@Override
				public void updateItem(TestedClass item, boolean empty) {
					super.updateItem(item, empty);
					if (item == null) {
						setStyle(&quot;&quot;);
					} else if (item.getCurrentFailurePercentage() > 90.00) {
						setStyle(&quot;-fx-background-color: red;&quot;);
					} else if (item.getCurrentFailurePercentage() > 75.00) {
						setStyle(&quot;-fx-background-color: orange;&quot;);
					} else if (item.getCurrentFailurePercentage() > 50.00) {
						setStyle(&quot;-fx-background-color: yellow;&quot;);
					} else {
						setStyle(&quot;&quot;);
					}
				}

			};

			// Make rows able to be double clicked and display the selected row
			// in
			// the graph
			row.setOnMouseClicked(event -> {
				if (event.getClickCount() == 2 &amp;&amp; (!row.isEmpty())) {
					TestedClass testedClass = row.getItem();

					controller.handleTableRowClick(testedClass);
				}
			});
			return row;
		});

		ScrollPane scrollPane = new ScrollPane(testedClassesTable);

		return scrollPane;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdy6GNzpEeaMeaEvRdRzBA" name="fillTestedClassTable" specification="_Ca9Bc9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdy6GdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>data = FXCollections.observableArrayList(controller.getTestedClassesFromTestRun(testRun));

		testedClassesTable.setItems(data);

		failurePercentageCol.setSortType(TableColumn.SortType.DESCENDING);
		testedClassesTable.getSortOrder().add(failurePercentageCol);

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CU75ANzpEeaMeaEvRdRzBA" name="createTestedClassesTable" method="_Cdy6FtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcG4ANzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Ca8aYdzpEeaMeaEvRdRzBA" name="TDATableView" method="_Cdy6E9zpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_Ca9BcNzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_Ca9BcdzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Ca8aYtzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Ca9BctzpEeaMeaEvRdRzBA" type="_CU6q4NzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Ca9Bc9zpEeaMeaEvRdRzBA" name="fillTestedClassTable" method="_Cdy6GNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Ca9BdNzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CU-8UNzpEeaMeaEvRdRzBA" name="TDATestRunTotals">
            <ownedAttribute xmi:id="_CdFIYNzpEeaMeaEvRdRzBA" name="controller" visibility="private" type="_CTCbkNzpEeaMeaEvRdRzBA" association="_Ce2C8NzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdFIYtzpEeaMeaEvRdRzBA" name="testRunTotals" visibility="private" type="_Ca-2odzpEeaMeaEvRdRzBA" association="_Ce2C89zpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdFvctzpEeaMeaEvRdRzBA" name="totals" visibility="private" type="_CTOBwNzpEeaMeaEvRdRzBA" association="_Ce2qAdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdFvdNzpEeaMeaEvRdRzBA" name="generatedList" type="_CarUo9zpEeaMeaEvRdRzBA" isReadOnly="true" association="_Ce2qBNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdGWgdzpEeaMeaEvRdRzBA" name="idLabel" visibility="private" type="_CawNI9zpEeaMeaEvRdRzBA" association="_Ce3RENzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdzhINzpEeaMeaEvRdRzBA" name="TDATestRunTotals" specification="_CcHfENzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdzhIdzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdzhItzpEeaMeaEvRdRzBA" name="idLabel" type="_CawNI9zpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdzhI9zpEeaMeaEvRdRzBA" type="_CU-8UNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.controller = controller;
		this.idLabel = idLabel;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdzhJNzpEeaMeaEvRdRzBA" name="createTestRunTotalsBox" specification="_CU_jYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdzhJdzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>testRunTotals = new ListView&lt;String>();
		testRunTotals.setPrefSize(800, 32);

		testRunTotals.setOrientation(Orientation.HORIZONTAL);

		ScrollPane scrollPane = new ScrollPane(testRunTotals);
		scrollPane.setMinHeight(45);

		return scrollPane;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdzhJtzpEeaMeaEvRdRzBA" name="showTestRunTotals" specification="_Ca_dsdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdzhJ9zpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>ObservableList&lt;String> testResults = listedCounters(testRun);
		idLabel.setText(&quot;Loaded TestRun: &quot;.concat(testRun.getRunName()));
		testRunTotals.setItems(testResults);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd0IMNzpEeaMeaEvRdRzBA" name="listedCounters" specification="_CbAEwNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd0IMdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd0IMtzpEeaMeaEvRdRzBA" type="_CarUo9zpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>totals = testRun.getResultSummary();
		// Important Counters:
		String stringTotal = &quot;Total: &quot;.concat(totals.getSumTotal());
		String stringExecuted = &quot;Executed: &quot;.concat(totals.getSumExecuted());
		String stringPassed = &quot;Passed: &quot;.concat(totals.getSumPassed());
		String stringFailed = &quot;Failed: &quot;.concat(totals.getSumFailed());

		ObservableList&lt;String> testResults = FXCollections.observableArrayList(stringTotal, stringPassed, stringFailed,
				stringExecuted);
		if (Integer.parseInt(totals.getSumAborted()) != 0) {
			testResults.add(&quot;Aborted: &quot;.concat(totals.getSumAborted()));
		}
		if (Integer.parseInt(totals.getSumCompleted()) != 0) {
			testResults.add(&quot;Completed: &quot;.concat(totals.getSumCompleted()));
		}
		if (Integer.parseInt(totals.getSumDisconnected()) != 0) {
			testResults.add(&quot;Disconnected: &quot;.concat(totals.getSumDisconnected()));
		}
		if (Integer.parseInt(totals.getSumError()) != 0) {
			testResults.add(&quot;Error: &quot;.concat(totals.getSumError()));
		}
		if (Integer.parseInt(totals.getSumInProgress()) != 0) {
			testResults.add(&quot;In Progress: &quot;.concat(totals.getSumInProgress()));
		}
		if (Integer.parseInt(totals.getSumInconclusive()) != 0) {
			testResults.add(&quot;Inconclusive: &quot;.concat(totals.getSumInconclusive()));
		}
		if (Integer.parseInt(totals.getSumNotExecuted()) != 0) {
			testResults.add(&quot;Not Executed: &quot;.concat(totals.getSumNotExecuted()));
		}
		if (Integer.parseInt(totals.getSumNotRunnable()) != 0) {
			testResults.add(&quot;Not Runnable: &quot;.concat(totals.getSumNotRunnable()));
		}
		if (Integer.parseInt(totals.getSumPassedButRunAborted()) != 0) {
			testResults.add(&quot;Passed But Run Aborted: &quot;.concat(totals.getSumPassedButRunAborted()));
		}
		if (Integer.parseInt(totals.getSumPending()) != 0) {
			testResults.add(&quot;Pending: &quot;.concat(totals.getSumPending()));
		}
		if (Integer.parseInt(totals.getSumTimeOut()) != 0) {
			testResults.add(&quot;Time Out: &quot;.concat(totals.getSumTimeOut()));
		}
		if (Integer.parseInt(totals.getSumWarning()) != 0) {
			testResults.add(&quot;Warning: &quot;.concat(totals.getSumWarning()));
		}
		return testResults;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CU_jYNzpEeaMeaEvRdRzBA" name="createTestRunTotalsBox" method="_CdzhJNzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeSCQtzpEeaMeaEvRdRzBA">
                <body>@return Creates a flat Horizontal Box containing our Counters, to be
	 *         displayed at the top of the main View.</body>
              </ownedComment>
              <ownedParameter xmi:id="_CcIGINzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Ca_dsdzpEeaMeaEvRdRzBA" name="showTestRunTotals" method="_CdzhJtzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeSCQ9zpEeaMeaEvRdRzBA">
                <body>@param testRun
	 * @param details
	 *            Asks the linked Methods for an Observable list by passing on
	 *            values from the controller, then creates that list.</body>
              </ownedComment>
              <ownedParameter xmi:id="_Ca_dstzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbAEwNzpEeaMeaEvRdRzBA" name="listedCounters" method="_Cd0IMNzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeSCRNzpEeaMeaEvRdRzBA">
                <body>@param totals
	 * @return Creates an Observable List with the all Counters, and returns it.</body>
              </ownedComment>
              <ownedParameter xmi:id="_CbAEwdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcIGIdzpEeaMeaEvRdRzBA" type="_CarUo9zpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CcHfENzpEeaMeaEvRdRzBA" name="TDATestRunTotals" method="_CdzhINzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CcHfE9zpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CcHfFNzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CcHfEdzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcHfEtzpEeaMeaEvRdRzBA" name="idLabel" type="_CawNI9zpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcHfFdzpEeaMeaEvRdRzBA" type="_CU-8UNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CVCmsNzpEeaMeaEvRdRzBA" name="TDATreeView">
            <ownedAttribute xmi:id="_CdG9kNzpEeaMeaEvRdRzBA" name="treeView" type="_Ca0ektzpEeaMeaEvRdRzBA" isReadOnly="true" association="_Ce3RE9zpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdHkoNzpEeaMeaEvRdRzBA" name="view" visibility="private" isLeaf="true" type="_CWCsQNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_Ce3RFtzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd0IM9zpEeaMeaEvRdRzBA" name="TDATreeView" specification="_CbBS4NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd0INNzpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd0INdzpEeaMeaEvRdRzBA" type="_CVCmsNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.view = view;

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd0INtzpEeaMeaEvRdRzBA" name="generateEmptyTreeView" specification="_CVDNwNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd0IN9zpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Create a TreeView that has the selectedDirectory as rootItem
		TreeView&lt;String> treeView = new TreeView&lt;String>();
		this.treeView = treeView;
		return treeView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd0IONzpEeaMeaEvRdRzBA" name="fillTreeView" specification="_CcItMdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd0IOdzpEeaMeaEvRdRzBA" name="selectedDirectory" type="_CaLlYNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd0IOtzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Create a TreeView that has the selectedDirectory as rootItem
		treeView = createTreeView(selectedDirectory.toString());

		// Below works, but is deprecated
		// view.showTreeView(treeView);
		view.updateTreeView(treeView);

		return treeView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd0IO9zpEeaMeaEvRdRzBA" name="createTreeItems" specification="_CVEb4NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd0IPNzpEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cd0IPdzpEeaMeaEvRdRzBA" type="_CaNak9zpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Not sure if working on windows with this regex
		String[] rootFolder = rootDirectory.split(&quot;/|\\\\&quot;);

		TreeItem&lt;String> rootItem = new TreeItem&lt;String>(rootFolder[rootFolder.length - 1]);
		Path rootPath = Paths.get(rootDirectory);
		File[] files = rootPath.toFile().listFiles();
		for (File file : files) {
			if (file.isDirectory()) {
				// Create new TreeItem as root with children
				TreeItem&lt;String> subRoot = createTreeItems(file.toString());
				if (subRoot.getChildren().size() != 0) {
					rootItem.getChildren().add(subRoot);
				}
			} else {
				String lowerCaseFile = file.toString().toLowerCase();
				if (lowerCaseFile.endsWith(&quot;.xml&quot;) &amp;&amp; lowerCaseFile.contains(&quot;testrun&quot;)) {
					// Create new TreeItem as leaf and add to rootItem
					TreeItem&lt;String> treeItem = new TreeItem&lt;String>(file.getName());
					rootItem.getChildren().add(treeItem);
				}
			}
		}
		return rootItem;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd0vQNzpEeaMeaEvRdRzBA" name="createTreeView" specification="_CVFC8NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd0vQdzpEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cd0vQtzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>EventHandler&lt;MouseEvent> mouseEventHandle = (MouseEvent event) -> {
			handleMouseClicked(event);
		};

		treeView.addEventHandler(MouseEvent.MOUSE_CLICKED, mouseEventHandle);

		TreeItem&lt;String> rootItem = createTreeItems(rootDirectory);
		treeView.setRoot(rootItem);
		return treeView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd0vQ9zpEeaMeaEvRdRzBA" name="handleMouseClicked" specification="_CcJ7UNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd0vRNzpEeaMeaEvRdRzBA" name="event" type="_Caw0MdzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>Node node = event.getPickResult().getIntersectedNode();
		// Accept clicks only on node cells, and not on empty spaces of the
		// TreeView
		if (node instanceof Text || (node instanceof TreeCell &amp;&amp; ((TreeCell) node).getText() != null)) {
			String xmlName = (String) ((TreeItem) treeView.getSelectionModel().getSelectedItem()).getValue();
			if (xmlName.endsWith(&quot;.xml&quot;) &amp;&amp; event.getClickCount() == 2) {
				view.getController().handleTreeItemClick(xmlName);
			}
		}
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CVDNwNzpEeaMeaEvRdRzBA" name="generateEmptyTreeView" method="_Cd0INtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcItMNzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CVEb4NzpEeaMeaEvRdRzBA" name="createTreeItems" method="_Cd0IO9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CVEb4dzpEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CcJUQtzpEeaMeaEvRdRzBA" type="_CaNak9zpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CVFC8NzpEeaMeaEvRdRzBA" name="createTreeView" method="_Cd0vQNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CVFC8dzpEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CcJUQ9zpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbBS4NzpEeaMeaEvRdRzBA" name="TDATreeView" method="_Cd0IM9zpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CbB58dzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CbB58tzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CbB58NzpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbB589zpEeaMeaEvRdRzBA" type="_CVCmsNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CcItMdzpEeaMeaEvRdRzBA" name="fillTreeView" method="_Cd0IONzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcItMtzpEeaMeaEvRdRzBA" name="selectedDirectory" type="_CaLlYNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcJUQdzpEeaMeaEvRdRzBA" type="_Ca0ektzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CcJ7UNzpEeaMeaEvRdRzBA" name="handleMouseClicked" visibility="private" method="_Cd0vQ9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcJ7UdzpEeaMeaEvRdRzBA" name="event" type="_Caw0MdzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CVIGQNzpEeaMeaEvRdRzBA" name="TDAcomparison">
            <ownedAttribute xmi:id="_CdHkotzpEeaMeaEvRdRzBA" name="view" visibility="private" isLeaf="true" type="_CWCsQNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_Ce34IdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdILsdzpEeaMeaEvRdRzBA" name="rootPane" visibility="private" type="_CbDIENzpEeaMeaEvRdRzBA" association="_Ce34JNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdILs9zpEeaMeaEvRdRzBA" name="comparisonSlot1" visibility="private" type="_CbDvI9zpEeaMeaEvRdRzBA" association="_Ce4fMdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdIywNzpEeaMeaEvRdRzBA" name="comparisonSlot2" visibility="private" type="_CbDvI9zpEeaMeaEvRdRzBA" association="_Ce4fNNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdIywtzpEeaMeaEvRdRzBA" name="testedClass" visibility="private" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_Ce5GQdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdIyxNzpEeaMeaEvRdRzBA" name="run1" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_Ce5GRNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdJZ0NzpEeaMeaEvRdRzBA" name="run2" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CfQSoNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdJZ0tzpEeaMeaEvRdRzBA" name="passedList1" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdJZ09zpEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CdJZ1NzpEeaMeaEvRdRzBA" name="failedList1" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdJZ1dzpEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CdJZ1tzpEeaMeaEvRdRzBA" name="passedList2" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdJZ19zpEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CdKA4NzpEeaMeaEvRdRzBA" name="failedList2" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdKA4dzpEeaMeaEvRdRzBA" value="*"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd0vRdzpEeaMeaEvRdRzBA" name="TDAcomparison" specification="_CbE9QNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd0vRtzpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd0vR9zpEeaMeaEvRdRzBA" type="_CVIGQNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.view = view;
		rootPane = new BorderPane();
		rootPane.setPrefWidth(1200);

		Label comparisonLabel = new Label(&quot;Comparison:&quot;);
		rootPane.setTop(comparisonLabel);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd0vSNzpEeaMeaEvRdRzBA" name="generateEmptyComparisonPane" specification="_CVJUYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd0vSdzpEeaMeaEvRdRzBA" type="_CbDvIdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>comparisonSlot1 = generateEmptyComparisonSlot();
		comparisonSlot2 = generateEmptyComparisonSlot();

		rootPane.setLeft(comparisonSlot1);
		rootPane.setRight(comparisonSlot2);
		return rootPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd1WUNzpEeaMeaEvRdRzBA" name="generateEmptyComparisonSlot" specification="_CVJ7cNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd1WUdzpEeaMeaEvRdRzBA" type="_CbDvI9zpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>VBox comparisonVBox = new VBox();
		// comparisonVBox.setStyle(&quot;-fx-border: 1px solid black&quot;);
		comparisonVBox.setPrefWidth(300);
		Label timeStamp = new Label(&quot;Run - Date&quot;);

		comparisonVBox.getChildren().addAll(generateEmptyDetailsHBox(), timeStamp, generateEmptyTestsVBox());
		return comparisonVBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd1WUtzpEeaMeaEvRdRzBA" name="generateEmptyDetailsHBox" specification="_CVJ7cdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd1WU9zpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>HBox testsBox = new HBox();
		Label passedLabel = new Label(&quot;Passed: XX&quot;);
		Label failedLabel = new Label(&quot;Failed: XX&quot;);
		Label failurePercentage = new Label(&quot;Failure-%: XX&quot;);
		testsBox.getChildren().addAll(passedLabel, failedLabel, failurePercentage);
		return testsBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd1WVNzpEeaMeaEvRdRzBA" name="generateEmptyTestsVBox" specification="_CVJ7ctzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd1WVdzpEeaMeaEvRdRzBA" type="_CbDvI9zpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>VBox testsBox = new VBox();
		Label passedLabel = new Label(&quot;Passed:&quot;);
		Label failedLabel = new Label(&quot;Failed:&quot;);
		testsBox.getChildren().addAll(passedLabel, generateEmptyListView(), failedLabel, generateEmptyListView());
		return testsBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd1WVtzpEeaMeaEvRdRzBA" name="generateEmptyListView" specification="_CVKigNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd1WV9zpEeaMeaEvRdRzBA" type="_Ca1FodzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>Text testsView = new Text(&quot;No testrun loaded&quot;);
		return testsView;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd1WWNzpEeaMeaEvRdRzBA" name="generateComparisonPane" specification="_CbFkUNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd1WWdzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd1WWtzpEeaMeaEvRdRzBA" type="_CbDvIdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// TODO: generateComparisonSlot and fill with content

		rootPane.setLeft(comparisonSlot1);
		rootPane.setRight(comparisonSlot2);
		return rootPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd1WW9zpEeaMeaEvRdRzBA" name="generateComparisonSlot" specification="_CbFkUtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd1WXNzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd1WXdzpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cd1WXtzpEeaMeaEvRdRzBA" type="_CbDvI9zpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>//		VBox comparisonVBox = new VBox();
//		// comparisonVBox.setStyle(&quot;-fx-border: 1px solid black&quot;);
//		comparisonVBox.setPrefWidth(300);
		Label timeStamp = new Label(run.getRunDate().toString());
		if (isSlot1) {
			comparisonSlot1.getChildren().clear();
			comparisonSlot1.getChildren().addAll(generateDetailsHBox(run, isSlot1), timeStamp, generateTestsVBox(run, isSlot1));
			return comparisonSlot1;
		} else {
			comparisonSlot2.getChildren().clear();
			comparisonSlot2.getChildren().addAll(generateDetailsHBox(run, isSlot1), timeStamp, generateTestsVBox(run, isSlot1));
			return comparisonSlot2;
		}
		
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd19YNzpEeaMeaEvRdRzBA" name="updateComparisonSlot" specification="_CbGLYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd19YdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd19YtzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd19Y9zpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>// TODO: Check, compare and set current TestedClass
		loadComparisonSlot(testedClass, run, isSlot1);
		if (isSlot1) {
			comparisonSlot1 = generateComparisonSlot(run, isSlot1);
		} else {
			comparisonSlot2 = generateComparisonSlot(run, isSlot1);
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd19ZNzpEeaMeaEvRdRzBA" name="generateDetailsHBox" specification="_CbGLZNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd19ZdzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd19ZtzpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cd19Z9zpEeaMeaEvRdRzBA" type="_CbDIEtzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>HBox detailsBox = new HBox();
		int passed = 0;
		int failed = 0;
		if (isSlot1) {
			passed = passedList1.size();
			failed = failedList1.size();
		} else  {
			passed = passedList2.size();
			failed = failedList2.size();
		}

		Label passedLabel = new Label(&quot;Passed: &quot; + passed);
		Label failedLabel = new Label(&quot;Failed: &quot; + failed);
		Label failurePercentage = new Label(&quot;Failure-%: &quot; + testedClass.getFailurePercentageByTestrun(run));
		detailsBox.getChildren().addAll(passedLabel, failedLabel, failurePercentage);
		return detailsBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd19aNzpEeaMeaEvRdRzBA" name="generateTestsVBox" specification="_CbGycNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd19adzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd19atzpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cd19a9zpEeaMeaEvRdRzBA" type="_CbDvI9zpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>VBox testsBox = new VBox();
		Label passedLabel = new Label(&quot;Passed:&quot;);
		Label failedLabel = new Label(&quot;Failed:&quot;);
		testsBox.getChildren().addAll(passedLabel, generateListView(run, &quot;passed&quot;, isSlot1), failedLabel,
				generateListView(run, &quot;failed&quot;, isSlot1));
		return testsBox;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd19bNzpEeaMeaEvRdRzBA" name="generateListView" specification="_CbGyc9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd19bdzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd19btzpEeaMeaEvRdRzBA" name="status">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cd19b9zpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cd19cNzpEeaMeaEvRdRzBA" type="_Ca-2odzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>ListView&lt;String> testsList;
		if (status.equals(&quot;passed&quot;)) {
			if (isSlot1) {
				testsList = new ListView&lt;String>(FXCollections.observableArrayList(passedList1));
				testsList.setStyle(&quot;-fx-color: green&quot;);
				return testsList;
			} else {
				testsList = new ListView&lt;String>(FXCollections.observableArrayList(passedList2));
				testsList.setStyle(&quot;-fx-color: green&quot;);
				return testsList;
			}

		} else if (status.equals(&quot;failed&quot;)) {
			if (isSlot1) {
				testsList = new ListView&lt;String>(FXCollections.observableArrayList(failedList1));
				testsList.setStyle(&quot;-fx-color: red&quot;);
				return testsList;
			} else {
				testsList = new ListView&lt;String>(FXCollections.observableArrayList(failedList2));
				testsList.setStyle(&quot;-fx-color: red&quot;);
				return testsList;
			}
		} else {
			System.err.println(&quot;Only failed and passed possible as testresult&quot;);
		}

		return null;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd19cdzpEeaMeaEvRdRzBA" name="loadComparisonSlot" specification="_CbHZgdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd19ctzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd19c9zpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd19dNzpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>this.testedClass = testedClass;

		if (isSlot1) {
			passedList1 = testedClass.getUnitTestsNamesByTestRun(run, true);
			failedList1 = testedClass.getUnitTestsNamesByTestRun(run, false);
		} else {
			passedList2 = testedClass.getUnitTestsNamesByTestRun(run, true);
			failedList2 = testedClass.getUnitTestsNamesByTestRun(run, false);
		}

	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CVJUYNzpEeaMeaEvRdRzBA" name="generateEmptyComparisonPane" method="_Cd0vSNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcLJcNzpEeaMeaEvRdRzBA" type="_CbDvIdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CVJ7cNzpEeaMeaEvRdRzBA" name="generateEmptyComparisonSlot" visibility="private" method="_Cd1WUNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcLJcdzpEeaMeaEvRdRzBA" type="_CbDvI9zpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CVJ7cdzpEeaMeaEvRdRzBA" name="generateEmptyDetailsHBox" visibility="private" method="_Cd1WUtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcLJctzpEeaMeaEvRdRzBA" type="_Car7sdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CVJ7ctzpEeaMeaEvRdRzBA" name="generateEmptyTestsVBox" method="_Cd1WVNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcLJc9zpEeaMeaEvRdRzBA" type="_CbDvI9zpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CVKigNzpEeaMeaEvRdRzBA" name="generateEmptyListView" method="_Cd1WVtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcLJdNzpEeaMeaEvRdRzBA" type="_Ca1FodzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbE9QNzpEeaMeaEvRdRzBA" name="TDAcomparison" method="_Cd0vRdzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CbE9QtzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CbE9Q9zpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CbE9QdzpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbE9RNzpEeaMeaEvRdRzBA" type="_CVIGQNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbFkUNzpEeaMeaEvRdRzBA" name="generateComparisonPane" method="_Cd1WWNzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeSCRdzpEeaMeaEvRdRzBA">
                <body>generates the upper level Pane
	 * &lt;ul>
	 * &lt;li>comparisonLabel: Simple Label displaying &quot;Comparison:&quot;&lt;/li>
	 * &lt;li>comparisonSlot1
	 * &lt;li>
	 * &lt;li>comparisonSlot2&lt;/li>
	 * &lt;/ul>
	 * 
	 * @param run
	 * @return rootPane: BorderPane</body>
              </ownedComment>
              <ownedParameter xmi:id="_CbFkUdzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcLwgNzpEeaMeaEvRdRzBA" type="_CbDvIdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbFkUtzpEeaMeaEvRdRzBA" name="generateComparisonSlot" method="_Cd1WW9zpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeSpUNzpEeaMeaEvRdRzBA">
                <body>generates one comparison slot &lt;br/>
	 * Elements:
	 * &lt;ul>
	 * &lt;li>DetailsHBox on top&lt;/li>
	 * &lt;li>timeStamp of TestRun&lt;/li>
	 * &lt;li>TestsBox with two lists of UnitTests (passed and failed)&lt;/li>
	 * &lt;/ul>
	 * 
	 * @param run
	 * @return VBox</body>
              </ownedComment>
              <ownedParameter xmi:id="_CbFkU9zpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbFkVNzpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CcLwgdzpEeaMeaEvRdRzBA" type="_CbDvI9zpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbGLYNzpEeaMeaEvRdRzBA" name="updateComparisonSlot" method="_Cd19YNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CbGLYdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbGLYtzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbGLY9zpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CbGLZNzpEeaMeaEvRdRzBA" name="generateDetailsHBox" method="_Cd19ZNzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeSpUdzpEeaMeaEvRdRzBA">
                <body>generates a detailsHBox for the header of a comparisonSlot &lt;br/>
	 * Elements:
	 * &lt;ul>
	 * &lt;li>passedLabel: number of passed tests&lt;/li>
	 * &lt;li>failedLabel: number of failed tests&lt;/li>
	 * &lt;li>failurePercentage: failure percentage of tested class in this run
	 * &lt;/li>
	 * &lt;/ul>
	 * 
	 * @param run
	 * @return HBox</body>
              </ownedComment>
              <ownedParameter xmi:id="_CbGLZdzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbGLZtzpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CcLwgtzpEeaMeaEvRdRzBA" type="_CbDIEtzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbGycNzpEeaMeaEvRdRzBA" name="generateTestsVBox" method="_Cd19aNzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeSpUtzpEeaMeaEvRdRzBA">
                <body>generates TestVBox &lt;br/>
	 * Elements:
	 * &lt;ul>
	 * &lt;li>passedLabel: Simple Label displaying &quot;Passed:&quot;&lt;/li>
	 * &lt;li>passedListView: String-List containing only passed tests&lt;/li>
	 * &lt;li>failedLabel: Simple Label displaying &quot;Failed:&quot;&lt;/li>
	 * &lt;li>failedListView: String-List containing only failed tests&lt;/li>
	 * &lt;/ul>
	 * 
	 * @param run
	 * @return VBox</body>
              </ownedComment>
              <ownedParameter xmi:id="_CbGycdzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbGyctzpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CcLwg9zpEeaMeaEvRdRzBA" type="_CbDvI9zpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbGyc9zpEeaMeaEvRdRzBA" name="generateListView" method="_Cd19bNzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeSpU9zpEeaMeaEvRdRzBA">
                <body>generates a ListView&lt;String> element depending on whether the
	 * status-parameter is &quot;passed&quot; or &quot;failed&quot;
	 * 
	 * @param run
	 * @param status
	 *            : can either be &quot;passed&quot; or &quot;failed&quot;
	 * @return ListView&lt;String></body>
              </ownedComment>
              <ownedParameter xmi:id="_CbGydNzpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbGyddzpEeaMeaEvRdRzBA" name="status">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CbGydtzpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CcLwhNzpEeaMeaEvRdRzBA" type="_Ca-2odzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbHZgdzpEeaMeaEvRdRzBA" name="loadComparisonSlot" method="_Cd19cdzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeSpVNzpEeaMeaEvRdRzBA">
                <body>sets the global testedClass attribute, sets the global run1 attribute,
	 * fills the global passedList1 and failedList1 lists
	 * 
	 * @param testedClass
	 * @param run</body>
              </ownedComment>
              <ownedParameter xmi:id="_CbHZgtzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbHZg9zpEeaMeaEvRdRzBA" name="run" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbHZhNzpEeaMeaEvRdRzBA" name="isSlot1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CWCsQNzpEeaMeaEvRdRzBA" name="View">
            <generalization xmi:id="_CcTFQ9zpEeaMeaEvRdRzBA" general="_CanDMtzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdQHgNzpEeaMeaEvRdRzBA" name="model" visibility="private" type="_CUl6wNzpEeaMeaEvRdRzBA" association="_CfXAUdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdQHgtzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CfXAVNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdQHg9zpEeaMeaEvRdRzBA" name="rootPane" visibility="private" type="_CbDIENzpEeaMeaEvRdRzBA" association="_CfXnYdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdQukdzpEeaMeaEvRdRzBA" name="table" type="_CU6q4NzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CfYOcNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdQuktzpEeaMeaEvRdRzBA" name="tree" type="_CVCmsNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CfYOc9zpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdQuk9zpEeaMeaEvRdRzBA" name="analyzer" visibility="private" type="_CUoXANzpEeaMeaEvRdRzBA" association="_CfY1gdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdQuldzpEeaMeaEvRdRzBA" name="graph" type="_CUudoNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CfZckNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdRVoNzpEeaMeaEvRdRzBA" name="totals" type="_CU-8UNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CfZck9zpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdRVodzpEeaMeaEvRdRzBA" name="menuBar" type="_CU4OoNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CfZcltzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdRVotzpEeaMeaEvRdRzBA" name="sideTabPane" visibility="private" type="_CbS_sdzpEeaMeaEvRdRzBA" association="_CfaDodzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdRVpNzpEeaMeaEvRdRzBA" name="mainWindowTabPane" visibility="private" type="_CbS_sdzpEeaMeaEvRdRzBA" association="_CfaDpNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdR8sdzpEeaMeaEvRdRzBA" name="classTree" type="_CU0kQNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CfaqsdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdR8stzpEeaMeaEvRdRzBA" name="comparison" type="_CVIGQNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CfaqtNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdR8s9zpEeaMeaEvRdRzBA" name="nothingLoadedPane" visibility="private" type="_CbDIEtzpEeaMeaEvRdRzBA" association="_CfbRwdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdR8tdzpEeaMeaEvRdRzBA" name="isInitiated" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdR8ttzpEeaMeaEvRdRzBA" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_CdSjwdzpEeaMeaEvRdRzBA" name="tablePane" visibility="private" type="_CbTmwdzpEeaMeaEvRdRzBA" association="_CfbRxNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdSjw9zpEeaMeaEvRdRzBA" name="chartPane" visibility="private" type="_CbTmwdzpEeaMeaEvRdRzBA" association="_Cfb40dzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdSjxdzpEeaMeaEvRdRzBA" name="aprioriPane" visibility="private" type="_CbTmwdzpEeaMeaEvRdRzBA" association="_Cfb41NzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CdTK0dzpEeaMeaEvRdRzBA" name="idLabel" visibility="private" type="_CawNI9zpEeaMeaEvRdRzBA" association="_Cfcf4dzpEeaMeaEvRdRzBA"/>
            <interfaceRealization xmi:id="_CcQpANzpEeaMeaEvRdRzBA" client="_CWCsQNzpEeaMeaEvRdRzBA" supplier="_CbP8YNzpEeaMeaEvRdRzBA" contract="_CbP8YNzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_HUNzpEeaMeaEvRdRzBA" name="View" specification="_CbVb8NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd_HUdzpEeaMeaEvRdRzBA" name="model" type="_CUl6wNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd_HUtzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cd_HU9zpEeaMeaEvRdRzBA" type="_CWCsQNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		this.model = model;
		this.controller = controller;
		this.model.addObserver(this);
		this.setScene(new Scene(createNothingLoadedPane(), 1200, 900));
		this.setTitle(&quot;Test Data Analyser&quot;);
		this.setMaximized(true);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_HVNzpEeaMeaEvRdRzBA" name="createRootPane" specification="_CWEhcNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd_HVdzpEeaMeaEvRdRzBA" type="_CbDvIdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>rootPane = new BorderPane();
		menuBar = new TDAMenuBar(controller, this);

		// sticks the menubar to top
		this.rootPane.setTop(menuBar.createMenuBar());

		/*---- CONTENT GRIDPANE with the main content (TableView, Graph,...) ----*/
		tablePane = new GridPane();

		// margins around the whole center grid (top/right/bottom/left)
		tablePane.setPadding(new Insets(10, 10, 10, 10));
		tablePane.setAlignment(Pos.TOP_CENTER);

		idLabel = new Label();
		tablePane.add(idLabel, 1, 1);
		Label totalsLabel = new Label(&quot;TestRun Result Summary: &quot;);
		tablePane.add(totalsLabel, 1, 2);

		totals = new TDATestRunTotals(controller, idLabel);
		tablePane.add(totals.createTestRunTotalsBox(), 1, 3);

		tree = new TDATreeView(this);
		table = new TDATableView(controller);
		classTree = new TDAClassView(this);

		tablePane.add(table.createTestedClassesTable(), 1, 4);

		graph = new TDAChart(controller);

		comparison = new TDAcomparison(this);

		chartPane = new GridPane();
		ColumnConstraints column1 = new ColumnConstraints();
		column1.setPercentWidth(100);
		chartPane.getColumnConstraints().add(column1);
		chartPane.setPadding(new Insets(10, 10, 10, 10));
		chartPane.add(graph.generateLineChart(), 0, 0);

		Button resetLineChart = new Button(&quot;Reset LineCharts&quot;);
		resetLineChart.setOnMouseClicked(click -> {
			controller.handleResetGraph();
		});
		chartPane.add(resetLineChart, 0, 1);

		chartPane.add(comparison.generateEmptyComparisonPane(), 0, 2);
		
		// Analyzer (Apriori) Pane
		aprioriPane = new GridPane();

		// margins around the whole center grid (top/right/bottom/left)
		aprioriPane.setPadding(new Insets(10, 10, 10, 10));
		aprioriPane.setAlignment(Pos.TOP_CENTER);

		Label aprioriHeader = new Label(&quot;Apriori Analyzer&quot;);
		aprioriPane.add(aprioriHeader, 1, 1);

		analyzer = new TDAAnalyzerView();

		aprioriPane.add(analyzer.createFrequentItemTable(), 1, 2);
		aprioriPane.add(analyzer.createStrongRulesTable(), 1, 4);

		GridPane.setHalignment(resetLineChart, HPos.CENTER);
		GridPane.setValignment(resetLineChart, VPos.BOTTOM);
		tablePane.setVgap(20);

		/*----- SIDEBAR TABPANE for switching between testruns and classes */
		sideTabPane = new TabPane();

		Tab tab1 = new Tab();
		tab1.setText(&quot;Testruns&quot;);
		tab1.setClosable(false);
		tab1.setContent(tree.generateEmptyTreeView());
		sideTabPane.getTabs().add(tab1);

		Tab tab2 = new Tab();
		tab2.setText(&quot;Classes&quot;);
		tab2.setClosable(false);
		tab2.setContent(classTree.generateEmptyClassView());
		sideTabPane.getTabs().add(tab2);

		sideTabPane.setMinWidth(300);
		sideTabPane.setPrefWidth(300);
		sideTabPane.setMaxWidth(350);

		rootPane.setLeft(sideTabPane);

		mainWindowTabPane = new TabPane();

		Tab mainTab1 = new Tab(&quot;Table&quot;);
		mainTab1.setClosable(false);
		mainTab1.setContent(tablePane);

		mainWindowTabPane.getTabs().add(mainTab1);

		Tab mainTab2 = new Tab(&quot;Chart&quot;);
		mainTab2.setClosable(false);
		mainTab2.setContent(chartPane);
		mainWindowTabPane.getTabs().add(mainTab2);

		Tab mainTab3 = new Tab(&quot;Analyzer&quot;);
		mainTab3.setClosable(false);
		mainTab3.setContent(aprioriPane);
		mainWindowTabPane.getTabs().add(mainTab3);

		mainWindowTabPane.getSelectionModel().selectedItemProperty().addListener((ov, oldTab, newTab) -> {
			if (newTab.getText().equals(&quot;Analyzer&quot;)) {
				analyzer.fillFrequentItemTable();
				analyzer.fillStrongRulesTable(0.8);
			}
		});

		rootPane.setCenter(mainWindowTabPane);

		return rootPane;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_HVtzpEeaMeaEvRdRzBA" name="errorAlert" specification="_CWFIgNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd_HV9zpEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>Alert error = new Alert(AlertType.ERROR, message);
		error.showAndWait();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_HWNzpEeaMeaEvRdRzBA" name="pathAlert" specification="_CWFIgtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd_HWdzpEeaMeaEvRdRzBA" type="_CaLlYNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cd_HWtzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>FileChooser fileBrowser = new FileChooser();
		fileBrowser.setTitle(&quot;Open Resource File&quot;);
		fileBrowser.getExtensionFilters().add(new FileChooser.ExtensionFilter(&quot;XML files&quot;, &quot;*.xml&quot;));

		return fileBrowser.showOpenMultipleDialog(this);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_HW9zpEeaMeaEvRdRzBA" name="directoryAlert" specification="_CWFvktzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd_HXNzpEeaMeaEvRdRzBA" type="_CaLlYNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>DirectoryChooser directoryBrowser = new DirectoryChooser();
		directoryBrowser.setTitle(&quot;Select Root Directory&quot;);
		File selectedDirectory = directoryBrowser.showDialog(this);

		return selectedDirectory;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_uYNzpEeaMeaEvRdRzBA" name="initCloseEventHandler" specification="_CbWDA9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd_uYdzpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>view.setOnCloseRequest(new EventHandler&lt;WindowEvent>() {
			public void handle(WindowEvent we) {
				exitAlert();
				we.consume();
			}
		});
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_uYtzpEeaMeaEvRdRzBA" name="exitAlert" specification="_CWFvk9zpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>Alert exitAlert = new Alert(AlertType.CONFIRMATION,
				&quot;Do you really want to exit? All unsaved changes will be lost.&quot;);
		exitAlert.setTitle(&quot;Are you sure?&quot;);
		exitAlert.setHeaderText(null);
		Optional&lt;ButtonType> result = exitAlert.showAndWait();
		if (result.isPresent() &amp;&amp; result.get() == ButtonType.OK) {
			this.close();
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_uY9zpEeaMeaEvRdRzBA" name="updateTreeView" specification="_CcSeM9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd_uZNzpEeaMeaEvRdRzBA" name="treeView" type="_Ca0ektzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>sideTabPane.getTabs().get(0).setContent(treeView);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_uZdzpEeaMeaEvRdRzBA" name="updateClassView" specification="_CcTFQNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd_uZtzpEeaMeaEvRdRzBA" name="treeView" type="_Ca0ektzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>sideTabPane.getTabs().get(1).setContent(treeView);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_uZ9zpEeaMeaEvRdRzBA" name="clearTotals" specification="_CWGWoNzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>totals = new TDATestRunTotals(controller, idLabel);
		tablePane.add(totals.createTestRunTotalsBox(), 1, 3);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_uaNzpEeaMeaEvRdRzBA" name="isInitiated" specification="_CWGWodzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cd_uadzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>return isInitiated;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd_uatzpEeaMeaEvRdRzBA" name="fillClassTreeView" specification="_CWGWo9zpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>// TODO: update list when folders are added more than once

		// TODO updateClassTreeView();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeAVcNzpEeaMeaEvRdRzBA" name="updateRootPane" specification="_CWGWpNzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>this.getScene().setRoot(createRootPane());
		isInitiated = true;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeAVcdzpEeaMeaEvRdRzBA" name="createNothingLoadedPane" specification="_CWG9sNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CeAVctzpEeaMeaEvRdRzBA" type="_CbDvIdzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>nothingLoadedPane = new HBox();

		nothingLoadedPane.setAlignment(Pos.CENTER);
		nothingLoadedPane.setPadding(new Insets(15, 12, 15, 12));
		nothingLoadedPane.setSpacing(10);
		nothingLoadedPane.setStyle(&quot;-fx-background-color: #336699;&quot;);

		Button loadFileButton = new Button();
		loadFileButton.setPrefSize(164, 164);
		loadFileButton.setStyle(&quot;-fx-background-image: url('/tda/src/view/openfile.png')&quot;);
		loadFileButton.setOnAction(new EventHandler&lt;ActionEvent>() {

			@Override
			public void handle(ActionEvent event) {

				controller.openFile();
			}
		});
		/*
		 * currently not working, bc openFile is using deprecated calls
		 * loadFileButon.setOnAction(new EventHandler&lt;ActionEvent>() {
		 * 
		 * @Override public void handle(ActionEvent event) {
		 * 
		 * controller.openFile(); if (isInitiated == false) { updateRootPane();
		 * }
		 * 
		 * } });
		 */

		Button loadFolderButton = new Button();
		loadFolderButton.setPrefSize(164, 164);
		loadFolderButton.setStyle(&quot;-fx-background-image: url('/tda/src/view/openfolder.png')&quot;);
		loadFolderButton.setOnAction(new EventHandler&lt;ActionEvent>() {

			@Override
			public void handle(ActionEvent event) {
				controller.openFolder();
			}
		});
		nothingLoadedPane.getChildren().addAll(loadFileButton, loadFolderButton);

		return nothingLoadedPane;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CWEhcNzpEeaMeaEvRdRzBA" name="createRootPane" visibility="private" method="_Cd_HVNzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeUegNzpEeaMeaEvRdRzBA">
                <body>@return Creates our base panes in our main View. Includes the menuBar on
	 *         top, the TreeView on the Left and the TestRun Totals and Class
	 *         Table + Graph below.</body>
              </ownedComment>
              <ownedParameter xmi:id="_CcRQENzpEeaMeaEvRdRzBA" type="_CbDvIdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CWFIgNzpEeaMeaEvRdRzBA" name="errorAlert" method="_Cd_HVtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CWFIgdzpEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CWFIgtzpEeaMeaEvRdRzBA" name="pathAlert" method="_Cd_HWNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CWFvkNzpEeaMeaEvRdRzBA" type="_CaLlYNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CWFvkdzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CWFvktzpEeaMeaEvRdRzBA" name="directoryAlert" method="_Cd_HW9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcSeMtzpEeaMeaEvRdRzBA" type="_CaLlYNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CWFvk9zpEeaMeaEvRdRzBA" name="exitAlert" method="_Cd_uYtzpEeaMeaEvRdRzBA">
              <ownedComment xmi:id="_CeUegdzpEeaMeaEvRdRzBA">
                <body>The exit Alert window called by exiting through the &quot;Data&quot; dropdown menu.</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_CWGWoNzpEeaMeaEvRdRzBA" name="clearTotals" method="_Cd_uZ9zpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CWGWodzpEeaMeaEvRdRzBA" name="isInitiated" method="_Cd_uaNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CWGWotzpEeaMeaEvRdRzBA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CWGWo9zpEeaMeaEvRdRzBA" name="fillClassTreeView" method="_Cd_uatzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CWGWpNzpEeaMeaEvRdRzBA" name="updateRootPane" method="_CeAVcNzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CWG9sNzpEeaMeaEvRdRzBA" name="createNothingLoadedPane" method="_CeAVcdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcTFQtzpEeaMeaEvRdRzBA" type="_CbDvIdzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbVb8NzpEeaMeaEvRdRzBA" name="View" method="_Cd_HUNzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CbVb89zpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CbVb9NzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CbVb8dzpEeaMeaEvRdRzBA" name="model" type="_CUl6wNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbVb8tzpEeaMeaEvRdRzBA" name="controller" type="_CTCbkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbVb9dzpEeaMeaEvRdRzBA" type="_CWCsQNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbWDANzpEeaMeaEvRdRzBA" name="setTestRunLabel">
              <ownedParameter xmi:id="_CbWDAdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbWDA9zpEeaMeaEvRdRzBA" name="initCloseEventHandler" method="_Cd_uYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CbWDBNzpEeaMeaEvRdRzBA" name="view" type="_CWCsQNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CcR3INzpEeaMeaEvRdRzBA" name="update">
              <ownedParameter xmi:id="_CcR3IdzpEeaMeaEvRdRzBA" name="o" type="_CaoRUtzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CcR3ItzpEeaMeaEvRdRzBA" name="arg" type="_CbyH4NzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CcSeM9zpEeaMeaEvRdRzBA" name="updateTreeView" method="_Cd_uY9zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcSeNNzpEeaMeaEvRdRzBA" name="treeView" type="_Ca0ektzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CcTFQNzpEeaMeaEvRdRzBA" name="updateClassView" method="_Cd_uZdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CcTFQdzpEeaMeaEvRdRzBA" name="treeView" type="_Ca0ektzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CewjZNzpEeaMeaEvRdRzBA" name="" memberEnd="_CewjZdzpEeaMeaEvRdRzBA _Cc9zotzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CewjZdzpEeaMeaEvRdRzBA" name="" type="_CUoXANzpEeaMeaEvRdRzBA" association="_CewjZNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CexKcNzpEeaMeaEvRdRzBA" name="" memberEnd="_CexKcdzpEeaMeaEvRdRzBA _Cc-astzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CexKcdzpEeaMeaEvRdRzBA" name="" type="_CUoXANzpEeaMeaEvRdRzBA" association="_CexKcNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CexKc9zpEeaMeaEvRdRzBA" name="" memberEnd="_CexKdNzpEeaMeaEvRdRzBA _Cc_BwtzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CexKdNzpEeaMeaEvRdRzBA" name="" type="_CUoXANzpEeaMeaEvRdRzBA" association="_CexKc9zpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CexxgdzpEeaMeaEvRdRzBA" name="" memberEnd="_CexxgtzpEeaMeaEvRdRzBA _Cc_o0tzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CexxgtzpEeaMeaEvRdRzBA" name="" type="_CUoXANzpEeaMeaEvRdRzBA" association="_CexxgdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CexxhNzpEeaMeaEvRdRzBA" name="" memberEnd="_CexxhdzpEeaMeaEvRdRzBA _CdAP4dzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CexxhdzpEeaMeaEvRdRzBA" name="" type="_CUudoNzpEeaMeaEvRdRzBA" association="_CexxhNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CeyYkdzpEeaMeaEvRdRzBA" name="" memberEnd="_CeyYktzpEeaMeaEvRdRzBA _CdA28dzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CeyYktzpEeaMeaEvRdRzBA" name="" type="_CUudoNzpEeaMeaEvRdRzBA" association="_CeyYkdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CeyYlNzpEeaMeaEvRdRzBA" name="" memberEnd="_CeyYldzpEeaMeaEvRdRzBA _CdA29NzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CeyYldzpEeaMeaEvRdRzBA" name="" type="_CUudoNzpEeaMeaEvRdRzBA" association="_CeyYlNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cey_odzpEeaMeaEvRdRzBA" name="" memberEnd="_Cey_otzpEeaMeaEvRdRzBA _CdBeAtzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cey_otzpEeaMeaEvRdRzBA" name="" type="_CUudoNzpEeaMeaEvRdRzBA" association="_Cey_odzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cey_pNzpEeaMeaEvRdRzBA" name="" memberEnd="_Cey_pdzpEeaMeaEvRdRzBA _CdCFENzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cey_pdzpEeaMeaEvRdRzBA" name="" type="_CUudoNzpEeaMeaEvRdRzBA" association="_Cey_pNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CezmsdzpEeaMeaEvRdRzBA" name="" memberEnd="_CezmstzpEeaMeaEvRdRzBA _CdCFEtzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CezmstzpEeaMeaEvRdRzBA" name="" type="_CU0kQNzpEeaMeaEvRdRzBA" association="_CezmsdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CezmtNzpEeaMeaEvRdRzBA" name="" memberEnd="_CezmtdzpEeaMeaEvRdRzBA _CdCsItzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CezmtdzpEeaMeaEvRdRzBA" name="" type="_CU0kQNzpEeaMeaEvRdRzBA" association="_CezmtNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cezmt9zpEeaMeaEvRdRzBA" name="" memberEnd="_CezmuNzpEeaMeaEvRdRzBA _CdCsJNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CezmuNzpEeaMeaEvRdRzBA" name="" type="_CU4OoNzpEeaMeaEvRdRzBA" association="_Cezmt9zpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce0NwdzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce0NwtzpEeaMeaEvRdRzBA _CdDTMdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce0NwtzpEeaMeaEvRdRzBA" name="" type="_CU4OoNzpEeaMeaEvRdRzBA" association="_Ce0NwdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce0NxNzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce0NxdzpEeaMeaEvRdRzBA _CdDTM9zpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce0NxdzpEeaMeaEvRdRzBA" name="" type="_CU6q4NzpEeaMeaEvRdRzBA" association="_Ce0NxNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce000dzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce000tzpEeaMeaEvRdRzBA _CdDTNdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce000tzpEeaMeaEvRdRzBA" name="" type="_CU6q4NzpEeaMeaEvRdRzBA" association="_Ce000dzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce001NzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce001dzpEeaMeaEvRdRzBA _CdD6QtzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce001dzpEeaMeaEvRdRzBA" name="" type="_CU6q4NzpEeaMeaEvRdRzBA" association="_Ce001NzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce1b4dzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce1b4tzpEeaMeaEvRdRzBA _CdEhUdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce1b4tzpEeaMeaEvRdRzBA" name="" type="_CU6q4NzpEeaMeaEvRdRzBA" association="_Ce1b4dzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce1b5NzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce1b5dzpEeaMeaEvRdRzBA _CdEhU9zpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce1b5dzpEeaMeaEvRdRzBA" name="" type="_CU6q4NzpEeaMeaEvRdRzBA" association="_Ce1b5NzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce2C8NzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce2C8dzpEeaMeaEvRdRzBA _CdFIYNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce2C8dzpEeaMeaEvRdRzBA" name="" type="_CU-8UNzpEeaMeaEvRdRzBA" association="_Ce2C8NzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce2C89zpEeaMeaEvRdRzBA" name="" memberEnd="_Ce2C9NzpEeaMeaEvRdRzBA _CdFIYtzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce2C9NzpEeaMeaEvRdRzBA" name="" type="_CU-8UNzpEeaMeaEvRdRzBA" association="_Ce2C89zpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce2qAdzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce2qAtzpEeaMeaEvRdRzBA _CdFvctzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce2qAtzpEeaMeaEvRdRzBA" name="" type="_CU-8UNzpEeaMeaEvRdRzBA" association="_Ce2qAdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce2qBNzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce2qBdzpEeaMeaEvRdRzBA _CdFvdNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce2qBdzpEeaMeaEvRdRzBA" name="" type="_CU-8UNzpEeaMeaEvRdRzBA" association="_Ce2qBNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce3RENzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce3REdzpEeaMeaEvRdRzBA _CdGWgdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce3REdzpEeaMeaEvRdRzBA" name="" type="_CU-8UNzpEeaMeaEvRdRzBA" association="_Ce3RENzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce3RE9zpEeaMeaEvRdRzBA" name="" memberEnd="_Ce3RFNzpEeaMeaEvRdRzBA _CdG9kNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce3RFNzpEeaMeaEvRdRzBA" name="" type="_CVCmsNzpEeaMeaEvRdRzBA" association="_Ce3RE9zpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce3RFtzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce3RF9zpEeaMeaEvRdRzBA _CdHkoNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce3RF9zpEeaMeaEvRdRzBA" name="" type="_CVCmsNzpEeaMeaEvRdRzBA" association="_Ce3RFtzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce34IdzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce34ItzpEeaMeaEvRdRzBA _CdHkotzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce34ItzpEeaMeaEvRdRzBA" name="" type="_CVIGQNzpEeaMeaEvRdRzBA" association="_Ce34IdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce34JNzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce34JdzpEeaMeaEvRdRzBA _CdILsdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce34JdzpEeaMeaEvRdRzBA" name="" type="_CVIGQNzpEeaMeaEvRdRzBA" association="_Ce34JNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce4fMdzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce4fMtzpEeaMeaEvRdRzBA _CdILs9zpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce4fMtzpEeaMeaEvRdRzBA" name="" type="_CVIGQNzpEeaMeaEvRdRzBA" association="_Ce4fMdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce4fNNzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce4fNdzpEeaMeaEvRdRzBA _CdIywNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce4fNdzpEeaMeaEvRdRzBA" name="" type="_CVIGQNzpEeaMeaEvRdRzBA" association="_Ce4fNNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce5GQdzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce5GQtzpEeaMeaEvRdRzBA _CdIywtzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce5GQtzpEeaMeaEvRdRzBA" name="" type="_CVIGQNzpEeaMeaEvRdRzBA" association="_Ce5GQdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Ce5GRNzpEeaMeaEvRdRzBA" name="" memberEnd="_Ce5GRdzpEeaMeaEvRdRzBA _CdIyxNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Ce5GRdzpEeaMeaEvRdRzBA" name="" type="_CVIGQNzpEeaMeaEvRdRzBA" association="_Ce5GRNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfQSoNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfQSodzpEeaMeaEvRdRzBA _CdJZ0NzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfQSodzpEeaMeaEvRdRzBA" name="" type="_CVIGQNzpEeaMeaEvRdRzBA" association="_CfQSoNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfXAUdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfXAUtzpEeaMeaEvRdRzBA _CdQHgNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfXAUtzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfXAUdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfXAVNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfXAVdzpEeaMeaEvRdRzBA _CdQHgtzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfXAVdzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfXAVNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfXnYdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfXnYtzpEeaMeaEvRdRzBA _CdQHg9zpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfXnYtzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfXnYdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfYOcNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfYOcdzpEeaMeaEvRdRzBA _CdQukdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfYOcdzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfYOcNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfYOc9zpEeaMeaEvRdRzBA" name="" memberEnd="_CfYOdNzpEeaMeaEvRdRzBA _CdQuktzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfYOdNzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfYOc9zpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfY1gdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfY1gtzpEeaMeaEvRdRzBA _CdQuk9zpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfY1gtzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfY1gdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfZckNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfZckdzpEeaMeaEvRdRzBA _CdQuldzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfZckdzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfZckNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfZck9zpEeaMeaEvRdRzBA" name="" memberEnd="_CfZclNzpEeaMeaEvRdRzBA _CdRVoNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfZclNzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfZck9zpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfZcltzpEeaMeaEvRdRzBA" name="" memberEnd="_CfZcl9zpEeaMeaEvRdRzBA _CdRVodzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfZcl9zpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfZcltzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfaDodzpEeaMeaEvRdRzBA" name="" memberEnd="_CfaDotzpEeaMeaEvRdRzBA _CdRVotzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfaDotzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfaDodzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfaDpNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfaDpdzpEeaMeaEvRdRzBA _CdRVpNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfaDpdzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfaDpNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfaqsdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfaqstzpEeaMeaEvRdRzBA _CdR8sdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfaqstzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfaqsdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfaqtNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfaqtdzpEeaMeaEvRdRzBA _CdR8stzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfaqtdzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfaqtNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfbRwdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfbRwtzpEeaMeaEvRdRzBA _CdR8s9zpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfbRwtzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfbRwdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CfbRxNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfbRxdzpEeaMeaEvRdRzBA _CdSjwdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CfbRxdzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_CfbRxNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cfb40dzpEeaMeaEvRdRzBA" name="" memberEnd="_Cfb40tzpEeaMeaEvRdRzBA _CdSjw9zpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cfb40tzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_Cfb40dzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cfb41NzpEeaMeaEvRdRzBA" name="" memberEnd="_Cfb41dzpEeaMeaEvRdRzBA _CdSjxdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cfb41dzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_Cfb41NzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cfcf4dzpEeaMeaEvRdRzBA" name="" memberEnd="_Cfcf4tzpEeaMeaEvRdRzBA _CdTK0dzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cfcf4tzpEeaMeaEvRdRzBA" name="" type="_CWCsQNzpEeaMeaEvRdRzBA" association="_Cfcf4dzpEeaMeaEvRdRzBA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CNnwENzpEeaMeaEvRdRzBA" name="controller">
          <packagedElement xmi:type="uml:Class" xmi:id="_CTCbkNzpEeaMeaEvRdRzBA" name="Controller">
            <ownedAttribute xmi:id="_Ccq4sNzpEeaMeaEvRdRzBA" name="model" visibility="private" isLeaf="true" type="_CUl6wNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_Cep1sNzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CcrfwdzpEeaMeaEvRdRzBA" name="view" visibility="private" isLeaf="true" type="_CWCsQNzpEeaMeaEvRdRzBA" isReadOnly="true" association="_CeqcwdzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdbtsNzpEeaMeaEvRdRzBA" name="Controller" specification="_CTDpsNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdbtsdzpEeaMeaEvRdRzBA" type="_CTCbkNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>this.model = new Model();
		this.view = new View(this.model, this);

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdcUwNzpEeaMeaEvRdRzBA" name="start" specification="_CTEQwtzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>// TODO implement this operation
		this.view.show();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdcUwdzpEeaMeaEvRdRzBA" name="openFile" specification="_CTEQw9zpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>List&lt;File> fileChoices = view.pathAlert();
		// Prevents OOB- and Nullpointer-Exceptions when aborting the file
		// selection
		if (fileChoices != null) {
			if (view.isInitiated() == false) {
				view.updateRootPane();
			}
			for (File xmlFile : fileChoices) {
				model.parseFile(xmlFile.toString());
			}

			TestRun testRun = TestData.getInstance().getTestRunList().get(0);
			TestData.getInstance().printTree();

			view.getTable().fillTestedClassTable(testRun);
			view.getTotals().showTestRunTotals(testRun);

			view.getClassTree().fillClassView(TestData.getInstance().getRoot());
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdcUwtzpEeaMeaEvRdRzBA" name="parseFilesInDirectory" specification="_Cbt2cNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdcUw9zpEeaMeaEvRdRzBA" name="files" type="_CaLlYNzpEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdcUxNzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>//TODO: Redundant Check to prevent Exceptions
		if (files.length != 0) {
			for (File file : files) {
				if (file.isDirectory()) {
					// Calls same method again.
					parseFilesInDirectory(file.listFiles());
				} else {
					String lowerCaseFile = file.toString().toLowerCase();
					if (lowerCaseFile.endsWith(&quot;.xml&quot;) &amp;&amp; lowerCaseFile.contains(&quot;testrun&quot;)) {
						model.parseFile(file.toString());
					}

				}
			}
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdcUxdzpEeaMeaEvRdRzBA" name="createTreeItems" specification="_CTE30NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdcUxtzpEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdcUx9zpEeaMeaEvRdRzBA" type="_CaNak9zpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>// Not sure if working on windows with this regex
		String[] rootFolder = rootDirectory.split(&quot;/|\\\\&quot;);

		TreeItem rootItem = new TreeItem(rootFolder[rootFolder.length - 1]);
		Path rootPath = Paths.get(rootDirectory);
		File[] files = rootPath.toFile().listFiles();
		for (File file : files) {
			if (file.isDirectory()) {
				// Create new TreeItem as root with children
				TreeItem subRoot = createTreeItems(file.toString());
				if (subRoot.getChildren().size() != 0) {
					rootItem.getChildren().add(subRoot);
				}
			} else {
				String lowerCaseFile = file.toString().toLowerCase();
				if (lowerCaseFile.endsWith(&quot;.xml&quot;) &amp;&amp; lowerCaseFile.contains(&quot;testrun&quot;)) {
					// Create new TreeItem as leaf and add to rootItem
					TreeItem&lt;TestRun> treeItem = new TreeItem(file.getName());
					rootItem.getChildren().add(treeItem);
				}
			}
		}
		return rootItem;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdcUyNzpEeaMeaEvRdRzBA" name="openFolder" specification="_CTFe4dzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>File selectedDirectory = this.view.directoryAlert();
		// Prevents Nullpointer- and OOB-Exceptions
		if (selectedDirectory != null) {
			if (view.isInitiated() == false) {
				view.updateRootPane();
			}
			// Parse all existing xml files in within the selectedDirectory
			File[] files = selectedDirectory.listFiles();
			parseFilesInDirectory(files);

			view.getTree().fillTreeView(selectedDirectory);

			view.getClassTree().fillClassView(TestData.getInstance().getRoot());

			TestData.getInstance().getAnalyzer().analyze();
			TestData.getInstance().getRoot().printTree(0);
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdcUydzpEeaMeaEvRdRzBA" name="exitMain" specification="_CTGF8NzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>this.view.exitAlert();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdc70NzpEeaMeaEvRdRzBA" name="getTestedClassesFromTestRun" specification="_CaOosNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdc70dzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cdc70tzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cdc709zpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>return model.getTestedClassesFromTestRun(testRun);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdc71NzpEeaMeaEvRdRzBA" name="handleTreeItemClick" specification="_CTGF8dzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdc71dzpEeaMeaEvRdRzBA" name="xmlName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;TestRun> testRuns = TestData.getInstance().getTestRunList();
		handleResetGraph();
		for (TestRun testRun : testRuns) {
			if (testRun.getPath().contains(xmlName)) {
				view.getTable().fillTestedClassTable(testRun);
				view.getTotals().showTestRunTotals(testRun);
				break;
			}
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdc71tzpEeaMeaEvRdRzBA" name="handleTableRowClick" specification="_CaOotNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cdc719zpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>view.getGraph().setChartData(testedClass);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdc72NzpEeaMeaEvRdRzBA" name="handleResetGraph" specification="_CTGF89zpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>view.getGraph().getLineChart().getData().clear();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdc72dzpEeaMeaEvRdRzBA" name="handleClearDataButton" specification="_CTGF9NzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>view.getMenuBar().clearDataAlert();
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cddi4NzpEeaMeaEvRdRzBA" name="clearData" specification="_CTGtANzpEeaMeaEvRdRzBA">
              <language>java</language>
              <body>// TODO: does not clear testruntotals yet

		// Clear the testData
		TestData.getInstance().getTestRunList().clear();
		TestData.getInstance().getUnitTestList().clear();

		// Delete the Table Data
		if (view.getTable().getData() != null) {
			view.getTable().getData().clear();
		}

		// Delete the TreeView
		view.getTree().getTreeView().setRoot(null);

		// Clear the classesTreeView
		view.updateClassView(view.getClassTree().generateEmptyClassView());

		// TODO Clear TestRunTotals

		// Clear the Graph Content by Calling the ResetButton Handler
		handleResetGraph();

		// Clear both Observable Lists for the TestRunInfos
		if (view.getTotals().getGeneratedList() != null) {
			// view.getTotals().getAllCounters().clear();
			view.getTotals().getGeneratedList().clear();
		}

	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cddi4dzpEeaMeaEvRdRzBA" name="calculateChartData" specification="_CaPPwtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cddi4tzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cddi49zpEeaMeaEvRdRzBA" type="_CaPPwNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cddi5NzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;XYChart.Data&lt;TestRun, Number>> datas = new LinkedList&lt;>();
		for (TestRun testRun : TestData.getInstance().getTestRunList()) {
			double yValue = testedClass.getFailurePercentageByTestrun(testRun);
			if (yValue == -1) {
				continue;
			}
			XYChart.Data&lt;TestRun, Number> dataPoint = new XYChart.Data&lt;TestRun, Number>(testRun, yValue);
			datas.add(dataPoint);
		}
		return datas;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cddi5dzpEeaMeaEvRdRzBA" name="handleClassTreeClick" specification="_CaP20tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cddi5tzpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>if (node.getTestedClass() != null) {
			view.getGraph().setChartData(node.getTestedClass());
		}
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cddi59zpEeaMeaEvRdRzBA" name="handleChartNodeClick" specification="_CaQd4NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cddi6NzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cddi6dzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>System.out.println(&quot;Clicked node &quot; + testRun.getRunName());
		view.getComparison().updateComparisonSlot(testedClass, testRun, true);
		
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CTDpsNzpEeaMeaEvRdRzBA" name="Controller" method="_CdbtsNzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CTDpsdzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CTEQwNzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CTEQwdzpEeaMeaEvRdRzBA" type="_CTCbkNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTEQwtzpEeaMeaEvRdRzBA" name="start" method="_CdcUwNzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CTEQw9zpEeaMeaEvRdRzBA" name="openFile" method="_CdcUwdzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CTE30NzpEeaMeaEvRdRzBA" name="createTreeItems" method="_CdcUxdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTE30dzpEeaMeaEvRdRzBA" name="rootDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_Cbt2c9zpEeaMeaEvRdRzBA" type="_CaNak9zpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTFe4dzpEeaMeaEvRdRzBA" name="openFolder" method="_CdcUyNzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CTGF8NzpEeaMeaEvRdRzBA" name="exitMain" method="_CdcUydzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CTGF8dzpEeaMeaEvRdRzBA" name="handleTreeItemClick" method="_Cdc71NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CTGF8tzpEeaMeaEvRdRzBA" name="xmlName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CTGF89zpEeaMeaEvRdRzBA" name="handleResetGraph" method="_Cdc72NzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CTGF9NzpEeaMeaEvRdRzBA" name="handleClearDataButton" method="_Cdc72dzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CTGtANzpEeaMeaEvRdRzBA" name="clearData" method="_Cddi4NzpEeaMeaEvRdRzBA"/>
            <ownedOperation xmi:id="_CaOosNzpEeaMeaEvRdRzBA" name="getTestedClassesFromTestRun" method="_Cdc70NzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaOosdzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CaOostzpEeaMeaEvRdRzBA" type="_CT9ooNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CaOos9zpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CaOotNzpEeaMeaEvRdRzBA" name="handleTableRowClick" method="_Cdc71tzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaOotdzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CaPPwtzpEeaMeaEvRdRzBA" name="calculateChartData" method="_Cddi4dzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaPPw9zpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CaPPxNzpEeaMeaEvRdRzBA" type="_CaPPwNzpEeaMeaEvRdRzBA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CaP20NzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_CaP20tzpEeaMeaEvRdRzBA" name="handleClassTreeClick" method="_Cddi5dzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaP209zpEeaMeaEvRdRzBA" name="node" type="_CUFkcNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CaQd4NzpEeaMeaEvRdRzBA" name="handleChartNodeClick" method="_Cddi59zpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CaQd4dzpEeaMeaEvRdRzBA" name="testRun" type="_CTwNQNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CaQd4tzpEeaMeaEvRdRzBA" name="testedClass" type="_CT9ooNzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_Cbt2cNzpEeaMeaEvRdRzBA" name="parseFilesInDirectory" visibility="private" method="_CdcUwtzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cbt2cdzpEeaMeaEvRdRzBA" name="files" type="_CaLlYNzpEeaMeaEvRdRzBA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cbt2ctzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_Cep1sNzpEeaMeaEvRdRzBA" name="" memberEnd="_Cep1sdzpEeaMeaEvRdRzBA _Ccq4sNzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_Cep1sdzpEeaMeaEvRdRzBA" name="" type="_CTCbkNzpEeaMeaEvRdRzBA" association="_Cep1sNzpEeaMeaEvRdRzBA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_CeqcwdzpEeaMeaEvRdRzBA" name="" memberEnd="_CeqcwtzpEeaMeaEvRdRzBA _CcrfwdzpEeaMeaEvRdRzBA">
            <ownedEnd xmi:id="_CeqcwtzpEeaMeaEvRdRzBA" name="" type="_CTCbkNzpEeaMeaEvRdRzBA" association="_CeqcwdzpEeaMeaEvRdRzBA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CNsokNzpEeaMeaEvRdRzBA" name="exceptions">
          <packagedElement xmi:type="uml:Class" xmi:id="_CTJwUNzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException">
            <generalization xmi:id="_CbwStdzpEeaMeaEvRdRzBA" general="_CbudgdzpEeaMeaEvRdRzBA"/>
            <ownedAttribute xmi:id="_CcsG0dzpEeaMeaEvRdRzBA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_CcsG0tzpEeaMeaEvRdRzBA" value="-6082910519611169383L"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdeJ8NzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_CTKXYNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdeJ8dzpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super();
		// TODO Auto-generated constructor stub
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdeJ8tzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_CbvEktzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdeJ89zpEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdeJ9NzpEeaMeaEvRdRzBA" name="cause" type="_CbvEkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdeJ9dzpEeaMeaEvRdRzBA" name="enableSuppression">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdeJ9tzpEeaMeaEvRdRzBA" name="writableStackTrace">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdeJ99zpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super(message, cause, enableSuppression, writableStackTrace);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdeJ-NzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_CbvrotzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdeJ-dzpEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdeJ-tzpEeaMeaEvRdRzBA" name="cause" type="_CbvEkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdeJ-9zpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super(message, cause);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdexANzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_CTLlgNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdexAdzpEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CdexAtzpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super(message);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdexA9zpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" specification="_CbwSsNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdexBNzpEeaMeaEvRdRzBA" name="cause" type="_CbvEkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CdexBdzpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
              <language>java</language>
              <body>super(cause);
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CTKXYNzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_CdeJ8NzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CTK-cNzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CTK-cdzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CTK-ctzpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CTLlgNzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_CdexANzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CTLlgtzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CTLlg9zpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CTLlgdzpEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CTLlhNzpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbvEktzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_CdeJ8tzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CbvEl9zpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CbvroNzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CbvEk9zpEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CbvElNzpEeaMeaEvRdRzBA" name="cause" type="_CbvEkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbvEldzpEeaMeaEvRdRzBA" name="enableSuppression">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CbvEltzpEeaMeaEvRdRzBA" name="writableStackTrace">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CbvrodzpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbvrotzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_CdeJ-NzpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CbvrpdzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CbvrptzpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_Cbvro9zpEeaMeaEvRdRzBA" name="message">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_CbvrpNzpEeaMeaEvRdRzBA" name="cause" type="_CbvEkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_Cbvrp9zpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_CbwSsNzpEeaMeaEvRdRzBA" name="WrongXMLAttributeException" method="_CdexA9zpEeaMeaEvRdRzBA">
              <eAnnotations xmi:id="_CbwSstzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_CbwSs9zpEeaMeaEvRdRzBA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_CbwSsdzpEeaMeaEvRdRzBA" name="cause" type="_CbvEkNzpEeaMeaEvRdRzBA"/>
              <ownedParameter xmi:id="_CbwStNzpEeaMeaEvRdRzBA" type="_CTJwUNzpEeaMeaEvRdRzBA" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CO3GMNzpEeaMeaEvRdRzBA" name="main">
          <packagedElement xmi:type="uml:Class" xmi:id="_CUkFkNzpEeaMeaEvRdRzBA" name="TDA">
            <generalization xmi:id="_Cb9uFdzpEeaMeaEvRdRzBA" general="_CanDMNzpEeaMeaEvRdRzBA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdvPsNzpEeaMeaEvRdRzBA" name="main" specification="_CUksoNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdvPsdzpEeaMeaEvRdRzBA" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdvPstzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>launch(args);
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdvPs9zpEeaMeaEvRdRzBA" name="start" specification="_Cb9uENzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CdvPtNzpEeaMeaEvRdRzBA" name="primaryStage" type="_CanDMtzpEeaMeaEvRdRzBA"/>
              <language>java</language>
              <body>new Controller().start();
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_CUksoNzpEeaMeaEvRdRzBA" name="main" isStatic="true" method="_CdvPsNzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_CUksodzpEeaMeaEvRdRzBA" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CUksotzpEeaMeaEvRdRzBA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_Cb9uENzpEeaMeaEvRdRzBA" name="start" method="_CdvPs9zpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA">
              <ownedParameter xmi:id="_Cb9uEdzpEeaMeaEvRdRzBA" name="primaryStage" type="_CanDMtzpEeaMeaEvRdRzBA"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CNhCYNzpEeaMeaEvRdRzBA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_CNhCYdzpEeaMeaEvRdRzBA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_CaLlYNzpEeaMeaEvRdRzBA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CaRsANzpEeaMeaEvRdRzBA" name="FileInputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CNhCYtzpEeaMeaEvRdRzBA" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_CNhCY9zpEeaMeaEvRdRzBA" name="file">
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaMMcNzpEeaMeaEvRdRzBA" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CaMMctzpEeaMeaEvRdRzBA" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CNhpcNzpEeaMeaEvRdRzBA" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_CaMzgdzpEeaMeaEvRdRzBA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_CO6JgNzpEeaMeaEvRdRzBA" name="Map">
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaqGgtzpEeaMeaEvRdRzBA" name="Entry"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CQ-mENzpEeaMeaEvRdRzBA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_CbZtYNzpEeaMeaEvRdRzBA" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CaMzg9zpEeaMeaEvRdRzBA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CaUIQNzpEeaMeaEvRdRzBA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CaUIQtzpEeaMeaEvRdRzBA" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CaoRUNzpEeaMeaEvRdRzBA" name="HashSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CaoRUtzpEeaMeaEvRdRzBA" name="Observable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Cao4YdzpEeaMeaEvRdRzBA" name="Set"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CaqGgNzpEeaMeaEvRdRzBA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ca4I8NzpEeaMeaEvRdRzBA" name="Optional"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CbP8YNzpEeaMeaEvRdRzBA" name="Observer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CbudgNzpEeaMeaEvRdRzBA" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_CbudgdzpEeaMeaEvRdRzBA" name="Exception"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CbvEkNzpEeaMeaEvRdRzBA" name="Throwable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CbyH4NzpEeaMeaEvRdRzBA" name="Object"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Cbz9ENzpEeaMeaEvRdRzBA" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CcDNoNzpEeaMeaEvRdRzBA" name="Number"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CNhpcdzpEeaMeaEvRdRzBA" name="javafx">
      <packagedElement xmi:type="uml:Package" xmi:id="_CNhpctzpEeaMeaEvRdRzBA" name="scene">
        <packagedElement xmi:type="uml:Class" xmi:id="_Car7sdzpEeaMeaEvRdRzBA" name="Node"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_CNiQgNzpEeaMeaEvRdRzBA" name="chart">
          <packagedElement xmi:type="uml:Class" xmi:id="_CaNakdzpEeaMeaEvRdRzBA" name="XYChart"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CavmEdzpEeaMeaEvRdRzBA" name="CategoryAxis"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CavmE9zpEeaMeaEvRdRzBA" name="LineChart"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CawNIdzpEeaMeaEvRdRzBA" name="NumberAxis"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CNiQgdzpEeaMeaEvRdRzBA" name="control">
          <packagedElement xmi:type="uml:Class" xmi:id="_CaNak9zpEeaMeaEvRdRzBA" name="TreeItem"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_CPSkANzpEeaMeaEvRdRzBA" name="Alert">
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_Ca5XENzpEeaMeaEvRdRzBA" name="AlertType"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_CPWOYNzpEeaMeaEvRdRzBA" name="cell">
            <packagedElement xmi:type="uml:Class" xmi:id="_Ca7zUdzpEeaMeaEvRdRzBA" name="PropertyValueFactory"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_Car7s9zpEeaMeaEvRdRzBA" name="ScrollPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CasiwdzpEeaMeaEvRdRzBA" name="TableColumn"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Casiw9zpEeaMeaEvRdRzBA" name="TableView"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CawNI9zpEeaMeaEvRdRzBA" name="Label"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca0ekNzpEeaMeaEvRdRzBA" name="TreeCell"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca0ektzpEeaMeaEvRdRzBA" name="TreeView"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca4wAtzpEeaMeaEvRdRzBA" name="Alert"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca5XEtzpEeaMeaEvRdRzBA" name="ButtonType"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca5XFNzpEeaMeaEvRdRzBA" name="Menu"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca5-IdzpEeaMeaEvRdRzBA" name="MenuBar"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca5-I9zpEeaMeaEvRdRzBA" name="MenuItem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca7MQNzpEeaMeaEvRdRzBA" name="TableRow"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca-2odzpEeaMeaEvRdRzBA" name="ListView"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CbSYodzpEeaMeaEvRdRzBA" name="Button"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CbSYo9zpEeaMeaEvRdRzBA" name="Tab"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CbS_sdzpEeaMeaEvRdRzBA" name="TabPane"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CPFIoNzpEeaMeaEvRdRzBA" name="input">
          <packagedElement xmi:type="uml:Class" xmi:id="_Caw0MdzpEeaMeaEvRdRzBA" name="MouseEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CPFvsNzpEeaMeaEvRdRzBA" name="layout">
          <packagedElement xmi:type="uml:Class" xmi:id="_Caw0M9zpEeaMeaEvRdRzBA" name="StackPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CbDIENzpEeaMeaEvRdRzBA" name="BorderPane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CbDIEtzpEeaMeaEvRdRzBA" name="HBox"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CbDvIdzpEeaMeaEvRdRzBA" name="Pane"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CbDvI9zpEeaMeaEvRdRzBA" name="VBox"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CbS_s9zpEeaMeaEvRdRzBA" name="ColumnConstraints"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CbTmwdzpEeaMeaEvRdRzBA" name="GridPane"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CPNEcNzpEeaMeaEvRdRzBA" name="text">
          <packagedElement xmi:type="uml:Class" xmi:id="_Ca1FodzpEeaMeaEvRdRzBA" name="Text"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_Cau_AtzpEeaMeaEvRdRzBA" name="Cursor"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CbRxk9zpEeaMeaEvRdRzBA" name="Scene"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CO2fINzpEeaMeaEvRdRzBA" name="application">
        <packagedElement xmi:type="uml:Class" xmi:id="_CanDMNzpEeaMeaEvRdRzBA" name="Application"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CO2fIdzpEeaMeaEvRdRzBA" name="stage">
        <packagedElement xmi:type="uml:Class" xmi:id="_CanDMtzpEeaMeaEvRdRzBA" name="Stage"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CbTmw9zpEeaMeaEvRdRzBA" name="DirectoryChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CbUN0NzpEeaMeaEvRdRzBA" name="FileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CbUN0tzpEeaMeaEvRdRzBA" name="WindowEvent"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CO6wkNzpEeaMeaEvRdRzBA" name="beans">
        <packagedElement xmi:type="uml:Package" xmi:id="_CO6wkdzpEeaMeaEvRdRzBA" name="property">
          <packagedElement xmi:type="uml:Class" xmi:id="_CaqtkdzpEeaMeaEvRdRzBA" name="SimpleStringProperty"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CO6wktzpEeaMeaEvRdRzBA" name="value">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Caqtk9zpEeaMeaEvRdRzBA" name="ObservableValue"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CO6wk9zpEeaMeaEvRdRzBA" name="collections">
        <packagedElement xmi:type="uml:Class" xmi:id="_CarUodzpEeaMeaEvRdRzBA" name="FXCollections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CarUo9zpEeaMeaEvRdRzBA" name="ObservableList"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CO6wlNzpEeaMeaEvRdRzBA" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_CatJ0NzpEeaMeaEvRdRzBA" name="Callback"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CPEhkNzpEeaMeaEvRdRzBA" name="event">
        <packagedElement xmi:type="uml:Interface" xmi:id="_Cau_ANzpEeaMeaEvRdRzBA" name="EventHandler"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ca4wANzpEeaMeaEvRdRzBA" name="ActionEvent"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CPbt8NzpEeaMeaEvRdRzBA" name="geometry">
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_Ca-PkNzpEeaMeaEvRdRzBA" name="Orientation"/>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_CbQjcdzpEeaMeaEvRdRzBA" name="HPos"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CbRKgdzpEeaMeaEvRdRzBA" name="Insets"/>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_CbRKg9zpEeaMeaEvRdRzBA" name="Pos"/>
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_CbRxkdzpEeaMeaEvRdRzBA" name="VPos"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CNnJANzpEeaMeaEvRdRzBA" name="XYChart">
      <packagedElement xmi:type="uml:Class" xmi:id="_CaPPwNzpEeaMeaEvRdRzBA" name="Data"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_CaxbQdzpEeaMeaEvRdRzBA" name="Series"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CN-8cNzpEeaMeaEvRdRzBA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_CN-8cdzpEeaMeaEvRdRzBA" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_CN-8ctzpEeaMeaEvRdRzBA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_CaSTEdzpEeaMeaEvRdRzBA" name="XMLInputFactory"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaSTE9zpEeaMeaEvRdRzBA" name="XMLStreamConstants"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaS6IdzpEeaMeaEvRdRzBA" name="XMLStreamReader"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_COt8QNzpEeaMeaEvRdRzBA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_COt8QdzpEeaMeaEvRdRzBA" name="junit">
        <packagedElement xmi:type="uml:Class" xmi:id="_CahjoNzpEeaMeaEvRdRzBA" name="Assert"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_CQCK4NzpEeaMeaEvRdRzBA" name="runner">
          <packagedElement xmi:type="uml:Interface" xmi:id="_CbLD4NzpEeaMeaEvRdRzBA" name="RunWith"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CQCx8NzpEeaMeaEvRdRzBA" name="runners">
          <packagedElement xmi:type="uml:Class" xmi:id="_CbLD4tzpEeaMeaEvRdRzBA" name="Suite"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_CQCx8dzpEeaMeaEvRdRzBA" name="Suite">
            <packagedElement xmi:type="uml:Interface" xmi:id="_CbLq8dzpEeaMeaEvRdRzBA" name="SuiteClasses"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CaiKsdzpEeaMeaEvRdRzBA" name="After"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CaixwNzpEeaMeaEvRdRzBA" name="AfterClass"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CaixwtzpEeaMeaEvRdRzBA" name="Before"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CajY0NzpEeaMeaEvRdRzBA" name="BeforeClass"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CajY0tzpEeaMeaEvRdRzBA" name="Test"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CVR3QNzpEeaMeaEvRdRzBA" name="TestedClassTests">
      <eAnnotations xmi:id="_CVSeUNzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CVSeUdzpEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_CVSeUtzpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_CdKA4tzpEeaMeaEvRdRzBA" name="testRun1" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CfQSo9zpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdKn8dzpEeaMeaEvRdRzBA" name="unitTest1" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CfQ5sdzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdKn89zpEeaMeaEvRdRzBA" name="unitTest2" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CfRgwNzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdKn9dzpEeaMeaEvRdRzBA" name="unitTest4" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CfRgw9zpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdLPANzpEeaMeaEvRdRzBA" name="unitTest3" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CfSH0NzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdLPAtzpEeaMeaEvRdRzBA" name="testedClass" visibility="private" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_CfSH09zpEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd2kcNzpEeaMeaEvRdRzBA" name="setUp" specification="_CVUTgtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun1 = new TestRun(&quot;Run1&quot;, &quot;foo&quot;);
		unitTest1 = new UnitTest(testRun1, &quot;test1&quot;, &quot;fooTest1&quot;, &quot;Run1fooTest1&quot;, &quot;testFooBar&quot;);
		unitTest2 = new UnitTest(testRun1, &quot;test2&quot;, &quot;fooTest2&quot;, &quot;Run1fooTest2&quot;, &quot;testFooBar&quot;);
		unitTest3 = new UnitTest(testRun1, &quot;test3&quot;, &quot;fooTest3&quot;, &quot;Run1fooTest3&quot;, &quot;testFooBar&quot;);
		unitTest4 = new UnitTest(testRun1, &quot;test4&quot;, &quot;fooTest4&quot;, &quot;Run1fooTest4&quot;, &quot;testFooBar&quot;);
		
		testedClass = new TestedClass(&quot;TestMe&quot;, unitTest1);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3LgNzpEeaMeaEvRdRzBA" name="testFailurePercentage50" specification="_CVVhoNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Passed&quot;);
		unitTest3.setOutcome(&quot;Failed&quot;);
		unitTest4.setOutcome(&quot;Failed&quot;);
		

		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		testedClass.addUnitTestToClassLog(unitTest4);
		
		
		assertEquals(50, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3LgdzpEeaMeaEvRdRzBA" name="testFailurePercentage33" specification="_CVVhpNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Passed&quot;);
		unitTest3.setOutcome(&quot;Failed&quot;);
		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		
		assertEquals(33.33, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3LgtzpEeaMeaEvRdRzBA" name="testFailurePercentage66" specification="_CVWIs9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Failed&quot;);
		unitTest3.setOutcome(&quot;Failed&quot;);
		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		
		assertEquals(66.67, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3Lg9zpEeaMeaEvRdRzBA" name="testFailurePercentage0" specification="_CVWvwNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Passed&quot;);
		unitTest3.setOutcome(&quot;Passed&quot;);
		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		
		assertEquals(0, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3LhNzpEeaMeaEvRdRzBA" name="testGetClassnameOfTestMe" specification="_CVWvxNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertEquals(&quot;TestMe&quot;, testedClass.getClassName());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3LhdzpEeaMeaEvRdRzBA" name="testSetClassnameToNewTestMe" specification="_CVXW0NzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testedClass.setClassName(&quot;NewTestMe&quot;);
		assertEquals(&quot;NewTestMe&quot;, testedClass.getClassName());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3LhtzpEeaMeaEvRdRzBA" name="testAddNewUnitTestToClassLog" specification="_CVXW1NzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> before = testedClass.getClassLog().get(0).getUnitTestList();
		testedClass.addUnitTestToClassLog(unitTest2);
		before.add(unitTest2);
		
		assertEquals(before, testedClass.getUnitTestsByTestRun(testRun1));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3Lh9zpEeaMeaEvRdRzBA" name="testAddExistingUnitTestToClassLog" specification="_CVX94dzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> before = testedClass.getClassLog().get(0).getUnitTestList();
		testedClass.addUnitTestToClassLog(unitTest1);
		
		assertEquals(before, testedClass.getUnitTestsByTestRun(testRun1));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3LiNzpEeaMeaEvRdRzBA" name="testGetFailurePercentageByTestRun" specification="_CVX95dzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2.setOutcome(&quot;Passed&quot;);
		unitTest3.setOutcome(&quot;Failed&quot;);
		unitTest4.setOutcome(&quot;Failed&quot;);
		

		testedClass.addUnitTestToClassLog(unitTest2);
		testedClass.addUnitTestToClassLog(unitTest3);
		testedClass.addUnitTestToClassLog(unitTest4);
		
		double failurePercentage = testedClass.getClassLog().get(0).getFailurePercentage();
		
		assertEquals(failurePercentage, testedClass.getFailurePercentageByTestrun(testRun1), 0.01);
		List&lt;UnitTest> before = testedClass.getClassLog().get(0).getUnitTestList();
		testedClass.addUnitTestToClassLog(unitTest1);
		
		assertEquals(before.toString(), testedClass.getClassLog().get(0).getUnitTestList().toString());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3ykNzpEeaMeaEvRdRzBA" name="testGetUnitTestsByTestRun" specification="_CVYk8tzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> compare = testedClass.getClassLog().get(0).getUnitTestList();		
		assertEquals(compare, testedClass.getUnitTestsByTestRun(testRun1));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3ykdzpEeaMeaEvRdRzBA" name="testFailedGetUnitTestsByTestRun" specification="_CVYk9tzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testedClass.getUnitTestsByTestRun(new TestRun(&quot;fail01&quot;, &quot;FailRun&quot;));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd3yktzpEeaMeaEvRdRzBA" name="testFailedGetFailurePercentageByTestRun" specification="_CVZMA9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertEquals(-1.0, testedClass.getFailurePercentageByTestrun(new TestRun(&quot;fail01&quot;, &quot;FailRun&quot;)), 0.01);
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CVTFYNzpEeaMeaEvRdRzBA" name="setUpBeforeClass" isStatic="true" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVTsctzpEeaMeaEvRdRzBA" name="tearDownAfterClass" isStatic="true" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVUTgtzpEeaMeaEvRdRzBA" name="setUp" method="_Cd2kcNzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVU6kNzpEeaMeaEvRdRzBA" name="tearDown" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVVhoNzpEeaMeaEvRdRzBA" name="testFailurePercentage50" method="_Cd3LgNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVVhpNzpEeaMeaEvRdRzBA" name="testFailurePercentage33" method="_Cd3LgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVWIs9zpEeaMeaEvRdRzBA" name="testFailurePercentage66" method="_Cd3LgtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVWvwNzpEeaMeaEvRdRzBA" name="testFailurePercentage0" method="_Cd3Lg9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVWvxNzpEeaMeaEvRdRzBA" name="testGetClassnameOfTestMe" method="_Cd3LhNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVXW0NzpEeaMeaEvRdRzBA" name="testSetClassnameToNewTestMe" method="_Cd3LhdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVXW1NzpEeaMeaEvRdRzBA" name="testAddNewUnitTestToClassLog" method="_Cd3LhtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVX94dzpEeaMeaEvRdRzBA" name="testAddExistingUnitTestToClassLog" method="_Cd3Lh9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVX95dzpEeaMeaEvRdRzBA" name="testGetFailurePercentageByTestRun" method="_Cd3LiNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVYk8tzpEeaMeaEvRdRzBA" name="testGetUnitTestsByTestRun" method="_Cd3ykNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVYk9tzpEeaMeaEvRdRzBA" name="testFailedGetUnitTestsByTestRun" method="_Cd3ykdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVZMA9zpEeaMeaEvRdRzBA" name="testFailedGetFailurePercentageByTestRun" method="_Cd3yktzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CVcPUNzpEeaMeaEvRdRzBA" name="AllTests">
      <eAnnotations xmi:id="_CVcPUdzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CVcPUtzpEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_CVcPU9zpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CVddcNzpEeaMeaEvRdRzBA" name="CountersTests">
      <eAnnotations xmi:id="_CVddcdzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CVddctzpEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_CVddc9zpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_CdL2ENzpEeaMeaEvRdRzBA" name="counters" visibility="private" type="_CTOBwNzpEeaMeaEvRdRzBA" association="_CfSH1tzpEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd4ZoNzpEeaMeaEvRdRzBA" name="setUp" specification="_CVeEgNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>counters = new Counters(&quot;testSumAborted&quot;, &quot;testSumCompleted&quot;, &quot;testSumDisconnected&quot;, &quot;testSumError&quot;, &quot;testSumExecuted&quot;, &#xD;
				&quot;testSumFailed&quot;, &quot;testSumInProgress&quot;, &quot;testSumInconclusive&quot;, &quot;testSumNotExecuted&quot;, &quot;testSumNotRunnable&quot;,&#xD;
				&quot;testSumPassed&quot;, &quot;testSumPassedButRunAborted&quot;, &quot;testSumPending&quot;, &quot;testSumTimeOut&quot;, &quot;testSumTotal&quot;, &quot;testSumWarning&quot;); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd4ZodzpEeaMeaEvRdRzBA" name="tearDown" specification="_CVerkNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>counters = null; &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd4ZotzpEeaMeaEvRdRzBA" name="testGetSumAbortedSuccess" specification="_CVerlNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumAborted().equals(&quot;testSumAborted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd4Zo9zpEeaMeaEvRdRzBA" name="testSetSumAbortedSuccess" specification="_CVfSotzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumAborted = &quot;changedSumAborted&quot;; &#xD;
		counters.setSumAborted(changedSumAborted);&#xD;
		assertTrue(counters.getSumAborted().equals(changedSumAborted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd4ZpNzpEeaMeaEvRdRzBA" name="testGetSumCompletedSuccess" specification="_CVfSptzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumCompleted().equals(&quot;testSumCompleted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd4ZpdzpEeaMeaEvRdRzBA" name="testSetSumCompletedSuccess" specification="_CVf5stzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumCompleted = &quot;changedSumCompleted&quot;; &#xD;
		counters.setSumCompleted(changedSumCompleted);&#xD;
		assertTrue(counters.getSumCompleted().equals(changedSumCompleted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd4ZptzpEeaMeaEvRdRzBA" name="testGetSumDisconnectedSuccess" specification="_CVggwNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumDisconnected().equals(&quot;testSumDisconnected&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd4Zp9zpEeaMeaEvRdRzBA" name="testSetSumDisconnectedSuccess" specification="_CVggxNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumDisconnected = &quot;changedSumDisconnected&quot;; &#xD;
		counters.setSumDisconnected(changedSumDisconnected);&#xD;
		assertTrue(counters.getSumDisconnected().equals(changedSumDisconnected)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5AsNzpEeaMeaEvRdRzBA" name="testGetSumErrorSuccess" specification="_CVhH0tzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumError().equals(&quot;testSumError&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5AsdzpEeaMeaEvRdRzBA" name="testSetSumErrorSuccess" specification="_CVhH1tzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumError = &quot;changedSumError&quot;; &#xD;
		counters.setSumError(changedSumError);&#xD;
		assertTrue(counters.getSumError().equals(changedSumError)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5AstzpEeaMeaEvRdRzBA" name="testGetSumExecutedSuccess" specification="_CVhu49zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumExecuted().equals(&quot;testSumExecuted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5As9zpEeaMeaEvRdRzBA" name="testSetSumExecutedSuccess" specification="_CViV8NzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumExecuted = &quot;changedSumExecuted&quot;; &#xD;
		counters.setSumExecuted(changedSumExecuted);&#xD;
		assertTrue(counters.getSumExecuted().equals(changedSumExecuted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5AtNzpEeaMeaEvRdRzBA" name="testGetSumFailedSuccess" specification="_CViV9NzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumFailed().equals(&quot;testSumFailed&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5AtdzpEeaMeaEvRdRzBA" name="testSetSumFailedSuccess" specification="_CVi9AdzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumFailed = &quot;changedSumFailed&quot;; &#xD;
		counters.setSumFailed(changedSumFailed);&#xD;
		assertTrue(counters.getSumFailed().equals(changedSumFailed)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5nwNzpEeaMeaEvRdRzBA" name="testGetSumInProgressSuccess" specification="_CVi9BdzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumInProgress().equals(&quot;testSumInProgress&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5nwdzpEeaMeaEvRdRzBA" name="testSetSumInProgressSuccess" specification="_CVjkEtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumInProgress = &quot;changedSumInProgress&quot;; &#xD;
		counters.setSumInProgress(changedSumInProgress);&#xD;
		assertTrue(counters.getSumInProgress().equals(changedSumInProgress)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5nwtzpEeaMeaEvRdRzBA" name="testGetSumInconclusiveSuccess" specification="_CVjkFtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumInconclusive().equals(&quot;testSumInconclusive&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5nw9zpEeaMeaEvRdRzBA" name="testSetSumInconclusiveSuccess" specification="_CVkLItzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumInconclusive = &quot;changedSumInconclusive&quot;; &#xD;
		counters.setSumInconclusive(changedSumInconclusive);&#xD;
		assertTrue(counters.getSumInconclusive().equals(changedSumInconclusive)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5nxNzpEeaMeaEvRdRzBA" name="testGetSumNotExecutedSuccess" specification="_CVkLJtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumNotExecuted().equals(&quot;testSumNotExecuted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5nxdzpEeaMeaEvRdRzBA" name="testSetSumNotExecutedSuccess" specification="_CVkyM9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumNotExecuted = &quot;changedSumNotExecuted&quot;; &#xD;
		counters.setSumNotExecuted(changedSumNotExecuted);&#xD;
		assertTrue(counters.getSumNotExecuted().equals(changedSumNotExecuted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5nxtzpEeaMeaEvRdRzBA" name="testGetSumNotRunnableSuccess" specification="_CVlZQtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumNotRunnable().equals(&quot;testSumNotRunnable&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5nx9zpEeaMeaEvRdRzBA" name="testSetSumNotRunnableSuccess" specification="_CVlZRtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumNotRunnable = &quot;changedSumNotRunnable&quot;; &#xD;
		counters.setSumNotRunnable(changedSumNotRunnable);&#xD;
		assertTrue(counters.getSumNotRunnable().equals(changedSumNotRunnable)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd5nyNzpEeaMeaEvRdRzBA" name="testGetSumPassedSuccess" specification="_CVmAU9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumPassed().equals(&quot;testSumPassed&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd6O0NzpEeaMeaEvRdRzBA" name="testSetSumPassedSuccess" specification="_CVmAV9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumPassed = &quot;changedSumPassed&quot;; &#xD;
		counters.setSumPassed(changedSumPassed);&#xD;
		assertTrue(counters.getSumPassed().equals(changedSumPassed)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd6O0dzpEeaMeaEvRdRzBA" name="testGetSumPassedButRunAbortedSuccess" specification="_CVmnY9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumPassedButRunAborted().equals(&quot;testSumPassedButRunAborted&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd6O0tzpEeaMeaEvRdRzBA" name="testSetSumPassedButRunAbortedSuccess" specification="_CVmnZ9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumPassedButRunAborted = &quot;changedSumPassedButRunAborted&quot;; &#xD;
		counters.setSumPassedButRunAborted(changedSumPassedButRunAborted);&#xD;
		assertTrue(counters.getSumPassedButRunAborted().equals(changedSumPassedButRunAborted)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd6O09zpEeaMeaEvRdRzBA" name="testGetSumPendingSuccess" specification="_CVnOc9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumPending().equals(&quot;testSumPending&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd6O1NzpEeaMeaEvRdRzBA" name="testSetSumPendingSuccess" specification="_CVnOd9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumPending = &quot;changedSumPending&quot;; &#xD;
		counters.setSumPending(changedSumPending);&#xD;
		assertTrue(counters.getSumPending().equals(changedSumPending)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd6O1dzpEeaMeaEvRdRzBA" name="testGetSumTimeOutSuccess" specification="_CVn1g9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumTimeOut().equals(&quot;testSumTimeOut&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd6O1tzpEeaMeaEvRdRzBA" name="testSetSumTimeOutSuccess" specification="_CVn1h9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumTimeOut = &quot;changedSumTimeOut&quot;; &#xD;
		counters.setSumTimeOut(changedSumTimeOut);&#xD;
		assertTrue(counters.getSumTimeOut().equals(changedSumTimeOut)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd6O19zpEeaMeaEvRdRzBA" name="testGetSumTotalSuccess" specification="_CVock9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumTotal().equals(&quot;testSumTotal&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd614NzpEeaMeaEvRdRzBA" name="testSetSumTotalSuccess" specification="_CVpDoNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumTotal = &quot;changedSumTotal&quot;; &#xD;
		counters.setSumTotal(changedSumTotal);&#xD;
		assertTrue(counters.getSumTotal().equals(changedSumTotal)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd614dzpEeaMeaEvRdRzBA" name="testGetSumWarningSuccess" specification="_CVpDpNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(counters.getSumWarning().equals(&quot;testSumWarning&quot;)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd614tzpEeaMeaEvRdRzBA" name="testSetSumWarningSuccess" specification="_CVpqs9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String changedSumWarning = &quot;changedSumWarning&quot;; &#xD;
		counters.setSumWarning(changedSumWarning);&#xD;
		assertTrue(counters.getSumWarning().equals(changedSumWarning)); &#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CVeEgNzpEeaMeaEvRdRzBA" name="setUp" method="_Cd4ZoNzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVerkNzpEeaMeaEvRdRzBA" name="tearDown" method="_Cd4ZodzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVerlNzpEeaMeaEvRdRzBA" name="testGetSumAbortedSuccess" method="_Cd4ZotzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVfSotzpEeaMeaEvRdRzBA" name="testSetSumAbortedSuccess" method="_Cd4Zo9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVfSptzpEeaMeaEvRdRzBA" name="testGetSumCompletedSuccess" method="_Cd4ZpNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVf5stzpEeaMeaEvRdRzBA" name="testSetSumCompletedSuccess" method="_Cd4ZpdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVggwNzpEeaMeaEvRdRzBA" name="testGetSumDisconnectedSuccess" method="_Cd4ZptzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVggxNzpEeaMeaEvRdRzBA" name="testSetSumDisconnectedSuccess" method="_Cd4Zp9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVhH0tzpEeaMeaEvRdRzBA" name="testGetSumErrorSuccess" method="_Cd5AsNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVhH1tzpEeaMeaEvRdRzBA" name="testSetSumErrorSuccess" method="_Cd5AsdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVhu49zpEeaMeaEvRdRzBA" name="testGetSumExecutedSuccess" method="_Cd5AstzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CViV8NzpEeaMeaEvRdRzBA" name="testSetSumExecutedSuccess" method="_Cd5As9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CViV9NzpEeaMeaEvRdRzBA" name="testGetSumFailedSuccess" method="_Cd5AtNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVi9AdzpEeaMeaEvRdRzBA" name="testSetSumFailedSuccess" method="_Cd5AtdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVi9BdzpEeaMeaEvRdRzBA" name="testGetSumInProgressSuccess" method="_Cd5nwNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVjkEtzpEeaMeaEvRdRzBA" name="testSetSumInProgressSuccess" method="_Cd5nwdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVjkFtzpEeaMeaEvRdRzBA" name="testGetSumInconclusiveSuccess" method="_Cd5nwtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVkLItzpEeaMeaEvRdRzBA" name="testSetSumInconclusiveSuccess" method="_Cd5nw9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVkLJtzpEeaMeaEvRdRzBA" name="testGetSumNotExecutedSuccess" method="_Cd5nxNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVkyM9zpEeaMeaEvRdRzBA" name="testSetSumNotExecutedSuccess" method="_Cd5nxdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVlZQtzpEeaMeaEvRdRzBA" name="testGetSumNotRunnableSuccess" method="_Cd5nxtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVlZRtzpEeaMeaEvRdRzBA" name="testSetSumNotRunnableSuccess" method="_Cd5nx9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVmAU9zpEeaMeaEvRdRzBA" name="testGetSumPassedSuccess" method="_Cd5nyNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVmAV9zpEeaMeaEvRdRzBA" name="testSetSumPassedSuccess" method="_Cd6O0NzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVmnY9zpEeaMeaEvRdRzBA" name="testGetSumPassedButRunAbortedSuccess" method="_Cd6O0dzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVmnZ9zpEeaMeaEvRdRzBA" name="testSetSumPassedButRunAbortedSuccess" method="_Cd6O0tzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVnOc9zpEeaMeaEvRdRzBA" name="testGetSumPendingSuccess" method="_Cd6O09zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVnOd9zpEeaMeaEvRdRzBA" name="testSetSumPendingSuccess" method="_Cd6O1NzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVn1g9zpEeaMeaEvRdRzBA" name="testGetSumTimeOutSuccess" method="_Cd6O1dzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVn1h9zpEeaMeaEvRdRzBA" name="testSetSumTimeOutSuccess" method="_Cd6O1tzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVock9zpEeaMeaEvRdRzBA" name="testGetSumTotalSuccess" method="_Cd6O19zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVpDoNzpEeaMeaEvRdRzBA" name="testSetSumTotalSuccess" method="_Cd614NzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVpDpNzpEeaMeaEvRdRzBA" name="testGetSumWarningSuccess" method="_Cd614dzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVpqs9zpEeaMeaEvRdRzBA" name="testSetSumWarningSuccess" method="_Cd614tzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CVsG8NzpEeaMeaEvRdRzBA" name="TestDataTests">
      <eAnnotations xmi:id="_CVsG8dzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CVsG8tzpEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_CVsG89zpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_CdMdINzpEeaMeaEvRdRzBA" name="testData" visibility="private" type="_CTlOINzpEeaMeaEvRdRzBA" association="_CfSu4dzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdMdItzpEeaMeaEvRdRzBA" name="testRun1" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CfSu5NzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdNEMNzpEeaMeaEvRdRzBA" name="testRun2" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CfTV8dzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdNEMtzpEeaMeaEvRdRzBA" name="unitTests" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CfTV9NzpEeaMeaEvRdRzBA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdNEM9zpEeaMeaEvRdRzBA" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdNENdzpEeaMeaEvRdRzBA" value="new UnitTest[10]"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_CdNrQdzpEeaMeaEvRdRzBA" name="testedClass1" visibility="private" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_CfT9ANzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdNrQ9zpEeaMeaEvRdRzBA" name="testedClass2" visibility="private" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_CfT9A9zpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdNrRdzpEeaMeaEvRdRzBA" name="testedClass3" visibility="private" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_CfUkEdzpEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd7c8NzpEeaMeaEvRdRzBA" name="setUp" specification="_CVt8I9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData = TestData.getInstance(); 
		
		testRun1 = new TestRun(&quot;Run1&quot;, &quot;run-name-1&quot;);
		testRun2 = new TestRun(&quot;Run2&quot;, &quot;run-name-2&quot;);
		
		int half = unitTests.length/2;
		
		for (int i = 0; i &lt; half; i++) {
			unitTests[i] = new UnitTest(testRun1, &quot;test&quot;+i, &quot;fooTest&quot;+i, &quot;Run1fooTest&quot;+i, &quot;testFooBar&quot;);
		}
		
		for (int i = half; i &lt; unitTests.length; i++) {
			unitTests[i] = new UnitTest(testRun2, &quot;test&quot;+i, &quot;fooTest&quot;+i, &quot;Run2fooTest&quot;+i, &quot;testFooBar&quot;);
		}
		
		testedClass1 = new TestedClass(&quot;TestMe&quot;, unitTests[0]);
		testedClass2 = new TestedClass(&quot;TestMe&quot;, unitTests[1]); 
		testedClass3 = new TestedClass(&quot;Test3&quot;, unitTests[2]);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd7c8dzpEeaMeaEvRdRzBA" name="tearDown" specification="_CVujM9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.getTestRunList().clear();
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd7c8tzpEeaMeaEvRdRzBA" name="testAddNewTestRunSuccess" specification="_CVvKQtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestRun(testRun1);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		assertTrue(testData.getTestRunList().contains(testRun1)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd7c89zpEeaMeaEvRdRzBA" name="testAddNewTestRunToAlreadyExistingTestRunListSuccess" specification="_CVvKRtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestRun(testRun1);
			testData.addNewTestRun(testRun2);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		assertTrue(testData.getTestRunList().contains(testRun2) &amp;&amp; testData.getTestRunList().contains(testRun1)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8EANzpEeaMeaEvRdRzBA" name="testAddNewTestRunFail" specification="_CVvxU9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewTestRun(testRun1);
			testData.addNewTestRun(testRun1);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8EAdzpEeaMeaEvRdRzBA" name="testAddNewTestRunToAlreadyExistingTestRunListFail" specification="_CVwYY9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewTestRun(testRun1);
			testData.addNewTestRun(testRun2);
			testData.addNewTestRun(testRun2);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8EAtzpEeaMeaEvRdRzBA" name="testAddNewTestedClassSuccess" specification="_CVw_dNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewTestedClassToTree(testedClass1); 
		
		assertTrue(testData.getClassByName(&quot;testedClass1&quot;).equals(testedClass1)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8EA9zpEeaMeaEvRdRzBA" name="testAddNewTestedClassToAlreadyExistingTestedClassListSuccess" specification="_CVxmgtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestedClassToTree(testedClass1); 
			testData.addNewTestedClassToTree(testedClass3); 
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		assertTrue(testData.getClassByName(&quot;testedClass3&quot;).equals(testedClass3) &amp;&amp; 
				testData.getClassByName(&quot;testedClass1&quot;).equals(testedClass1)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8EBNzpEeaMeaEvRdRzBA" name="testAddNewTestedClassExistingClass" specification="_CVxmhtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestedClassToTree(testedClass1); 
			testData.addNewTestedClassToTree(testedClass2); 
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		assertTrue((testData.getClassByName(&quot;testedClass1&quot;).getClassLog().get(0).getUnitTestList().get(0).equals(unitTests[0])) &amp;&amp; 
				(testData.getClassByName(&quot;testedClass2&quot;).getClassLog().get(0).getUnitTestList().get(1).equals(unitTests[1]))); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8EBdzpEeaMeaEvRdRzBA" name="testAddNewUnitTest" specification="_CVyNktzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewUnitTest(unitTests[0]);
		
		assertTrue(testData.getUnitTestList().contains(unitTests[0])); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8EBtzpEeaMeaEvRdRzBA" name="testGetTestRunByIDSuccess" specification="_CVyNltzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestRun(testRun1);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
		TestRun addedTestRun = testData.getTestRunByID(&quot;Run1&quot;); 
		
		assertTrue(addedTestRun == testRun1); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8EB9zpEeaMeaEvRdRzBA" name="testGetTestRunByIDFail" specification="_CVy0o9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>try {
			testData.addNewTestRun(testRun1);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
		
		TestRun addedTestRun = testData.getTestRunByID(&quot;Run2&quot;); 
		
		assertTrue(addedTestRun == null); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8ECNzpEeaMeaEvRdRzBA" name="testGetClassByName" specification="_CVy0p9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testData.addNewTestedClassToTree(testedClass1); 
		
		TestedClass addedClass = testData.getClassByName(&quot;TestMe&quot;); 
		
		assertTrue(addedClass.equals(testedClass1)); 

	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CVtVENzpEeaMeaEvRdRzBA" name="setUpBeforeClass" isStatic="true" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVtVFNzpEeaMeaEvRdRzBA" name="tearDownAfterClass" isStatic="true" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVt8I9zpEeaMeaEvRdRzBA" name="setUp" method="_Cd7c8NzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVujM9zpEeaMeaEvRdRzBA" name="tearDown" method="_Cd7c8dzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVvKQtzpEeaMeaEvRdRzBA" name="testAddNewTestRunSuccess" method="_Cd7c8tzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVvKRtzpEeaMeaEvRdRzBA" name="testAddNewTestRunToAlreadyExistingTestRunListSuccess" method="_Cd7c89zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVvxU9zpEeaMeaEvRdRzBA" name="testAddNewTestRunFail" method="_Cd8EANzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVwYY9zpEeaMeaEvRdRzBA" name="testAddNewTestRunToAlreadyExistingTestRunListFail" method="_Cd8EAdzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVw_dNzpEeaMeaEvRdRzBA" name="testAddNewTestedClassSuccess" method="_Cd8EAtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVxmgtzpEeaMeaEvRdRzBA" name="testAddNewTestedClassToAlreadyExistingTestedClassListSuccess" method="_Cd8EA9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVxmhtzpEeaMeaEvRdRzBA" name="testAddNewTestedClassExistingClass" method="_Cd8EBNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVyNktzpEeaMeaEvRdRzBA" name="testAddNewUnitTest" method="_Cd8EBdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVyNltzpEeaMeaEvRdRzBA" name="testGetTestRunByIDSuccess" method="_Cd8EBtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVy0o9zpEeaMeaEvRdRzBA" name="testGetTestRunByIDFail" method="_Cd8EB9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CVy0p9zpEeaMeaEvRdRzBA" name="testGetClassByName" method="_Cd8ECNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CV2fANzpEeaMeaEvRdRzBA" name="TestRunStartTimeTests">
      <eAnnotations xmi:id="_CV2fAdzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CV2fAtzpEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_CV2fA9zpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_CdOSUNzpEeaMeaEvRdRzBA" name="time1" visibility="private" type="_CT3iANzpEeaMeaEvRdRzBA" association="_CfVLIdzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdOSUtzpEeaMeaEvRdRzBA" name="time2" visibility="private" type="_CT3iANzpEeaMeaEvRdRzBA" association="_CfVLJNzpEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd8rENzpEeaMeaEvRdRzBA" name="setUp" specification="_CV3GENzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>time1 = new TestRunStartTime(2017, 1, 12, 19, 5, 23); 
		time2 = new TestRunStartTime(2017, 1, 12, 19, 5, 25); 		 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd9SINzpEeaMeaEvRdRzBA" name="tearDown" specification="_CV3tINzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>time1 = null; 
		time2 = null; 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd9SIdzpEeaMeaEvRdRzBA" name="getYearSuccess" specification="_CV4UMNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int year = time1.getYear(); 
		assertEquals(2017, year); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd9SItzpEeaMeaEvRdRzBA" name="getMonthSuccess" specification="_CV4UNNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int month = time1.getMonth(); 
		assertEquals(1, month); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd9SI9zpEeaMeaEvRdRzBA" name="getDaySuccess" specification="_CV47QtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int day = time1.getDay(); 
		assertEquals(12, day); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd9SJNzpEeaMeaEvRdRzBA" name="getHourSuccess" specification="_CV47RtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int hour = time1.getHour(); 
		assertEquals(19, hour); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd9SJdzpEeaMeaEvRdRzBA" name="getMinSuccess" specification="_CV5iUtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int minute = time1.getMin(); 
		assertEquals(5, minute); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd9SJtzpEeaMeaEvRdRzBA" name="getSecSuccess" specification="_CV5iVtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int second = time1.getSec(); 
		assertEquals(second, 23); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd9SJ9zpEeaMeaEvRdRzBA" name="toStringSuccess" specification="_CV6JYtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String string = time1.toString(); 
		assertTrue((&quot;TestRunStartTime &quot; + &quot;[&quot; + 2017 + &quot;-&quot; + 1 + &quot;-&quot; + 12 + &quot; &quot; + 19 + &quot;:&quot; + 5 + &quot;:&quot; + 23 + &quot;]&quot;).equals(string));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd95MNzpEeaMeaEvRdRzBA" name="compareToSuccess" specification="_CV6JZtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>int comparison = time1.compareTo(time2); 
		System.out.println(comparison);
		assertEquals(1, comparison); 
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CV3GENzpEeaMeaEvRdRzBA" name="setUp" method="_Cd8rENzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV3tINzpEeaMeaEvRdRzBA" name="tearDown" method="_Cd9SINzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV4UMNzpEeaMeaEvRdRzBA" name="getYearSuccess" method="_Cd9SIdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV4UNNzpEeaMeaEvRdRzBA" name="getMonthSuccess" method="_Cd9SItzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV47QtzpEeaMeaEvRdRzBA" name="getDaySuccess" method="_Cd9SI9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV47RtzpEeaMeaEvRdRzBA" name="getHourSuccess" method="_Cd9SJNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV5iUtzpEeaMeaEvRdRzBA" name="getMinSuccess" method="_Cd9SJdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV5iVtzpEeaMeaEvRdRzBA" name="getSecSuccess" method="_Cd9SJtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV6JYtzpEeaMeaEvRdRzBA" name="toStringSuccess" method="_Cd9SJ9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV6JZtzpEeaMeaEvRdRzBA" name="compareToSuccess" method="_Cd95MNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CV7-kNzpEeaMeaEvRdRzBA" name="TestRunTests">
      <eAnnotations xmi:id="_CV8loNzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CV8lodzpEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_CV8lotzpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_CdO5YdzpEeaMeaEvRdRzBA" name="testRun1" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CfVyMdzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdO5Y9zpEeaMeaEvRdRzBA" name="testRun2" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CfVyNNzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdO5ZdzpEeaMeaEvRdRzBA" name="unitTests" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CfWZQdzpEeaMeaEvRdRzBA">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdPgcNzpEeaMeaEvRdRzBA" value="*"/>
        <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdPgctzpEeaMeaEvRdRzBA" value="new UnitTest[10]"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_CdPgdNzpEeaMeaEvRdRzBA" name="testedClass1" visibility="private" type="_CT9ooNzpEeaMeaEvRdRzBA" association="_CfWZRNzpEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd95MdzpEeaMeaEvRdRzBA" name="setUp" specification="_CV9zw9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun1 = new TestRun(&quot;Run1&quot;, &quot;run-name-1&quot;);
		testRun2 = new TestRun(&quot;Run2&quot;, &quot;run-name-2&quot;);
		
		int half = unitTests.length/2;
		
		for (int i = 0; i &lt; half; i++) {
			unitTests[i] = new UnitTest(testRun1, &quot;test&quot;+i, &quot;fooTest&quot;+i, &quot;Run1fooTest&quot;+i, &quot;testFooBar&quot;);
		}
		
		for (int i = half; i &lt; unitTests.length; i++) {
			unitTests[i] = new UnitTest(testRun2, &quot;test&quot;+i, &quot;fooTest&quot;+i, &quot;Run2fooTest&quot;+i, &quot;testFooBar&quot;);
		}
		
		testedClass1 = new TestedClass(&quot;TestMe&quot;, unitTests[0]);
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd95MtzpEeaMeaEvRdRzBA" name="testAddNewTestedClassToTestRun" specification="_CV_B4tzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;TestedClass> testedClasses = testRun1.getTestedClasses();
		testRun1.addTestedClassToTestRun(testedClass1);
		testedClasses.add(testedClass1);
		
		assertEquals(testedClasses, testRun1.getTestedClasses());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd95M9zpEeaMeaEvRdRzBA" name="testAddExistingTestedClassToTestRun" specification="_CV_B5tzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun1.addTestedClassToTestRun(testedClass1);
		List&lt;TestedClass> testedClasses = testRun1.getTestedClasses();
		
		// Adding class the second time should have no effect
		testRun1.addTestedClassToTestRun(testedClass1);
		
		assertEquals(testedClasses, testRun1.getTestedClasses());
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd-gQNzpEeaMeaEvRdRzBA" name="testEqualsSameTestRuns" specification="_CV_o89zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertTrue(testRun1.equals(testRun1));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd-gQdzpEeaMeaEvRdRzBA" name="testEqualsSameTestID" specification="_CV_o99zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun testRun3 = new TestRun(&quot;Run1&quot;, &quot;run-name-2&quot;);
		assertTrue(testRun1.equals(testRun3));
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cd-gQtzpEeaMeaEvRdRzBA" name="testEqualsDifferentTestRuns" specification="_CWAQA9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>assertFalse(testRun1.equals(testRun2));
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CV8lo9zpEeaMeaEvRdRzBA" name="setUpBeforeClass" isStatic="true" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV9Ms9zpEeaMeaEvRdRzBA" name="tearDownAfterClass" isStatic="true" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV9zw9zpEeaMeaEvRdRzBA" name="setUp" method="_Cd95MdzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV-a09zpEeaMeaEvRdRzBA" name="tearDown" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV_B4tzpEeaMeaEvRdRzBA" name="testAddNewTestedClassToTestRun" method="_Cd95MtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV_B5tzpEeaMeaEvRdRzBA" name="testAddExistingTestedClassToTestRun" method="_Cd95M9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV_o89zpEeaMeaEvRdRzBA" name="testEqualsSameTestRuns" method="_Cd-gQNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CV_o99zpEeaMeaEvRdRzBA" name="testEqualsSameTestID" method="_Cd-gQdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWAQA9zpEeaMeaEvRdRzBA" name="testEqualsDifferentTestRuns" method="_Cd-gQtzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CWgmUNzpEeaMeaEvRdRzBA" name="UnitTestTests">
      <eAnnotations xmi:id="_CWgmUdzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CWgmUtzpEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_CWgmU9zpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_CdW1MNzpEeaMeaEvRdRzBA" name="unitTest" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CfduBNzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdXcQNzpEeaMeaEvRdRzBA" name="testRun" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CfeVEdzpEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeEm4NzpEeaMeaEvRdRzBA" name="setUp" specification="_CWhNYNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun = new TestRun(&quot;testRunID&quot;, &quot;testRunName&quot;); &#xD;
		unitTest = new UnitTest(testRun, &quot;testID&quot;, &quot;testName&quot;, &quot;testExecutionID&quot;, &quot;testMethodName&quot;);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeFN8NzpEeaMeaEvRdRzBA" name="tearDown" specification="_CWh0ctzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun = null; &#xD;
		unitTest = null; &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeFN8dzpEeaMeaEvRdRzBA" name="getUnitTestIDSuccess" specification="_CWibgtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String testID = unitTest.getUnitTestID(); &#xD;
		assertEquals(testID, &quot;testID&quot;); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeFN8tzpEeaMeaEvRdRzBA" name="setUnitTestIDSuccess" specification="_CWibhtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String newTestID = &quot;newTestID&quot;; &#xD;
		unitTest.setUnitTestID(newTestID);&#xD;
		String changedTestID = unitTest.getUnitTestID(); &#xD;
		assertEquals(changedTestID, newTestID); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeFN89zpEeaMeaEvRdRzBA" name="getUnitTestNameSuccess" specification="_CWjCk9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String testName = unitTest.getUnitTestName(); &#xD;
		assertEquals(testName, &quot;testName&quot;); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeFN9NzpEeaMeaEvRdRzBA" name="setUnitTestNameSuccess" specification="_CWjCl9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String newTestName = &quot;newTestName&quot;; &#xD;
		unitTest.setUnitTestName(newTestName);&#xD;
		String changedTestName = unitTest.getUnitTestName(); &#xD;
		assertEquals(newTestName, changedTestName); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeFN9dzpEeaMeaEvRdRzBA" name="getUnitTestExecutionIDSuccess" specification="_CWjpo9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String testExecutionID = unitTest.getUnitTestExecutionID(); &#xD;
		assertEquals(&quot;testExecutionID&quot;, testExecutionID); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeFN9tzpEeaMeaEvRdRzBA" name="setUnitTestExecutionIDSuccess" specification="_CWjpp9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String newTestExecutionID = &quot;newTestExecutionID&quot;; &#xD;
		unitTest.setUnitTestExecutionID(newTestExecutionID);&#xD;
		String changedTestExecutionID = unitTest.getUnitTestExecutionID(); &#xD;
		assertEquals(newTestExecutionID, changedTestExecutionID); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeFN99zpEeaMeaEvRdRzBA" name="getTestMethodNameSuccess" specification="_CWkQs9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String testMethodName = unitTest.getTestMethodName(); &#xD;
		assertEquals(testMethodName, &quot;testMethodName&quot;); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeFN-NzpEeaMeaEvRdRzBA" name="setTestMethodNameSuccess" specification="_CWk3wtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String newTestMethodName = &quot;newTestMethodName&quot;; &#xD;
		unitTest.setTestMethodName(newTestMethodName);&#xD;
		String changedTestMethodName = unitTest.getTestMethodName(); &#xD;
		assertEquals(newTestMethodName, changedTestMethodName); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeF1ANzpEeaMeaEvRdRzBA" name="getTestRunSuccess" specification="_CWk3xtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun unitTestTestRun = unitTest.getTestRun(); &#xD;
		assertTrue(unitTestTestRun.equals(testRun)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeF1AdzpEeaMeaEvRdRzBA" name="setTestRunSuccess" specification="_CWle09zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun newTestRun = new TestRun(&quot;newTestRunID&quot;, &quot;newTestRunName&quot;);&#xD;
		unitTest.setTestRun(newTestRun);&#xD;
		TestRun changedTestRun = unitTest.getTestRun(); &#xD;
		assertTrue(newTestRun.equals(changedTestRun)); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeF1AtzpEeaMeaEvRdRzBA" name="getSetTestedClassSuccess" specification="_CWle19zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestedClass testedClass = new TestedClass(&quot;testedClass&quot;, unitTest); &#xD;
		unitTest.setTestedClass(testedClass); &#xD;
		TestedClass settedTestedClass = unitTest.getTestedClass(); &#xD;
		assertTrue(testedClass.equals(settedTestedClass)); &#xD;
		&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeF1A9zpEeaMeaEvRdRzBA" name="hasPassedsetOutcomePassedSuccess" specification="_CWmF49zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest.setOutcome(&quot;Passed&quot;);&#xD;
		boolean outcome = unitTest.hasPassed(); &#xD;
		assertTrue(outcome); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeF1BNzpEeaMeaEvRdRzBA" name="hasPassedSetOutcomeFailedSuccess" specification="_CWms8NzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest.setOutcome(&quot;Failed&quot;);&#xD;
		boolean outcome = unitTest.hasPassed(); &#xD;
		assertFalse(outcome); &#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeF1BdzpEeaMeaEvRdRzBA" name="toStringWithOutcomePassedSuccess" specification="_CWms9NzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest.setOutcome(&quot;Passed&quot;);&#xD;
		String string = unitTest.toString(); &#xD;
		assertEquals((&quot;UnitTest [unitTestID=&quot; + &quot;testID&quot; + &quot;, unitTestName=&quot; + &quot;testName&quot; + &quot;, outcome=&quot; + true + &quot;]&quot;), string);&#xD;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeF1BtzpEeaMeaEvRdRzBA" name="toStringWithOutcomeFailedSuccess" specification="_CWnUAdzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>unitTest.setOutcome(&quot;Failed&quot;);&#xD;
		String string = unitTest.toString(); &#xD;
		assertEquals((&quot;UnitTest [unitTestID=&quot; + &quot;testID&quot; + &quot;, unitTestName=&quot; + &quot;testName&quot; + &quot;, outcome=&quot; + false + &quot;]&quot;), string);&#xD;
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CWhNYNzpEeaMeaEvRdRzBA" name="setUp" method="_CeEm4NzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWh0ctzpEeaMeaEvRdRzBA" name="tearDown" method="_CeFN8NzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWibgtzpEeaMeaEvRdRzBA" name="getUnitTestIDSuccess" method="_CeFN8dzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWibhtzpEeaMeaEvRdRzBA" name="setUnitTestIDSuccess" method="_CeFN8tzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWjCk9zpEeaMeaEvRdRzBA" name="getUnitTestNameSuccess" method="_CeFN89zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWjCl9zpEeaMeaEvRdRzBA" name="setUnitTestNameSuccess" method="_CeFN9NzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWjpo9zpEeaMeaEvRdRzBA" name="getUnitTestExecutionIDSuccess" method="_CeFN9dzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWjpp9zpEeaMeaEvRdRzBA" name="setUnitTestExecutionIDSuccess" method="_CeFN9tzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWkQs9zpEeaMeaEvRdRzBA" name="getTestMethodNameSuccess" method="_CeFN99zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWk3wtzpEeaMeaEvRdRzBA" name="setTestMethodNameSuccess" method="_CeFN-NzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWk3xtzpEeaMeaEvRdRzBA" name="getTestRunSuccess" method="_CeF1ANzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWle09zpEeaMeaEvRdRzBA" name="setTestRunSuccess" method="_CeF1AdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWle19zpEeaMeaEvRdRzBA" name="getSetTestedClassSuccess" method="_CeF1AtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWmF49zpEeaMeaEvRdRzBA" name="hasPassedsetOutcomePassedSuccess" method="_CeF1A9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWms8NzpEeaMeaEvRdRzBA" name="hasPassedSetOutcomeFailedSuccess" method="_CeF1BNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWms9NzpEeaMeaEvRdRzBA" name="toStringWithOutcomePassedSuccess" method="_CeF1BdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWnUAdzpEeaMeaEvRdRzBA" name="toStringWithOutcomeFailedSuccess" method="_CeF1BtzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CWpJMNzpEeaMeaEvRdRzBA" name="UnitTestsToTestRunMapperTests">
      <eAnnotations xmi:id="_CWpJMdzpEeaMeaEvRdRzBA" source="http://ns.yatta.de/umllab">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_CWpJMtzpEeaMeaEvRdRzBA" source="codegen">
          <details xmi:id="_CWpJM9zpEeaMeaEvRdRzBA" key="codegenDirectory" value="/TDA/test"/>
        </contents>
      </eAnnotations>
      <ownedAttribute xmi:id="_CdXcQtzpEeaMeaEvRdRzBA" name="mapper" visibility="private" type="_CUVcENzpEeaMeaEvRdRzBA" association="_CfeVFNzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdYDUdzpEeaMeaEvRdRzBA" name="unitTest1" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_Cfe8IdzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdYDU9zpEeaMeaEvRdRzBA" name="unitTest2" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_Cfe8JNzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdYDVdzpEeaMeaEvRdRzBA" name="unitTest3" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CffjMdzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdYqYdzpEeaMeaEvRdRzBA" name="unitTest4" visibility="private" type="_CURKoNzpEeaMeaEvRdRzBA" association="_CfgKQNzpEeaMeaEvRdRzBA"/>
      <ownedAttribute xmi:id="_CdYqY9zpEeaMeaEvRdRzBA" name="testRun" visibility="private" type="_CTwNQNzpEeaMeaEvRdRzBA" association="_CfgKQ9zpEeaMeaEvRdRzBA"/>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeGcENzpEeaMeaEvRdRzBA" name="setUp" specification="_CWpwQNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>testRun = new TestRun(&quot;testRunID&quot;, &quot;testRunName&quot;); 
		unitTest1 = new UnitTest(testRun, &quot;testID1&quot;, &quot;testName1&quot;, &quot;testExecutionID1&quot;, &quot;testMethodName1&quot;);
		unitTest1.setOutcome(&quot;Passed&quot;);
		unitTest2 = new UnitTest(testRun, &quot;testID2&quot;, &quot;testName2&quot;, &quot;testExecutionID2&quot;, &quot;testMethodName2&quot;);
		unitTest2.setOutcome(&quot;Failed&quot;);
		unitTest3 = new UnitTest(testRun, &quot;testID3&quot;, &quot;testName3&quot;, &quot;testExecutionID3&quot;, &quot;testMethodName3&quot;);
		unitTest3.setOutcome(&quot;Passed&quot;);
		unitTest4 = new UnitTest(testRun, &quot;testID4&quot;, &quot;testName4&quot;, &quot;testExecutionID4&quot;, &quot;testMethodName4&quot;);
		unitTest4.setOutcome(&quot;Failed&quot;);
		mapper = new UnitTestsToTestRunMapper(unitTest1); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeGcEdzpEeaMeaEvRdRzBA" name="tearDown" specification="_CWqXU9zpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>mapper = null; 
		testRun = null; 
		unitTest1 = null;
		unitTest2 = null;
		unitTest3 = null;
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeGcEtzpEeaMeaEvRdRzBA" name="addUnitTestToTestRunSuccess" specification="_CWq-YtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>mapper.addUnitTestToTestRun(unitTest2);
		List&lt;UnitTest> compareList = new ArrayList&lt;>();
		compareList.add(unitTest1); 
		compareList.add(unitTest2); 
		assertTrue(mapper.getUnitTestList().equals(compareList)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeGcE9zpEeaMeaEvRdRzBA" name="getFailurePercentageSuccess" specification="_CWrlcNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>mapper.addUnitTestToTestRun(unitTest2);
		mapper.addUnitTestToTestRun(unitTest3);
		mapper.addUnitTestToTestRun(unitTest4);
		double fp = mapper.getFailurePercentage(); 
		assertEquals(fp, 50.00, 0.0); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeGcFNzpEeaMeaEvRdRzBA" name="getUnitTestListSuccess" specification="_CWrldNzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> compareList = new ArrayList&lt;>();
		compareList.add(unitTest1); 
		assertTrue(mapper.getUnitTestList().equals(compareList)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeHDINzpEeaMeaEvRdRzBA" name="getTestRunSuccess" specification="_CWsMgtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun compareTestRun = mapper.getTestRun(); 
		assertTrue(compareTestRun.equals(testRun)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeHDIdzpEeaMeaEvRdRzBA" name="setTestRunSuccess" specification="_CWsMhtzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>TestRun newTestRun = new TestRun(&quot;newRunID&quot;, &quot;newRunName&quot;);
		mapper.setTestRun(newTestRun);
		assertTrue(mapper.getTestRun().equals(newTestRun)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeHDItzpEeaMeaEvRdRzBA" name="setUnitTestListSuccess" specification="_CWszktzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>List&lt;UnitTest> newList = new ArrayList&lt;>();
		newList.add(unitTest2); 
		newList.add(unitTest3); 
		mapper.setUnitTestList(newList);
		assertTrue(mapper.getUnitTestList().equals(newList)); 
	</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CeHDI9zpEeaMeaEvRdRzBA" name="toStringSuccess" specification="_CWszltzpEeaMeaEvRdRzBA">
        <language>java</language>
        <body>String string = mapper.toString(); 
		System.out.println(string);
		assertEquals((&quot;Mapper [testRun=&quot; + &quot;testRunID&quot; + &quot;, unitTestList=&quot; + 
				&quot;[UnitTest [unitTestID=testID1, unitTestName=testName1, outcome=true]]&quot; + 
				&quot;, failurePercentage=&quot; + &quot;0.0&quot; + &quot;]&quot;), string);
	</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_CWpwQNzpEeaMeaEvRdRzBA" name="setUp" method="_CeGcENzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWqXU9zpEeaMeaEvRdRzBA" name="tearDown" method="_CeGcEdzpEeaMeaEvRdRzBA" raisedException="_CbudgdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWq-YtzpEeaMeaEvRdRzBA" name="addUnitTestToTestRunSuccess" method="_CeGcEtzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWrlcNzpEeaMeaEvRdRzBA" name="getFailurePercentageSuccess" method="_CeGcE9zpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWrldNzpEeaMeaEvRdRzBA" name="getUnitTestListSuccess" method="_CeGcFNzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWsMgtzpEeaMeaEvRdRzBA" name="getTestRunSuccess" method="_CeHDINzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWsMhtzpEeaMeaEvRdRzBA" name="setTestRunSuccess" method="_CeHDIdzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWszktzpEeaMeaEvRdRzBA" name="setUnitTestListSuccess" method="_CeHDItzpEeaMeaEvRdRzBA"/>
      <ownedOperation xmi:id="_CWszltzpEeaMeaEvRdRzBA" name="toStringSuccess" method="_CeHDI9zpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CeuHJtzpEeaMeaEvRdRzBA" name="" memberEnd="_CeuHJ9zpEeaMeaEvRdRzBA _Cc6JQNzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CeuHJ9zpEeaMeaEvRdRzBA" name="" type="_CUYfYNzpEeaMeaEvRdRzBA" association="_CeuHJtzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CeuuMdzpEeaMeaEvRdRzBA" name="" memberEnd="_CeuuMtzpEeaMeaEvRdRzBA _Cc6JQtzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CeuuMtzpEeaMeaEvRdRzBA" name="" type="_CUYfYNzpEeaMeaEvRdRzBA" association="_CeuuMdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CeuuNNzpEeaMeaEvRdRzBA" name="" memberEnd="_CeuuNdzpEeaMeaEvRdRzBA _Cc6JRNzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CeuuNdzpEeaMeaEvRdRzBA" name="" type="_CUYfYNzpEeaMeaEvRdRzBA" association="_CeuuNNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CevVQdzpEeaMeaEvRdRzBA" name="" memberEnd="_CevVQtzpEeaMeaEvRdRzBA _Cc6wVNzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CevVQtzpEeaMeaEvRdRzBA" name="" type="_CUYfYNzpEeaMeaEvRdRzBA" association="_CevVQdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CevVRNzpEeaMeaEvRdRzBA" name="" memberEnd="_CevVRdzpEeaMeaEvRdRzBA _Cc6wV9zpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CevVRdzpEeaMeaEvRdRzBA" name="" type="_CUYfYNzpEeaMeaEvRdRzBA" association="_CevVRNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Cev8UdzpEeaMeaEvRdRzBA" name="" memberEnd="_Cev8UtzpEeaMeaEvRdRzBA _Cc7XYdzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_Cev8UtzpEeaMeaEvRdRzBA" name="" type="_CUYfYNzpEeaMeaEvRdRzBA" association="_Cev8UdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfQSo9zpEeaMeaEvRdRzBA" name="" memberEnd="_CfQSpNzpEeaMeaEvRdRzBA _CdKA4tzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfQSpNzpEeaMeaEvRdRzBA" name="" type="_CVR3QNzpEeaMeaEvRdRzBA" association="_CfQSo9zpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfQ5sdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfQ5stzpEeaMeaEvRdRzBA _CdKn8dzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfQ5stzpEeaMeaEvRdRzBA" name="" type="_CVR3QNzpEeaMeaEvRdRzBA" association="_CfQ5sdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfRgwNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfRgwdzpEeaMeaEvRdRzBA _CdKn89zpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfRgwdzpEeaMeaEvRdRzBA" name="" type="_CVR3QNzpEeaMeaEvRdRzBA" association="_CfRgwNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfRgw9zpEeaMeaEvRdRzBA" name="" memberEnd="_CfRgxNzpEeaMeaEvRdRzBA _CdKn9dzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfRgxNzpEeaMeaEvRdRzBA" name="" type="_CVR3QNzpEeaMeaEvRdRzBA" association="_CfRgw9zpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfSH0NzpEeaMeaEvRdRzBA" name="" memberEnd="_CfSH0dzpEeaMeaEvRdRzBA _CdLPANzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfSH0dzpEeaMeaEvRdRzBA" name="" type="_CVR3QNzpEeaMeaEvRdRzBA" association="_CfSH0NzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfSH09zpEeaMeaEvRdRzBA" name="" memberEnd="_CfSH1NzpEeaMeaEvRdRzBA _CdLPAtzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfSH1NzpEeaMeaEvRdRzBA" name="" type="_CVR3QNzpEeaMeaEvRdRzBA" association="_CfSH09zpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfSH1tzpEeaMeaEvRdRzBA" name="" memberEnd="_CfSH19zpEeaMeaEvRdRzBA _CdL2ENzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfSH19zpEeaMeaEvRdRzBA" name="" type="_CVddcNzpEeaMeaEvRdRzBA" association="_CfSH1tzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfSu4dzpEeaMeaEvRdRzBA" name="" memberEnd="_CfSu4tzpEeaMeaEvRdRzBA _CdMdINzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfSu4tzpEeaMeaEvRdRzBA" name="" type="_CVsG8NzpEeaMeaEvRdRzBA" association="_CfSu4dzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfSu5NzpEeaMeaEvRdRzBA" name="" memberEnd="_CfSu5dzpEeaMeaEvRdRzBA _CdMdItzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfSu5dzpEeaMeaEvRdRzBA" name="" type="_CVsG8NzpEeaMeaEvRdRzBA" association="_CfSu5NzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfTV8dzpEeaMeaEvRdRzBA" name="" memberEnd="_CfTV8tzpEeaMeaEvRdRzBA _CdNEMNzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfTV8tzpEeaMeaEvRdRzBA" name="" type="_CVsG8NzpEeaMeaEvRdRzBA" association="_CfTV8dzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfTV9NzpEeaMeaEvRdRzBA" name="" memberEnd="_CfTV9dzpEeaMeaEvRdRzBA _CdNEMtzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfTV9dzpEeaMeaEvRdRzBA" name="" type="_CVsG8NzpEeaMeaEvRdRzBA" association="_CfTV9NzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfT9ANzpEeaMeaEvRdRzBA" name="" memberEnd="_CfT9AdzpEeaMeaEvRdRzBA _CdNrQdzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfT9AdzpEeaMeaEvRdRzBA" name="" type="_CVsG8NzpEeaMeaEvRdRzBA" association="_CfT9ANzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfT9A9zpEeaMeaEvRdRzBA" name="" memberEnd="_CfT9BNzpEeaMeaEvRdRzBA _CdNrQ9zpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfT9BNzpEeaMeaEvRdRzBA" name="" type="_CVsG8NzpEeaMeaEvRdRzBA" association="_CfT9A9zpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfUkEdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfUkEtzpEeaMeaEvRdRzBA _CdNrRdzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfUkEtzpEeaMeaEvRdRzBA" name="" type="_CVsG8NzpEeaMeaEvRdRzBA" association="_CfUkEdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfVLIdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfVLItzpEeaMeaEvRdRzBA _CdOSUNzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfVLItzpEeaMeaEvRdRzBA" name="" type="_CV2fANzpEeaMeaEvRdRzBA" association="_CfVLIdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfVLJNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfVLJdzpEeaMeaEvRdRzBA _CdOSUtzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfVLJdzpEeaMeaEvRdRzBA" name="" type="_CV2fANzpEeaMeaEvRdRzBA" association="_CfVLJNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfVyMdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfVyMtzpEeaMeaEvRdRzBA _CdO5YdzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfVyMtzpEeaMeaEvRdRzBA" name="" type="_CV7-kNzpEeaMeaEvRdRzBA" association="_CfVyMdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfVyNNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfVyNdzpEeaMeaEvRdRzBA _CdO5Y9zpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfVyNdzpEeaMeaEvRdRzBA" name="" type="_CV7-kNzpEeaMeaEvRdRzBA" association="_CfVyNNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfWZQdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfWZQtzpEeaMeaEvRdRzBA _CdO5ZdzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfWZQtzpEeaMeaEvRdRzBA" name="" type="_CV7-kNzpEeaMeaEvRdRzBA" association="_CfWZQdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfWZRNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfWZRdzpEeaMeaEvRdRzBA _CdPgdNzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfWZRdzpEeaMeaEvRdRzBA" name="" type="_CV7-kNzpEeaMeaEvRdRzBA" association="_CfWZRNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfduBNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfduBdzpEeaMeaEvRdRzBA _CdW1MNzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfduBdzpEeaMeaEvRdRzBA" name="" type="_CWgmUNzpEeaMeaEvRdRzBA" association="_CfduBNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfeVEdzpEeaMeaEvRdRzBA" name="" memberEnd="_CfeVEtzpEeaMeaEvRdRzBA _CdXcQNzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfeVEtzpEeaMeaEvRdRzBA" name="" type="_CWgmUNzpEeaMeaEvRdRzBA" association="_CfeVEdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfeVFNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfeVFdzpEeaMeaEvRdRzBA _CdXcQtzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfeVFdzpEeaMeaEvRdRzBA" name="" type="_CWpJMNzpEeaMeaEvRdRzBA" association="_CfeVFNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Cfe8IdzpEeaMeaEvRdRzBA" name="" memberEnd="_Cfe8ItzpEeaMeaEvRdRzBA _CdYDUdzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_Cfe8ItzpEeaMeaEvRdRzBA" name="" type="_CWpJMNzpEeaMeaEvRdRzBA" association="_Cfe8IdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_Cfe8JNzpEeaMeaEvRdRzBA" name="" memberEnd="_Cfe8JdzpEeaMeaEvRdRzBA _CdYDU9zpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_Cfe8JdzpEeaMeaEvRdRzBA" name="" type="_CWpJMNzpEeaMeaEvRdRzBA" association="_Cfe8JNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CffjMdzpEeaMeaEvRdRzBA" name="" memberEnd="_CffjMtzpEeaMeaEvRdRzBA _CdYDVdzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CffjMtzpEeaMeaEvRdRzBA" name="" type="_CWpJMNzpEeaMeaEvRdRzBA" association="_CffjMdzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfgKQNzpEeaMeaEvRdRzBA" name="" memberEnd="_CfgKQdzpEeaMeaEvRdRzBA _CdYqYdzpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfgKQdzpEeaMeaEvRdRzBA" name="" type="_CWpJMNzpEeaMeaEvRdRzBA" association="_CfgKQNzpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_CfgKQ9zpEeaMeaEvRdRzBA" name="" memberEnd="_CfgKRNzpEeaMeaEvRdRzBA _CdYqY9zpEeaMeaEvRdRzBA">
      <ownedEnd xmi:id="_CfgKRNzpEeaMeaEvRdRzBA" name="" type="_CWpJMNzpEeaMeaEvRdRzBA" association="_CfgKQ9zpEeaMeaEvRdRzBA"/>
    </packagedElement>
    <profileApplication xmi:id="_BvN80NzpEeaMeaEvRdRzBA">
      <eAnnotations xmi:id="_BvSOQNzpEeaMeaEvRdRzBA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_BvSOQdzpEeaMeaEvRdRzBA" base_Package="_Bksu4NzpEeaMeaEvRdRzBA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_CTFe4NzpEeaMeaEvRdRzBA" genericsValue="TestRun" base_Element="_CTE30NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CTnDUNzpEeaMeaEvRdRzBA" base_Element="_CTmcQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CTzQktzpEeaMeaEvRdRzBA" base_Element="_CTzQkNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CTz3oNzpEeaMeaEvRdRzBA" base_Element="_CTzQkNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CTz3odzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CT6lUdzpEeaMeaEvRdRzBA" base_Element="_CT5-QNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CT7MYNzpEeaMeaEvRdRzBA" base_Element="_CT5-QNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CT7MYdzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUAr8NzpEeaMeaEvRdRzBA" base_Element="_CUAE4NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUAr8dzpEeaMeaEvRdRzBA" base_Element="_CUAE4NzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUAr8tzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUBTAdzpEeaMeaEvRdRzBA" base_Element="_CUAr89zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUBTAtzpEeaMeaEvRdRzBA" base_Element="_CUAr89zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUBTA9zpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CULEAdzpEeaMeaEvRdRzBA" base_Element="_CUKc9NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CULEAtzpEeaMeaEvRdRzBA" base_Element="_CUKc9NzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CULEA9zpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CULrEdzpEeaMeaEvRdRzBA" base_Element="_CULEBNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CULrEtzpEeaMeaEvRdRzBA" base_Element="_CULEBNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CULrE9zpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUS_09zpEeaMeaEvRdRzBA" base_Element="_CUS_0dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUS_1NzpEeaMeaEvRdRzBA" base_Element="_CUS_0dzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUTm4NzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUWqM9zpEeaMeaEvRdRzBA" base_Element="_CUWqMdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUXRQNzpEeaMeaEvRdRzBA" base_Element="_CUWqMdzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUXRQdzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUaUkdzpEeaMeaEvRdRzBA" base_Element="_CUaUkNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUa7oNzpEeaMeaEvRdRzBA" base_Element="_CUaUkNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUa7odzpEeaMeaEvRdRzBA" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUa7o9zpEeaMeaEvRdRzBA" base_Element="_CUa7otzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUa7pNzpEeaMeaEvRdRzBA" base_Element="_CUa7otzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUbisNzpEeaMeaEvRdRzBA" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUbistzpEeaMeaEvRdRzBA" base_Element="_CUbisdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUbis9zpEeaMeaEvRdRzBA" base_Element="_CUbisdzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUbitNzpEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUcJwdzpEeaMeaEvRdRzBA" base_Element="_CUcJwNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUcJwtzpEeaMeaEvRdRzBA" base_Element="_CUcJwNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUcJw9zpEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUcw0NzpEeaMeaEvRdRzBA" base_Element="_CUcJxNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUcw0dzpEeaMeaEvRdRzBA" base_Element="_CUcJxNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUcw0tzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUplINzpEeaMeaEvRdRzBA" base_Element="_CUo-ENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUplIdzpEeaMeaEvRdRzBA" base_Element="_CUo-ENzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUplItzpEeaMeaEvRdRzBA" name="SuppressWarnings">
      <annotationParameters xmi:id="_CUqMMNzpEeaMeaEvRdRzBA" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeQ0INzpEeaMeaEvRdRzBA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUqMMtzpEeaMeaEvRdRzBA" base_Element="_CUqMMdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CUqzQNzpEeaMeaEvRdRzBA" base_Element="_CUqMMdzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CUqzQdzpEeaMeaEvRdRzBA" name="SuppressWarnings">
      <annotationParameters xmi:id="_CUqzQtzpEeaMeaEvRdRzBA" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeRbMNzpEeaMeaEvRdRzBA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_CU1yYdzpEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_CU1yYNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CU75AdzpEeaMeaEvRdRzBA" base_Element="_CU75ANzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CU75AtzpEeaMeaEvRdRzBA" base_Element="_CU75ANzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CU8gENzpEeaMeaEvRdRzBA" name="SuppressWarnings">
      <annotationParameters xmi:id="_CU8gEdzpEeaMeaEvRdRzBA" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeRbMtzpEeaMeaEvRdRzBA" value="&quot;rawtypes&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeSCQNzpEeaMeaEvRdRzBA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_CVD00NzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_CVDNwNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CVEb4tzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_CVEb4NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CVFqANzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_CVFC8NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVTFYdzpEeaMeaEvRdRzBA" base_Element="_CVTFYNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVTscNzpEeaMeaEvRdRzBA" base_Element="_CVTFYNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVTscdzpEeaMeaEvRdRzBA" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVTsc9zpEeaMeaEvRdRzBA" base_Element="_CVTsctzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVUTgNzpEeaMeaEvRdRzBA" base_Element="_CVTsctzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVUTgdzpEeaMeaEvRdRzBA" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVUTg9zpEeaMeaEvRdRzBA" base_Element="_CVUTgtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVUThNzpEeaMeaEvRdRzBA" base_Element="_CVUTgtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVUThdzpEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVU6kdzpEeaMeaEvRdRzBA" base_Element="_CVU6kNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVU6ktzpEeaMeaEvRdRzBA" base_Element="_CVU6kNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVU6k9zpEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVVhodzpEeaMeaEvRdRzBA" base_Element="_CVVhoNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVVhotzpEeaMeaEvRdRzBA" base_Element="_CVVhoNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVVho9zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVWIsNzpEeaMeaEvRdRzBA" base_Element="_CVVhpNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVWIsdzpEeaMeaEvRdRzBA" base_Element="_CVVhpNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVWIstzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVWItNzpEeaMeaEvRdRzBA" base_Element="_CVWIs9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVWItdzpEeaMeaEvRdRzBA" base_Element="_CVWIs9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVWIttzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVWvwdzpEeaMeaEvRdRzBA" base_Element="_CVWvwNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVWvwtzpEeaMeaEvRdRzBA" base_Element="_CVWvwNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVWvw9zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVWvxdzpEeaMeaEvRdRzBA" base_Element="_CVWvxNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVWvxtzpEeaMeaEvRdRzBA" base_Element="_CVWvxNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVWvx9zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVXW0dzpEeaMeaEvRdRzBA" base_Element="_CVXW0NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVXW0tzpEeaMeaEvRdRzBA" base_Element="_CVXW0NzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVXW09zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVXW1dzpEeaMeaEvRdRzBA" base_Element="_CVXW1NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVXW1tzpEeaMeaEvRdRzBA" base_Element="_CVXW1NzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVX94NzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVX94tzpEeaMeaEvRdRzBA" base_Element="_CVX94dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVX949zpEeaMeaEvRdRzBA" base_Element="_CVX94dzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVX95NzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVX95tzpEeaMeaEvRdRzBA" base_Element="_CVX95dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVYk8NzpEeaMeaEvRdRzBA" base_Element="_CVX95dzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVYk8dzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVYk89zpEeaMeaEvRdRzBA" base_Element="_CVYk8tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVYk9NzpEeaMeaEvRdRzBA" base_Element="_CVYk8tzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVYk9dzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVYk99zpEeaMeaEvRdRzBA" base_Element="_CVYk9tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVZMANzpEeaMeaEvRdRzBA" base_Element="_CVYk9tzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVZMAdzpEeaMeaEvRdRzBA" name="Test">
      <annotationParameters xmi:id="_CVZMAtzpEeaMeaEvRdRzBA" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeSpVdzpEeaMeaEvRdRzBA" value="IllegalArgumentException.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVZMBNzpEeaMeaEvRdRzBA" base_Element="_CVZMA9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVZMBdzpEeaMeaEvRdRzBA" base_Element="_CVZMA9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVZMBtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVc2YNzpEeaMeaEvRdRzBA" base_Element="_CVcPUNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVc2YdzpEeaMeaEvRdRzBA" base_Element="_CVcPUNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVc2YtzpEeaMeaEvRdRzBA" name="RunWith">
      <annotationParameters xmi:id="_CVc2Y9zpEeaMeaEvRdRzBA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeTQYNzpEeaMeaEvRdRzBA" value="Suite.class"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_CVc2ZNzpEeaMeaEvRdRzBA" name="SuiteClasses">
      <annotationParameters xmi:id="_CVc2ZdzpEeaMeaEvRdRzBA" skipName="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeTQYdzpEeaMeaEvRdRzBA" value="TestedClassTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeTQYtzpEeaMeaEvRdRzBA" value="TestRunTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeTQY9zpEeaMeaEvRdRzBA" value="TestDataTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeTQZNzpEeaMeaEvRdRzBA" value="TreeNodeTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeTQZdzpEeaMeaEvRdRzBA" value="CountersTests.class"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeTQZtzpEeaMeaEvRdRzBA" value="UnitTestTests.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVeEgdzpEeaMeaEvRdRzBA" base_Element="_CVeEgNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVeEgtzpEeaMeaEvRdRzBA" base_Element="_CVeEgNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVeEg9zpEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVerkdzpEeaMeaEvRdRzBA" base_Element="_CVerkNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVerktzpEeaMeaEvRdRzBA" base_Element="_CVerkNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVerk9zpEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVerldzpEeaMeaEvRdRzBA" base_Element="_CVerlNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVfSoNzpEeaMeaEvRdRzBA" base_Element="_CVerlNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVfSodzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVfSo9zpEeaMeaEvRdRzBA" base_Element="_CVfSotzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVfSpNzpEeaMeaEvRdRzBA" base_Element="_CVfSotzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVfSpdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVfSp9zpEeaMeaEvRdRzBA" base_Element="_CVfSptzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVf5sNzpEeaMeaEvRdRzBA" base_Element="_CVfSptzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVf5sdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVf5s9zpEeaMeaEvRdRzBA" base_Element="_CVf5stzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVf5tNzpEeaMeaEvRdRzBA" base_Element="_CVf5stzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVf5tdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVggwdzpEeaMeaEvRdRzBA" base_Element="_CVggwNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVggwtzpEeaMeaEvRdRzBA" base_Element="_CVggwNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVggw9zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVggxdzpEeaMeaEvRdRzBA" base_Element="_CVggxNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVhH0NzpEeaMeaEvRdRzBA" base_Element="_CVggxNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVhH0dzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVhH09zpEeaMeaEvRdRzBA" base_Element="_CVhH0tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVhH1NzpEeaMeaEvRdRzBA" base_Element="_CVhH0tzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVhH1dzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVhu4NzpEeaMeaEvRdRzBA" base_Element="_CVhH1tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVhu4dzpEeaMeaEvRdRzBA" base_Element="_CVhH1tzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVhu4tzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVhu5NzpEeaMeaEvRdRzBA" base_Element="_CVhu49zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVhu5dzpEeaMeaEvRdRzBA" base_Element="_CVhu49zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVhu5tzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CViV8dzpEeaMeaEvRdRzBA" base_Element="_CViV8NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CViV8tzpEeaMeaEvRdRzBA" base_Element="_CViV8NzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CViV89zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CViV9dzpEeaMeaEvRdRzBA" base_Element="_CViV9NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CViV9tzpEeaMeaEvRdRzBA" base_Element="_CViV9NzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVi9ANzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVi9AtzpEeaMeaEvRdRzBA" base_Element="_CVi9AdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVi9A9zpEeaMeaEvRdRzBA" base_Element="_CVi9AdzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVi9BNzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVi9BtzpEeaMeaEvRdRzBA" base_Element="_CVi9BdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVjkENzpEeaMeaEvRdRzBA" base_Element="_CVi9BdzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVjkEdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVjkE9zpEeaMeaEvRdRzBA" base_Element="_CVjkEtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVjkFNzpEeaMeaEvRdRzBA" base_Element="_CVjkEtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVjkFdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVjkF9zpEeaMeaEvRdRzBA" base_Element="_CVjkFtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVkLINzpEeaMeaEvRdRzBA" base_Element="_CVjkFtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVkLIdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVkLI9zpEeaMeaEvRdRzBA" base_Element="_CVkLItzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVkLJNzpEeaMeaEvRdRzBA" base_Element="_CVkLItzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVkLJdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVkyMNzpEeaMeaEvRdRzBA" base_Element="_CVkLJtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVkyMdzpEeaMeaEvRdRzBA" base_Element="_CVkLJtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVkyMtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVkyNNzpEeaMeaEvRdRzBA" base_Element="_CVkyM9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVlZQNzpEeaMeaEvRdRzBA" base_Element="_CVkyM9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVlZQdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVlZQ9zpEeaMeaEvRdRzBA" base_Element="_CVlZQtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVlZRNzpEeaMeaEvRdRzBA" base_Element="_CVlZQtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVlZRdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVmAUNzpEeaMeaEvRdRzBA" base_Element="_CVlZRtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVmAUdzpEeaMeaEvRdRzBA" base_Element="_CVlZRtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVmAUtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVmAVNzpEeaMeaEvRdRzBA" base_Element="_CVmAU9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVmAVdzpEeaMeaEvRdRzBA" base_Element="_CVmAU9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVmAVtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVmnYNzpEeaMeaEvRdRzBA" base_Element="_CVmAV9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVmnYdzpEeaMeaEvRdRzBA" base_Element="_CVmAV9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVmnYtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVmnZNzpEeaMeaEvRdRzBA" base_Element="_CVmnY9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVmnZdzpEeaMeaEvRdRzBA" base_Element="_CVmnY9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVmnZtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVnOcNzpEeaMeaEvRdRzBA" base_Element="_CVmnZ9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVnOcdzpEeaMeaEvRdRzBA" base_Element="_CVmnZ9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVnOctzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVnOdNzpEeaMeaEvRdRzBA" base_Element="_CVnOc9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVnOddzpEeaMeaEvRdRzBA" base_Element="_CVnOc9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVnOdtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVn1gNzpEeaMeaEvRdRzBA" base_Element="_CVnOd9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVn1gdzpEeaMeaEvRdRzBA" base_Element="_CVnOd9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVn1gtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVn1hNzpEeaMeaEvRdRzBA" base_Element="_CVn1g9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVn1hdzpEeaMeaEvRdRzBA" base_Element="_CVn1g9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVn1htzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVockNzpEeaMeaEvRdRzBA" base_Element="_CVn1h9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVockdzpEeaMeaEvRdRzBA" base_Element="_CVn1h9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVocktzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVoclNzpEeaMeaEvRdRzBA" base_Element="_CVock9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVocldzpEeaMeaEvRdRzBA" base_Element="_CVock9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVocltzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVpDodzpEeaMeaEvRdRzBA" base_Element="_CVpDoNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVpDotzpEeaMeaEvRdRzBA" base_Element="_CVpDoNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVpDo9zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVpqsNzpEeaMeaEvRdRzBA" base_Element="_CVpDpNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVpqsdzpEeaMeaEvRdRzBA" base_Element="_CVpDpNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVpqstzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVpqtNzpEeaMeaEvRdRzBA" base_Element="_CVpqs9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVpqtdzpEeaMeaEvRdRzBA" base_Element="_CVpqs9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVpqttzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVtVEdzpEeaMeaEvRdRzBA" base_Element="_CVtVENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVtVEtzpEeaMeaEvRdRzBA" base_Element="_CVtVENzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVtVE9zpEeaMeaEvRdRzBA" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVt8INzpEeaMeaEvRdRzBA" base_Element="_CVtVFNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVt8IdzpEeaMeaEvRdRzBA" base_Element="_CVtVFNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVt8ItzpEeaMeaEvRdRzBA" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVujMNzpEeaMeaEvRdRzBA" base_Element="_CVt8I9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVujMdzpEeaMeaEvRdRzBA" base_Element="_CVt8I9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVujMtzpEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVujNNzpEeaMeaEvRdRzBA" base_Element="_CVujM9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVvKQNzpEeaMeaEvRdRzBA" base_Element="_CVujM9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVvKQdzpEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVvKQ9zpEeaMeaEvRdRzBA" base_Element="_CVvKQtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVvKRNzpEeaMeaEvRdRzBA" base_Element="_CVvKQtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVvKRdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVvxUNzpEeaMeaEvRdRzBA" base_Element="_CVvKRtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVvxUdzpEeaMeaEvRdRzBA" base_Element="_CVvKRtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVvxUtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVvxVNzpEeaMeaEvRdRzBA" base_Element="_CVvxU9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVwYYNzpEeaMeaEvRdRzBA" base_Element="_CVvxU9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVwYYdzpEeaMeaEvRdRzBA" name="Test">
      <annotationParameters xmi:id="_CVwYYtzpEeaMeaEvRdRzBA" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeT3cNzpEeaMeaEvRdRzBA" value="Exception.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVw_cNzpEeaMeaEvRdRzBA" base_Element="_CVwYY9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVw_cdzpEeaMeaEvRdRzBA" base_Element="_CVwYY9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVw_ctzpEeaMeaEvRdRzBA" name="Test">
      <annotationParameters xmi:id="_CVw_c9zpEeaMeaEvRdRzBA" name="expected" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeT3cdzpEeaMeaEvRdRzBA" value="Exception.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVw_ddzpEeaMeaEvRdRzBA" base_Element="_CVw_dNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVxmgNzpEeaMeaEvRdRzBA" base_Element="_CVw_dNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVxmgdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVxmg9zpEeaMeaEvRdRzBA" base_Element="_CVxmgtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVxmhNzpEeaMeaEvRdRzBA" base_Element="_CVxmgtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVxmhdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVxmh9zpEeaMeaEvRdRzBA" base_Element="_CVxmhtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVyNkNzpEeaMeaEvRdRzBA" base_Element="_CVxmhtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVyNkdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVyNk9zpEeaMeaEvRdRzBA" base_Element="_CVyNktzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVyNlNzpEeaMeaEvRdRzBA" base_Element="_CVyNktzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVyNldzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVy0oNzpEeaMeaEvRdRzBA" base_Element="_CVyNltzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVy0odzpEeaMeaEvRdRzBA" base_Element="_CVyNltzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVy0otzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVy0pNzpEeaMeaEvRdRzBA" base_Element="_CVy0o9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVy0pdzpEeaMeaEvRdRzBA" base_Element="_CVy0o9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVy0ptzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVzbsNzpEeaMeaEvRdRzBA" base_Element="_CVy0p9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CVzbsdzpEeaMeaEvRdRzBA" base_Element="_CVy0p9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CVzbstzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV3GEdzpEeaMeaEvRdRzBA" base_Element="_CV3GENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV3GEtzpEeaMeaEvRdRzBA" base_Element="_CV3GENzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV3GE9zpEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV3tIdzpEeaMeaEvRdRzBA" base_Element="_CV3tINzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV3tItzpEeaMeaEvRdRzBA" base_Element="_CV3tINzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV3tI9zpEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV4UMdzpEeaMeaEvRdRzBA" base_Element="_CV4UMNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV4UMtzpEeaMeaEvRdRzBA" base_Element="_CV4UMNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV4UM9zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV4UNdzpEeaMeaEvRdRzBA" base_Element="_CV4UNNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV47QNzpEeaMeaEvRdRzBA" base_Element="_CV4UNNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV47QdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV47Q9zpEeaMeaEvRdRzBA" base_Element="_CV47QtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV47RNzpEeaMeaEvRdRzBA" base_Element="_CV47QtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV47RdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV47R9zpEeaMeaEvRdRzBA" base_Element="_CV47RtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV5iUNzpEeaMeaEvRdRzBA" base_Element="_CV47RtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV5iUdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV5iU9zpEeaMeaEvRdRzBA" base_Element="_CV5iUtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV5iVNzpEeaMeaEvRdRzBA" base_Element="_CV5iUtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV5iVdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV5iV9zpEeaMeaEvRdRzBA" base_Element="_CV5iVtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV6JYNzpEeaMeaEvRdRzBA" base_Element="_CV5iVtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV6JYdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV6JY9zpEeaMeaEvRdRzBA" base_Element="_CV6JYtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV6JZNzpEeaMeaEvRdRzBA" base_Element="_CV6JYtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV6JZdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV6wcNzpEeaMeaEvRdRzBA" base_Element="_CV6JZtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV6wcdzpEeaMeaEvRdRzBA" base_Element="_CV6JZtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV6wctzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV9MsNzpEeaMeaEvRdRzBA" base_Element="_CV8lo9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV9MsdzpEeaMeaEvRdRzBA" base_Element="_CV8lo9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV9MstzpEeaMeaEvRdRzBA" name="BeforeClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV9zwNzpEeaMeaEvRdRzBA" base_Element="_CV9Ms9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV9zwdzpEeaMeaEvRdRzBA" base_Element="_CV9Ms9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV9zwtzpEeaMeaEvRdRzBA" name="AfterClass"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV-a0NzpEeaMeaEvRdRzBA" base_Element="_CV9zw9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV-a0dzpEeaMeaEvRdRzBA" base_Element="_CV9zw9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV-a0tzpEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV-a1NzpEeaMeaEvRdRzBA" base_Element="_CV-a09zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV_B4NzpEeaMeaEvRdRzBA" base_Element="_CV-a09zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV_B4dzpEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV_B49zpEeaMeaEvRdRzBA" base_Element="_CV_B4tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV_B5NzpEeaMeaEvRdRzBA" base_Element="_CV_B4tzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV_B5dzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV_o8NzpEeaMeaEvRdRzBA" base_Element="_CV_B5tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV_o8dzpEeaMeaEvRdRzBA" base_Element="_CV_B5tzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV_o8tzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV_o9NzpEeaMeaEvRdRzBA" base_Element="_CV_o89zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CV_o9dzpEeaMeaEvRdRzBA" base_Element="_CV_o89zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CV_o9tzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWAQANzpEeaMeaEvRdRzBA" base_Element="_CV_o99zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWAQAdzpEeaMeaEvRdRzBA" base_Element="_CV_o99zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWAQAtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWAQBNzpEeaMeaEvRdRzBA" base_Element="_CWAQA9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWAQBdzpEeaMeaEvRdRzBA" base_Element="_CWAQA9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWAQBtzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWR80dzpEeaMeaEvRdRzBA" base_Element="_CWR80NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWR80tzpEeaMeaEvRdRzBA" base_Element="_CWR80NzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWR809zpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_CWTyANzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CWTK9dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CWVAINzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CWUZENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CWW1UNzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CWWOQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWhNYdzpEeaMeaEvRdRzBA" base_Element="_CWhNYNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWh0cNzpEeaMeaEvRdRzBA" base_Element="_CWhNYNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWh0cdzpEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWh0c9zpEeaMeaEvRdRzBA" base_Element="_CWh0ctzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWibgNzpEeaMeaEvRdRzBA" base_Element="_CWh0ctzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWibgdzpEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWibg9zpEeaMeaEvRdRzBA" base_Element="_CWibgtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWibhNzpEeaMeaEvRdRzBA" base_Element="_CWibgtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWibhdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWjCkNzpEeaMeaEvRdRzBA" base_Element="_CWibhtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWjCkdzpEeaMeaEvRdRzBA" base_Element="_CWibhtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWjCktzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWjClNzpEeaMeaEvRdRzBA" base_Element="_CWjCk9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWjCldzpEeaMeaEvRdRzBA" base_Element="_CWjCk9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWjCltzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWjpoNzpEeaMeaEvRdRzBA" base_Element="_CWjCl9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWjpodzpEeaMeaEvRdRzBA" base_Element="_CWjCl9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWjpotzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWjppNzpEeaMeaEvRdRzBA" base_Element="_CWjpo9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWjppdzpEeaMeaEvRdRzBA" base_Element="_CWjpo9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWjpptzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWkQsNzpEeaMeaEvRdRzBA" base_Element="_CWjpp9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWkQsdzpEeaMeaEvRdRzBA" base_Element="_CWjpp9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWkQstzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWkQtNzpEeaMeaEvRdRzBA" base_Element="_CWkQs9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWk3wNzpEeaMeaEvRdRzBA" base_Element="_CWkQs9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWk3wdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWk3w9zpEeaMeaEvRdRzBA" base_Element="_CWk3wtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWk3xNzpEeaMeaEvRdRzBA" base_Element="_CWk3wtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWk3xdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWle0NzpEeaMeaEvRdRzBA" base_Element="_CWk3xtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWle0dzpEeaMeaEvRdRzBA" base_Element="_CWk3xtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWle0tzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWle1NzpEeaMeaEvRdRzBA" base_Element="_CWle09zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWle1dzpEeaMeaEvRdRzBA" base_Element="_CWle09zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWle1tzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWmF4NzpEeaMeaEvRdRzBA" base_Element="_CWle19zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWmF4dzpEeaMeaEvRdRzBA" base_Element="_CWle19zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWmF4tzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWmF5NzpEeaMeaEvRdRzBA" base_Element="_CWmF49zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWmF5dzpEeaMeaEvRdRzBA" base_Element="_CWmF49zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWmF5tzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWms8dzpEeaMeaEvRdRzBA" base_Element="_CWms8NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWms8tzpEeaMeaEvRdRzBA" base_Element="_CWms8NzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWms89zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWms9dzpEeaMeaEvRdRzBA" base_Element="_CWms9NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWms9tzpEeaMeaEvRdRzBA" base_Element="_CWms9NzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWnUANzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWnUAtzpEeaMeaEvRdRzBA" base_Element="_CWnUAdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWnUA9zpEeaMeaEvRdRzBA" base_Element="_CWnUAdzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWnUBNzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWqXUNzpEeaMeaEvRdRzBA" base_Element="_CWpwQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWqXUdzpEeaMeaEvRdRzBA" base_Element="_CWpwQNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWqXUtzpEeaMeaEvRdRzBA" name="Before"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWqXVNzpEeaMeaEvRdRzBA" base_Element="_CWqXU9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWq-YNzpEeaMeaEvRdRzBA" base_Element="_CWqXU9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWq-YdzpEeaMeaEvRdRzBA" name="After"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWq-Y9zpEeaMeaEvRdRzBA" base_Element="_CWq-YtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWq-ZNzpEeaMeaEvRdRzBA" base_Element="_CWq-YtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWq-ZdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWrlcdzpEeaMeaEvRdRzBA" base_Element="_CWrlcNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWrlctzpEeaMeaEvRdRzBA" base_Element="_CWrlcNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWrlc9zpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWrlddzpEeaMeaEvRdRzBA" base_Element="_CWrldNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWsMgNzpEeaMeaEvRdRzBA" base_Element="_CWrldNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWsMgdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWsMg9zpEeaMeaEvRdRzBA" base_Element="_CWsMgtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWsMhNzpEeaMeaEvRdRzBA" base_Element="_CWsMgtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWsMhdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWsMh9zpEeaMeaEvRdRzBA" base_Element="_CWsMhtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWszkNzpEeaMeaEvRdRzBA" base_Element="_CWsMhtzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWszkdzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWszk9zpEeaMeaEvRdRzBA" base_Element="_CWszktzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWszlNzpEeaMeaEvRdRzBA" base_Element="_CWszktzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWszldzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWszl9zpEeaMeaEvRdRzBA" base_Element="_CWszltzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CWtaoNzpEeaMeaEvRdRzBA" base_Element="_CWszltzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CWtaodzpEeaMeaEvRdRzBA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_CaLlYdzpEeaMeaEvRdRzBA" base_Element="_CaLlYNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaMMcdzpEeaMeaEvRdRzBA" base_Element="_CaMMcNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaMzgNzpEeaMeaEvRdRzBA" base_Element="_CaMMctzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaMzgtzpEeaMeaEvRdRzBA" base_Element="_CaMzgdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaNakNzpEeaMeaEvRdRzBA" base_Element="_CaMzg9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaNaktzpEeaMeaEvRdRzBA" base_Element="_CaNakdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaOBoNzpEeaMeaEvRdRzBA" base_Element="_CaNak9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaPPwdzpEeaMeaEvRdRzBA" base_Element="_CaPPwNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CaP20dzpEeaMeaEvRdRzBA" genericsValue="TestRun, Number" base_Element="_CaPPwtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaSTENzpEeaMeaEvRdRzBA" base_Element="_CaRsANzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaSTEtzpEeaMeaEvRdRzBA" base_Element="_CaSTEdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaS6INzpEeaMeaEvRdRzBA" base_Element="_CaSTE9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaS6ItzpEeaMeaEvRdRzBA" base_Element="_CaS6IdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaUIQdzpEeaMeaEvRdRzBA" base_Element="_CaUIQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaUvUNzpEeaMeaEvRdRzBA" base_Element="_CaUIQtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CaZAwNzpEeaMeaEvRdRzBA" base_Element="_CaYZsNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CaZAwdzpEeaMeaEvRdRzBA" base_Element="_CaYZsNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CaZAwtzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_CaiKsNzpEeaMeaEvRdRzBA" base_Element="_CahjoNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaiKstzpEeaMeaEvRdRzBA" base_Element="_CaiKsdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaixwdzpEeaMeaEvRdRzBA" base_Element="_CaixwNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Caixw9zpEeaMeaEvRdRzBA" base_Element="_CaixwtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CajY0dzpEeaMeaEvRdRzBA" base_Element="_CajY0NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CajY09zpEeaMeaEvRdRzBA" base_Element="_CajY0tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cal1EdzpEeaMeaEvRdRzBA" base_Element="_CalOBNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_Cal1EtzpEeaMeaEvRdRzBA" base_Element="_CalOBNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_Cal1E9zpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_CanDMdzpEeaMeaEvRdRzBA" base_Element="_CanDMNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CanqQNzpEeaMeaEvRdRzBA" base_Element="_CanDMtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaoRUdzpEeaMeaEvRdRzBA" base_Element="_CaoRUNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cao4YNzpEeaMeaEvRdRzBA" base_Element="_CaoRUtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cao4YtzpEeaMeaEvRdRzBA" base_Element="_Cao4YdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaqGgdzpEeaMeaEvRdRzBA" base_Element="_CaqGgNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaqtkNzpEeaMeaEvRdRzBA" base_Element="_CaqGgtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaqtktzpEeaMeaEvRdRzBA" base_Element="_CaqtkdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CarUoNzpEeaMeaEvRdRzBA" base_Element="_Caqtk9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CarUotzpEeaMeaEvRdRzBA" base_Element="_CarUodzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Car7sNzpEeaMeaEvRdRzBA" base_Element="_CarUo9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Car7stzpEeaMeaEvRdRzBA" base_Element="_Car7sdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CasiwNzpEeaMeaEvRdRzBA" base_Element="_Car7s9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CasiwtzpEeaMeaEvRdRzBA" base_Element="_CasiwdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CasixNzpEeaMeaEvRdRzBA" base_Element="_Casiw9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CatJ0dzpEeaMeaEvRdRzBA" base_Element="_CatJ0NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cau_AdzpEeaMeaEvRdRzBA" base_Element="_Cau_ANzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CavmENzpEeaMeaEvRdRzBA" base_Element="_Cau_AtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CavmEtzpEeaMeaEvRdRzBA" base_Element="_CavmEdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CawNINzpEeaMeaEvRdRzBA" base_Element="_CavmE9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CawNItzpEeaMeaEvRdRzBA" base_Element="_CawNIdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Caw0MNzpEeaMeaEvRdRzBA" base_Element="_CawNI9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Caw0MtzpEeaMeaEvRdRzBA" base_Element="_Caw0MdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CaxbQNzpEeaMeaEvRdRzBA" base_Element="_Caw0M9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CayCUNzpEeaMeaEvRdRzBA" base_Element="_CaxbQdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca0ekdzpEeaMeaEvRdRzBA" base_Element="_Ca0ekNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca1FoNzpEeaMeaEvRdRzBA" base_Element="_Ca0ektzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca1FotzpEeaMeaEvRdRzBA" base_Element="_Ca1FodzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Ca2TwNzpEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_Ca1stdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Ca2Tw9zpEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_Ca2TwdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Ca260tzpEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_Ca260NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca4I8dzpEeaMeaEvRdRzBA" base_Element="_Ca4I8NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca4wAdzpEeaMeaEvRdRzBA" base_Element="_Ca4wANzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca4wA9zpEeaMeaEvRdRzBA" base_Element="_Ca4wAtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca5XEdzpEeaMeaEvRdRzBA" base_Element="_Ca5XENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca5XE9zpEeaMeaEvRdRzBA" base_Element="_Ca5XEtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca5-INzpEeaMeaEvRdRzBA" base_Element="_Ca5XFNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca5-ItzpEeaMeaEvRdRzBA" base_Element="_Ca5-IdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca6lMNzpEeaMeaEvRdRzBA" base_Element="_Ca5-I9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca7zUNzpEeaMeaEvRdRzBA" base_Element="_Ca7MQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca8aYNzpEeaMeaEvRdRzBA" base_Element="_Ca7zUdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ca9BddzpEeaMeaEvRdRzBA" base_Element="_Ca9Bc9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_Ca9ogNzpEeaMeaEvRdRzBA" base_Element="_Ca9Bc9zpEeaMeaEvRdRzBA">
    <annotations xmi:id="_Ca9ogdzpEeaMeaEvRdRzBA" name="SuppressWarnings">
      <annotationParameters xmi:id="_Ca9ogtzpEeaMeaEvRdRzBA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CeSCQdzpEeaMeaEvRdRzBA" value="&quot;unchecked&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Ca-2oNzpEeaMeaEvRdRzBA" base_Element="_Ca-PkNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ca_dsNzpEeaMeaEvRdRzBA" base_Element="_Ca-2odzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CbAEwtzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_CbAEwNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbDIEdzpEeaMeaEvRdRzBA" base_Element="_CbDIENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbDvINzpEeaMeaEvRdRzBA" base_Element="_CbDIEtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbDvItzpEeaMeaEvRdRzBA" base_Element="_CbDvIdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbEWMNzpEeaMeaEvRdRzBA" base_Element="_CbDvI9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CbHZgNzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_CbGyc9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbLD4dzpEeaMeaEvRdRzBA" base_Element="_CbLD4NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbLq8NzpEeaMeaEvRdRzBA" base_Element="_CbLD4tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbLq8tzpEeaMeaEvRdRzBA" base_Element="_CbLq8dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbQjcNzpEeaMeaEvRdRzBA" base_Element="_CbP8YNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbRKgNzpEeaMeaEvRdRzBA" base_Element="_CbQjcdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbRKgtzpEeaMeaEvRdRzBA" base_Element="_CbRKgdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbRxkNzpEeaMeaEvRdRzBA" base_Element="_CbRKg9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbRxktzpEeaMeaEvRdRzBA" base_Element="_CbRxkdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbSYoNzpEeaMeaEvRdRzBA" base_Element="_CbRxk9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbSYotzpEeaMeaEvRdRzBA" base_Element="_CbSYodzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbS_sNzpEeaMeaEvRdRzBA" base_Element="_CbSYo9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbS_stzpEeaMeaEvRdRzBA" base_Element="_CbS_sdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbTmwNzpEeaMeaEvRdRzBA" base_Element="_CbS_s9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbTmwtzpEeaMeaEvRdRzBA" base_Element="_CbTmwdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbTmxNzpEeaMeaEvRdRzBA" base_Element="_CbTmw9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbUN0dzpEeaMeaEvRdRzBA" base_Element="_CbUN0NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbUN09zpEeaMeaEvRdRzBA" base_Element="_CbUN0tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CbWDAtzpEeaMeaEvRdRzBA" base_Element="_CbWDANzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbaUcNzpEeaMeaEvRdRzBA" base_Element="_CbZtYNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbudgtzpEeaMeaEvRdRzBA" base_Element="_CbudgdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CbvEkdzpEeaMeaEvRdRzBA" base_Element="_CbvEkNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cbyu8NzpEeaMeaEvRdRzBA" base_Element="_CbyH4NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CbzWANzpEeaMeaEvRdRzBA" base_Element="_Cbyu8dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CbzWAdzpEeaMeaEvRdRzBA" base_Element="_Cbyu8dzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CbzWAtzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Cbz9EdzpEeaMeaEvRdRzBA" base_Element="_Cbz9ENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cb0kIdzpEeaMeaEvRdRzBA" genericsValue="TestRunStartTime" base_Element="_Cb0kINzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cb2ZUNzpEeaMeaEvRdRzBA" base_Element="_Cb1yQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_Cb2ZUdzpEeaMeaEvRdRzBA" base_Element="_Cb1yQNzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_Cb2ZUtzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Cb3ncNzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_Cb3AYdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cb4OgNzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_Cb3nctzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cb41kNzpEeaMeaEvRdRzBA" base_Element="_Cb4OgdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_Cb41kdzpEeaMeaEvRdRzBA" base_Element="_Cb4OgdzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_Cb41ktzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Cb6qwNzpEeaMeaEvRdRzBA" genericsValue="StrongRule" base_Element="_Cb6DsNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cb744NzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_Cb7R0dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cb744dzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_Cb7R0tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cb8f89zpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_Cb8f8dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cb9uEtzpEeaMeaEvRdRzBA" base_Element="_Cb9uENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_Cb9uE9zpEeaMeaEvRdRzBA" base_Element="_Cb9uENzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_Cb9uFNzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_CcAKUNzpEeaMeaEvRdRzBA" genericsValue="String, String" base_Element="_Cb_jQtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcAxYNzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_Cb_jQ9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcBYcNzpEeaMeaEvRdRzBA" genericsValue="String, String" base_Element="_CcAxYdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcBYctzpEeaMeaEvRdRzBA" genericsValue="StrongRule" base_Element="_CcAxYtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcB_g9zpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_CcB_gdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CcDNodzpEeaMeaEvRdRzBA" base_Element="_CcDNoNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcJUQNzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_CcItMdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcR3I9zpEeaMeaEvRdRzBA" base_Element="_CcR3INzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Annotations xmi:id="_CcSeMNzpEeaMeaEvRdRzBA" base_Element="_CcR3INzpEeaMeaEvRdRzBA">
    <annotations xmi:id="_CcSeMdzpEeaMeaEvRdRzBA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_CcWIkNzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcVhgtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcWvpdzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcWvodzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcXWsNzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_CcWvotzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcX9wNzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcXWsdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcX9wtzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_CcXWstzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcZL4NzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcYk0tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcZL4dzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcYk09zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcZy89zpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcZy8NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcaaAdzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcZy8dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcbBENzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcZy8tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcboINzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcbBEtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CccPMNzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcboIdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CccPMtzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcboItzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcddUNzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_Ccc2QdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcddVNzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcddUdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CceEYdzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcddUtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcfSgNzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcercdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcfSgdzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_CcerctzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Ccf5ktzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_Ccf5kNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Ccggo9zpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CcggodzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CchHsNzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_CcggotzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CchHs9zpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CchHstzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cchuw9zpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CchuwNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CciV0NzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_CchuwtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cci84NzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_CciV0tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcrfwNzpEeaMeaEvRdRzBA" base_Element="_Ccq4sNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcsG0NzpEeaMeaEvRdRzBA" base_Element="_CcrfwdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ccst4dzpEeaMeaEvRdRzBA" base_Element="_Ccst4NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ccst49zpEeaMeaEvRdRzBA" base_Element="_Ccst4tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CctU8NzpEeaMeaEvRdRzBA" base_Element="_Ccst5NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CctU8tzpEeaMeaEvRdRzBA" base_Element="_CctU8dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CctU9NzpEeaMeaEvRdRzBA" base_Element="_CctU89zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cct8ANzpEeaMeaEvRdRzBA" base_Element="_CctU9dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cct8AtzpEeaMeaEvRdRzBA" base_Element="_Cct8AdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cct8BNzpEeaMeaEvRdRzBA" base_Element="_Cct8A9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcujENzpEeaMeaEvRdRzBA" base_Element="_Cct8BdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcujEtzpEeaMeaEvRdRzBA" base_Element="_CcujEdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcujFNzpEeaMeaEvRdRzBA" base_Element="_CcujE9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcvKINzpEeaMeaEvRdRzBA" base_Element="_CcujFdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcvKItzpEeaMeaEvRdRzBA" base_Element="_CcvKIdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcvKJNzpEeaMeaEvRdRzBA" base_Element="_CcvKI9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcvxMNzpEeaMeaEvRdRzBA" base_Element="_CcvKJdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcvxMtzpEeaMeaEvRdRzBA" base_Element="_CcvxMdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcwYQdzpEeaMeaEvRdRzBA" base_Element="_CcwYQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ccw_UNzpEeaMeaEvRdRzBA" base_Element="_CcwYQtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Ccw_UtzpEeaMeaEvRdRzBA" genericsValue="TestRun" base_Element="_Ccw_UdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CcxmYNzpEeaMeaEvRdRzBA" genericsValue="UnitTest" base_Element="_Ccw_VNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcyNcNzpEeaMeaEvRdRzBA" base_Element="_CcxmZNzpEeaMeaEvRdRzBA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_CcyNctzpEeaMeaEvRdRzBA" name="getAnalyzer" method="_CdjphNzpEeaMeaEvRdRzBA">
      <ownedParameter xmi:id="_CcyNc9zpEeaMeaEvRdRzBA" type="_CWO5gNzpEeaMeaEvRdRzBA" direction="return"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ccy0gdzpEeaMeaEvRdRzBA" base_Element="_Ccy0gNzpEeaMeaEvRdRzBA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_CczbkdzpEeaMeaEvRdRzBA" name="getRunID" method="_CdletdzpEeaMeaEvRdRzBA">
      <ownedParameter xmi:id="_CczbktzpEeaMeaEvRdRzBA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_CczbkNzpEeaMeaEvRdRzBA" base_Property="_Ccy0gNzpEeaMeaEvRdRzBA" siblings="_CeNw0NzpEeaMeaEvRdRzBA" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc0CpdzpEeaMeaEvRdRzBA" base_Element="_Cc0CpNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cc130dzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_Cc130NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc2e5NzpEeaMeaEvRdRzBA" base_Element="_Cc2e49zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc3F8dzpEeaMeaEvRdRzBA" base_Element="_Cc3F8NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc3F9dzpEeaMeaEvRdRzBA" base_Element="_Cc3F8tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc3tANzpEeaMeaEvRdRzBA" base_Element="_Cc3F9tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc47INzpEeaMeaEvRdRzBA" base_Element="_Cc4UFNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc5iMNzpEeaMeaEvRdRzBA" base_Element="_Cc47JdzpEeaMeaEvRdRzBA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_Cc5iMdzpEeaMeaEvRdRzBA" name="getFailurePercentage" method="_CdszcNzpEeaMeaEvRdRzBA">
      <ownedParameter xmi:id="_Cc5iNNzpEeaMeaEvRdRzBA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_Cc5iMtzpEeaMeaEvRdRzBA" name="setFailurePercentage" method="_CdszctzpEeaMeaEvRdRzBA">
      <ownedParameter xmi:id="_Cc5iM9zpEeaMeaEvRdRzBA" name="failurePercentage">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc6JQdzpEeaMeaEvRdRzBA" base_Element="_Cc6JQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc6JQ9zpEeaMeaEvRdRzBA" base_Element="_Cc6JQtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Array xmi:id="_Cc6wUdzpEeaMeaEvRdRzBA" base_Element="_Cc6JRNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc6wU9zpEeaMeaEvRdRzBA" base_Element="_Cc6JRNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc6wVtzpEeaMeaEvRdRzBA" base_Element="_Cc6wVNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc7XYNzpEeaMeaEvRdRzBA" base_Element="_Cc6wV9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc7XYtzpEeaMeaEvRdRzBA" base_Element="_Cc7XYdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cc-asNzpEeaMeaEvRdRzBA" genericsValue="Entry&lt;String, String>" base_Element="_Cc9zotzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc-asdzpEeaMeaEvRdRzBA" base_Element="_Cc9zotzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cc_BwNzpEeaMeaEvRdRzBA" genericsValue="Entry&lt;String, String>" base_Element="_Cc-astzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc_BwdzpEeaMeaEvRdRzBA" base_Element="_Cc-astzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cc_o0NzpEeaMeaEvRdRzBA" genericsValue="Entry&lt;String, String>, String" base_Element="_Cc_BwtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc_o0dzpEeaMeaEvRdRzBA" base_Element="_Cc_BwtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_Cc_o09zpEeaMeaEvRdRzBA" genericsValue="Entry&lt;String, String>, String" base_Element="_Cc_o0tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdAP4NzpEeaMeaEvRdRzBA" base_Element="_Cc_o0tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdA28NzpEeaMeaEvRdRzBA" base_Element="_CdAP4dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdA289zpEeaMeaEvRdRzBA" base_Element="_CdA28dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdBeANzpEeaMeaEvRdRzBA" genericsValue="String, Number" base_Element="_CdA29NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdBeA9zpEeaMeaEvRdRzBA" genericsValue="String, Number" base_Element="_CdBeAtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdBeBNzpEeaMeaEvRdRzBA" base_Element="_CdBeAtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdCFEdzpEeaMeaEvRdRzBA" base_Element="_CdCFENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdCsINzpEeaMeaEvRdRzBA" genericsValue="TreeNode" base_Element="_CdCFEtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdCsIdzpEeaMeaEvRdRzBA" base_Element="_CdCFEtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdCsI9zpEeaMeaEvRdRzBA" base_Element="_CdCsItzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdDTMNzpEeaMeaEvRdRzBA" base_Element="_CdCsJNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdDTMtzpEeaMeaEvRdRzBA" base_Element="_CdDTMdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdDTNNzpEeaMeaEvRdRzBA" base_Element="_CdDTM9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdD6QNzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_CdDTNdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdD6QdzpEeaMeaEvRdRzBA" base_Element="_CdDTNdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdEhUNzpEeaMeaEvRdRzBA" genericsValue="TestedClass" base_Element="_CdD6QtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEhUtzpEeaMeaEvRdRzBA" base_Element="_CdEhUdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEhVNzpEeaMeaEvRdRzBA" base_Element="_CdEhU9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdFIYdzpEeaMeaEvRdRzBA" base_Element="_CdFIYNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdFvcNzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_CdFIYtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdFvcdzpEeaMeaEvRdRzBA" base_Element="_CdFIYtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdFvc9zpEeaMeaEvRdRzBA" base_Element="_CdFvctzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdGWgNzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_CdFvdNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdGWgtzpEeaMeaEvRdRzBA" base_Element="_CdGWgdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdG9kdzpEeaMeaEvRdRzBA" genericsValue="String" base_Element="_CdG9kNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdHkodzpEeaMeaEvRdRzBA" base_Element="_CdHkoNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdILsNzpEeaMeaEvRdRzBA" base_Element="_CdHkotzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdILstzpEeaMeaEvRdRzBA" base_Element="_CdILsdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdILtNzpEeaMeaEvRdRzBA" base_Element="_CdILs9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdIywdzpEeaMeaEvRdRzBA" base_Element="_CdIywNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdIyw9zpEeaMeaEvRdRzBA" base_Element="_CdIywtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdIyxdzpEeaMeaEvRdRzBA" base_Element="_CdIyxNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdJZ0dzpEeaMeaEvRdRzBA" base_Element="_CdJZ0NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdKn8NzpEeaMeaEvRdRzBA" base_Element="_CdKA4tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdKn8tzpEeaMeaEvRdRzBA" base_Element="_CdKn8dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdKn9NzpEeaMeaEvRdRzBA" base_Element="_CdKn89zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdKn9tzpEeaMeaEvRdRzBA" base_Element="_CdKn9dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdLPAdzpEeaMeaEvRdRzBA" base_Element="_CdLPANzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdLPA9zpEeaMeaEvRdRzBA" base_Element="_CdLPAtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdL2EdzpEeaMeaEvRdRzBA" base_Element="_CdL2ENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdMdIdzpEeaMeaEvRdRzBA" base_Element="_CdMdINzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdMdI9zpEeaMeaEvRdRzBA" base_Element="_CdMdItzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdNEMdzpEeaMeaEvRdRzBA" base_Element="_CdNEMNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Array xmi:id="_CdNENNzpEeaMeaEvRdRzBA" dimensions="1" base_Element="_CdNEMtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdNrQNzpEeaMeaEvRdRzBA" base_Element="_CdNEMtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdNrQtzpEeaMeaEvRdRzBA" base_Element="_CdNrQdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdNrRNzpEeaMeaEvRdRzBA" base_Element="_CdNrQ9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdNrRtzpEeaMeaEvRdRzBA" base_Element="_CdNrRdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdOSUdzpEeaMeaEvRdRzBA" base_Element="_CdOSUNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdO5YNzpEeaMeaEvRdRzBA" base_Element="_CdOSUtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdO5YtzpEeaMeaEvRdRzBA" base_Element="_CdO5YdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdO5ZNzpEeaMeaEvRdRzBA" base_Element="_CdO5Y9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Array xmi:id="_CdPgcdzpEeaMeaEvRdRzBA" base_Element="_CdO5ZdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdPgc9zpEeaMeaEvRdRzBA" base_Element="_CdO5ZdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdPgddzpEeaMeaEvRdRzBA" base_Element="_CdPgdNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdQHgdzpEeaMeaEvRdRzBA" base_Element="_CdQHgNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdQukNzpEeaMeaEvRdRzBA" base_Element="_CdQHg9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdQulNzpEeaMeaEvRdRzBA" base_Element="_CdQuk9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdRVo9zpEeaMeaEvRdRzBA" base_Element="_CdRVotzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdR8sNzpEeaMeaEvRdRzBA" base_Element="_CdRVpNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdR8tNzpEeaMeaEvRdRzBA" base_Element="_CdR8s9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdSjwNzpEeaMeaEvRdRzBA" base_Element="_CdR8tdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdSjwtzpEeaMeaEvRdRzBA" base_Element="_CdSjwdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdSjxNzpEeaMeaEvRdRzBA" base_Element="_CdSjw9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdTK0NzpEeaMeaEvRdRzBA" base_Element="_CdSjxdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdTK0tzpEeaMeaEvRdRzBA" base_Element="_CdTK0dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdTx4dzpEeaMeaEvRdRzBA" base_Element="_CdTx4NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdUY8NzpEeaMeaEvRdRzBA" base_Element="_CdTx4tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdUY9NzpEeaMeaEvRdRzBA" base_Element="_CdUY8dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdVAANzpEeaMeaEvRdRzBA" base_Element="_CdUY9dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdVAAtzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CdVAAdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdVAA9zpEeaMeaEvRdRzBA" base_Element="_CdVAAdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdVnE9zpEeaMeaEvRdRzBA" base_Element="_CdVnENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Generics xmi:id="_CdVnFdzpEeaMeaEvRdRzBA" genericsValue="List&lt;TestedClass>, Integer" base_Element="_CdVnFNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdWOIdzpEeaMeaEvRdRzBA" base_Element="_CdVnFNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdWOJNzpEeaMeaEvRdRzBA" base_Element="_CdWOItzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdW1MdzpEeaMeaEvRdRzBA" base_Element="_CdW1MNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdXcQdzpEeaMeaEvRdRzBA" base_Element="_CdXcQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdYDUNzpEeaMeaEvRdRzBA" base_Element="_CdXcQtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdYDUtzpEeaMeaEvRdRzBA" base_Element="_CdYDUdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdYDVNzpEeaMeaEvRdRzBA" base_Element="_CdYDU9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdYqYNzpEeaMeaEvRdRzBA" base_Element="_CdYDVdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdYqYtzpEeaMeaEvRdRzBA" base_Element="_CdYqYdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdYqZNzpEeaMeaEvRdRzBA" base_Element="_CdYqY9zpEeaMeaEvRdRzBA"/>
  <uml:OpaqueBehavior xmi:id="_CdjphNzpEeaMeaEvRdRzBA" name="getAnalyzer" specification="_CcyNctzpEeaMeaEvRdRzBA">
    <ownedParameter xmi:id="_CdkQkNzpEeaMeaEvRdRzBA" type="_CWO5gNzpEeaMeaEvRdRzBA" direction="return"/>
    <language>java</language>
    <body>return (AprioriAnalyzer) analyzer;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_CdletdzpEeaMeaEvRdRzBA" name="getRunID" specification="_CczbkdzpEeaMeaEvRdRzBA">
    <ownedParameter xmi:id="_CdlettzpEeaMeaEvRdRzBA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return runID;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_CdszcNzpEeaMeaEvRdRzBA" name="getFailurePercentage" specification="_Cc5iMdzpEeaMeaEvRdRzBA">
    <ownedParameter xmi:id="_CdszcdzpEeaMeaEvRdRzBA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </ownedParameter>
    <language>java</language>
    <body>calculateFailurePercentage();
		return failurePercentage;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_CdszctzpEeaMeaEvRdRzBA" name="setFailurePercentage" specification="_Cc5iMtzpEeaMeaEvRdRzBA">
    <ownedParameter xmi:id="_Cdszc9zpEeaMeaEvRdRzBA" name="failurePercentage">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>this.failurePercentage = failurePercentage;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_CeNw0dzpEeaMeaEvRdRzBA" base_Property="_CeNw0NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CeNw0tzpEeaMeaEvRdRzBA" base_Element="_CeNw0NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CeqcwNzpEeaMeaEvRdRzBA" base_Element="_Cep1sNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ceqcw9zpEeaMeaEvRdRzBA" base_Element="_CeqcwdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CerD0NzpEeaMeaEvRdRzBA" base_Element="_CeqcxNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CerD09zpEeaMeaEvRdRzBA" base_Element="_CerD0dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cerq4NzpEeaMeaEvRdRzBA" base_Element="_CerD1NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cerq49zpEeaMeaEvRdRzBA" base_Element="_Cerq4dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CesR8NzpEeaMeaEvRdRzBA" base_Element="_Cerq5NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CesR89zpEeaMeaEvRdRzBA" base_Element="_CesR8dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ces5ANzpEeaMeaEvRdRzBA" base_Element="_CesR9NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ces5A9zpEeaMeaEvRdRzBA" base_Element="_Ces5AdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CetgENzpEeaMeaEvRdRzBA" base_Element="_Ces5BNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CetgE9zpEeaMeaEvRdRzBA" base_Element="_CetgEdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CetgFtzpEeaMeaEvRdRzBA" base_Element="_CetgFNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CeuHItzpEeaMeaEvRdRzBA" base_Element="_CeuHINzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CeuHJdzpEeaMeaEvRdRzBA" base_Element="_CeuHI9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CeuuMNzpEeaMeaEvRdRzBA" base_Element="_CeuHJtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CeuuM9zpEeaMeaEvRdRzBA" base_Element="_CeuuMdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CevVQNzpEeaMeaEvRdRzBA" base_Element="_CeuuNNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CevVQ9zpEeaMeaEvRdRzBA" base_Element="_CevVQdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cev8UNzpEeaMeaEvRdRzBA" base_Element="_CevVRNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cev8U9zpEeaMeaEvRdRzBA" base_Element="_Cev8UdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CewjYNzpEeaMeaEvRdRzBA" base_Element="_Cev8VNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CewjY9zpEeaMeaEvRdRzBA" base_Element="_CewjYdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CewjZtzpEeaMeaEvRdRzBA" base_Element="_CewjZNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CexKctzpEeaMeaEvRdRzBA" base_Element="_CexKcNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CexxgNzpEeaMeaEvRdRzBA" base_Element="_CexKc9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cexxg9zpEeaMeaEvRdRzBA" base_Element="_CexxgdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CeyYkNzpEeaMeaEvRdRzBA" base_Element="_CexxhNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CeyYk9zpEeaMeaEvRdRzBA" base_Element="_CeyYkdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cey_oNzpEeaMeaEvRdRzBA" base_Element="_CeyYlNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cey_o9zpEeaMeaEvRdRzBA" base_Element="_Cey_odzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CezmsNzpEeaMeaEvRdRzBA" base_Element="_Cey_pNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cezms9zpEeaMeaEvRdRzBA" base_Element="_CezmsdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CezmttzpEeaMeaEvRdRzBA" base_Element="_CezmtNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce0NwNzpEeaMeaEvRdRzBA" base_Element="_Cezmt9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce0Nw9zpEeaMeaEvRdRzBA" base_Element="_Ce0NwdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce000NzpEeaMeaEvRdRzBA" base_Element="_Ce0NxNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce0009zpEeaMeaEvRdRzBA" base_Element="_Ce000dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce1b4NzpEeaMeaEvRdRzBA" base_Element="_Ce001NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce1b49zpEeaMeaEvRdRzBA" base_Element="_Ce1b4dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce1b5tzpEeaMeaEvRdRzBA" base_Element="_Ce1b5NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce2C8tzpEeaMeaEvRdRzBA" base_Element="_Ce2C8NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce2qANzpEeaMeaEvRdRzBA" base_Element="_Ce2C89zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce2qA9zpEeaMeaEvRdRzBA" base_Element="_Ce2qAdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce2qBtzpEeaMeaEvRdRzBA" base_Element="_Ce2qBNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce3REtzpEeaMeaEvRdRzBA" base_Element="_Ce3RENzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce3RFdzpEeaMeaEvRdRzBA" base_Element="_Ce3RE9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce34INzpEeaMeaEvRdRzBA" base_Element="_Ce3RFtzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce34I9zpEeaMeaEvRdRzBA" base_Element="_Ce34IdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce4fMNzpEeaMeaEvRdRzBA" base_Element="_Ce34JNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce4fM9zpEeaMeaEvRdRzBA" base_Element="_Ce4fMdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce5GQNzpEeaMeaEvRdRzBA" base_Element="_Ce4fNNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Ce5GQ9zpEeaMeaEvRdRzBA" base_Element="_Ce5GQdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfPrkNzpEeaMeaEvRdRzBA" base_Element="_Ce5GRNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfQSotzpEeaMeaEvRdRzBA" base_Element="_CfQSoNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfQ5sNzpEeaMeaEvRdRzBA" base_Element="_CfQSo9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfQ5s9zpEeaMeaEvRdRzBA" base_Element="_CfQ5sdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfRgwtzpEeaMeaEvRdRzBA" base_Element="_CfRgwNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfRgxdzpEeaMeaEvRdRzBA" base_Element="_CfRgw9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfSH0tzpEeaMeaEvRdRzBA" base_Element="_CfSH0NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfSH1dzpEeaMeaEvRdRzBA" base_Element="_CfSH09zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfSu4NzpEeaMeaEvRdRzBA" base_Element="_CfSH1tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfSu49zpEeaMeaEvRdRzBA" base_Element="_CfSu4dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfTV8NzpEeaMeaEvRdRzBA" base_Element="_CfSu5NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfTV89zpEeaMeaEvRdRzBA" base_Element="_CfTV8dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfTV9tzpEeaMeaEvRdRzBA" base_Element="_CfTV9NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfT9AtzpEeaMeaEvRdRzBA" base_Element="_CfT9ANzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfUkENzpEeaMeaEvRdRzBA" base_Element="_CfT9A9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfVLINzpEeaMeaEvRdRzBA" base_Element="_CfUkEdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfVLI9zpEeaMeaEvRdRzBA" base_Element="_CfVLIdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfVyMNzpEeaMeaEvRdRzBA" base_Element="_CfVLJNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfVyM9zpEeaMeaEvRdRzBA" base_Element="_CfVyMdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfWZQNzpEeaMeaEvRdRzBA" base_Element="_CfVyNNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfWZQ9zpEeaMeaEvRdRzBA" base_Element="_CfWZQdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfXAUNzpEeaMeaEvRdRzBA" base_Element="_CfWZRNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfXAU9zpEeaMeaEvRdRzBA" base_Element="_CfXAUdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfXnYNzpEeaMeaEvRdRzBA" base_Element="_CfXAVNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfXnY9zpEeaMeaEvRdRzBA" base_Element="_CfXnYdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfYOctzpEeaMeaEvRdRzBA" base_Element="_CfYOcNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfY1gNzpEeaMeaEvRdRzBA" base_Element="_CfYOc9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfY1g9zpEeaMeaEvRdRzBA" base_Element="_CfY1gdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfZcktzpEeaMeaEvRdRzBA" base_Element="_CfZckNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfZcldzpEeaMeaEvRdRzBA" base_Element="_CfZck9zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfaDoNzpEeaMeaEvRdRzBA" base_Element="_CfZcltzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfaDo9zpEeaMeaEvRdRzBA" base_Element="_CfaDodzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfaqsNzpEeaMeaEvRdRzBA" base_Element="_CfaDpNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cfaqs9zpEeaMeaEvRdRzBA" base_Element="_CfaqsdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfbRwNzpEeaMeaEvRdRzBA" base_Element="_CfaqtNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfbRw9zpEeaMeaEvRdRzBA" base_Element="_CfbRwdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cfb40NzpEeaMeaEvRdRzBA" base_Element="_CfbRxNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cfb409zpEeaMeaEvRdRzBA" base_Element="_Cfb40dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cfcf4NzpEeaMeaEvRdRzBA" base_Element="_Cfb41NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cfcf49zpEeaMeaEvRdRzBA" base_Element="_Cfcf4dzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cfcf5tzpEeaMeaEvRdRzBA" base_Element="_Cfcf5NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfdG8tzpEeaMeaEvRdRzBA" base_Element="_CfdG8NzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfdG9dzpEeaMeaEvRdRzBA" base_Element="_CfdG89zpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfduANzpEeaMeaEvRdRzBA" base_Element="_CfdG9tzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfduA9zpEeaMeaEvRdRzBA" base_Element="_CfduAdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfeVENzpEeaMeaEvRdRzBA" base_Element="_CfduBNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfeVE9zpEeaMeaEvRdRzBA" base_Element="_CfeVEdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cfe8INzpEeaMeaEvRdRzBA" base_Element="_CfeVFNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_Cfe8I9zpEeaMeaEvRdRzBA" base_Element="_Cfe8IdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CffjMNzpEeaMeaEvRdRzBA" base_Element="_Cfe8JNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CffjM9zpEeaMeaEvRdRzBA" base_Element="_CffjMdzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfgKQtzpEeaMeaEvRdRzBA" base_Element="_CfgKQNzpEeaMeaEvRdRzBA"/>
  <UMLLabProfile:Reference xmi:id="_CfgxUNzpEeaMeaEvRdRzBA" base_Element="_CfgKQ9zpEeaMeaEvRdRzBA"/>
</xmi:XMI>
